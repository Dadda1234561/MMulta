/*===========================================================================
    C++ class definitions exported from UnrealScript.
    This is automatically generated by the tools.
    DO NOT modify this manually! Edit the corresponding .uc files instead!
===========================================================================*/
#if SUPPORTS_PRAGMA_PACK
#pragma pack (push,4)
#endif

#ifndef NWINDOW_API
#define NWINDOW_API DLL_IMPORT
#endif

#ifndef NAMES_ONLY
#define AUTOGENERATE_NAME(name) extern NWINDOW_API FName NWINDOW_##name;
#define AUTOGENERATE_FUNCTION(cls,idx,name)
#endif

AUTOGENERATE_NAME(OnButtonTimer)
AUTOGENERATE_NAME(OnCallUCFunction)
AUTOGENERATE_NAME(OnCallUCLogic)
AUTOGENERATE_NAME(OnChangeEditBox)
AUTOGENERATE_NAME(OnChatMarkedEditBox)
AUTOGENERATE_NAME(OnCilckCheckBoxWithHandle)
AUTOGENERATE_NAME(OnClickButton)
AUTOGENERATE_NAME(OnClickButtonWithHandle)
AUTOGENERATE_NAME(OnClickCheckBox)
AUTOGENERATE_NAME(OnClickHeaderCtrl)
AUTOGENERATE_NAME(OnClickItem)
AUTOGENERATE_NAME(OnClickListCtrlRecord)
AUTOGENERATE_NAME(OnClickRichListButton)
AUTOGENERATE_NAME(OnComboBoxItemSelected)
AUTOGENERATE_NAME(OnCompleteEditBox)
AUTOGENERATE_NAME(OnDBClickItem)
AUTOGENERATE_NAME(OnDBClickItemWithHandle)
AUTOGENERATE_NAME(OnDBClickListBoxItem)
AUTOGENERATE_NAME(OnDBClickListCtrlRecord)
AUTOGENERATE_NAME(OnDefaultPosition)
AUTOGENERATE_NAME(OnDragItemEnd)
AUTOGENERATE_NAME(OnDragItemStart)
AUTOGENERATE_NAME(OnDragItemStartTiny)
AUTOGENERATE_NAME(OnDrawerHideFinished)
AUTOGENERATE_NAME(OnDrawerShowFinished)
AUTOGENERATE_NAME(OnDropItem)
AUTOGENERATE_NAME(OnDropItemSource)
AUTOGENERATE_NAME(OnDropItemWithHandle)
AUTOGENERATE_NAME(OnDropWnd)
AUTOGENERATE_NAME(OnEnterState)
AUTOGENERATE_NAME(OnEvent)
AUTOGENERATE_NAME(OnEventWithParamMap)
AUTOGENERATE_NAME(OnExitState)
AUTOGENERATE_NAME(OnFlashCtrlMsg)
AUTOGENERATE_NAME(OnFlashLoaded)
AUTOGENERATE_NAME(OnFocus)
AUTOGENERATE_NAME(OnHide)
AUTOGENERATE_NAME(OnHtmlMsgHideWindow)
AUTOGENERATE_NAME(OnKeyDown)
AUTOGENERATE_NAME(OnKeyUp)
AUTOGENERATE_NAME(OnLButtonClickListBoxItem)
AUTOGENERATE_NAME(OnLButtonDblClick)
AUTOGENERATE_NAME(OnLButtonDown)
AUTOGENERATE_NAME(OnLButtonUp)
AUTOGENERATE_NAME(OnLoad)
AUTOGENERATE_NAME(OnMButtonDown)
AUTOGENERATE_NAME(OnMButtonUp)
AUTOGENERATE_NAME(OnMinimize)
AUTOGENERATE_NAME(OnModifyCurrentTickSliderCtrl)
AUTOGENERATE_NAME(OnMouseMove)
AUTOGENERATE_NAME(OnMouseOut)
AUTOGENERATE_NAME(OnMouseOver)
AUTOGENERATE_NAME(OnProgressTimeUp)
AUTOGENERATE_NAME(OnPropertyControllerResize)
AUTOGENERATE_NAME(OnRButtonClickListBoxItem)
AUTOGENERATE_NAME(OnRButtonDblClick)
AUTOGENERATE_NAME(OnRButtonDown)
AUTOGENERATE_NAME(OnRButtonUp)
AUTOGENERATE_NAME(OnRClickButton)
AUTOGENERATE_NAME(OnRClickButtonWithHandle)
AUTOGENERATE_NAME(OnRClickItem)
AUTOGENERATE_NAME(OnRClickItemWithHandle)
AUTOGENERATE_NAME(OnRClickListCtrlRecord)
AUTOGENERATE_NAME(OnRDBClickItem)
AUTOGENERATE_NAME(OnReceivedCloseUI)
AUTOGENERATE_NAME(OnRegisterEvent)
AUTOGENERATE_NAME(OnRollOverListCtrlRecord)
AUTOGENERATE_NAME(OnScrollMove)
AUTOGENERATE_NAME(OnSelectItemWithHandle)
AUTOGENERATE_NAME(OnSendPacketWhenHiding)
AUTOGENERATE_NAME(OnSetFocus)
AUTOGENERATE_NAME(OnShow)
AUTOGENERATE_NAME(OnTabMerge)
AUTOGENERATE_NAME(OnTabSplit)
AUTOGENERATE_NAME(OnTextureAnimEnd)
AUTOGENERATE_NAME(OnTick)
AUTOGENERATE_NAME(OnTimer)

#ifndef NAMES_ONLY

enum ECoinType
{
    ERCT_ALL                =0,
    ERCT_LCOIN              =1,
    ERCT_ADENA              =2,
    ERCT_MAX                =3,
};
enum EFireAbilityType
{
    EFAT_PRIMAL_FIRE        =0,
    EFAT_PRIMAL_LIFE        =1,
    EFAT_PIECE_OF_FIRE      =2,
    EFAT_TOTEM_OF_FIRE      =3,
    EFAT_FIGHTING_SPIRIT    =4,
    EFAT_MAX                =5,
};
enum ENQuestType
{
    NQT_NONE                =0,
    NQT_ONETIME             =1,
    NQT_DAILY               =2,
    NQT_WEEKLY              =3,
    NQT_REPEAT              =4,
    NQT_MAX                 =5,
};
enum EStringMatchingItemFilter
{
    SMIF_AllItem            =0,
    SMIF_WorldExchangeItem  =1,
    SMIF_MAX                =2,
};
enum ValidateEnum
{
    PDEFEND                 =0,
    MDEFEND                 =1,
    pAttack                 =2,
    mAttack                 =3,
    pAttackSpeed            =4,
    mAttackSpeed            =5,
    PSKILLSPEED             =6,
    PHIT                    =7,
    MHIT                    =8,
    PCRITICAL               =9,
    MCRITICAL               =10,
    Speed                   =11,
    ShieldDefense           =12,
    ShieldDefenseRate       =13,
    pAvoid                  =14,
    mAvoid                  =15,
    Max                     =16,
};
enum EScalableSizeType
{
    SSIZE_Type1             =0,
    SSIZE_Type2             =1,
    SSIZE_Type3             =2,
    SSIZE_MAX               =3,
};
enum ECombinationAutomaticType
{
    ECAT_NONE               =0,
    ECAT_REPEAT             =1,
    ECAT_GROWNUP            =2,
    ECAT_LEVELUP            =3,
    ECAT_MAX                =4,
    ECAT_MAX                =5,
};
enum EWorldCastleWarMapNPCType
{
    WCWMNT_Occupy           =0,
    WCWMNT_Door             =1,
    WCWMNT_Golem            =2,
    WCWMNT_MAX              =3,
};
enum EItemAnnounce
{
    IA_ENCHANT              =0,
    IA_REAR_ITEM            =1,
    IA_CRAFT                =2,
    IA_PURCHASE_LIMIT_SHOP  =3,
    IA_RECIPE               =4,
    IA_FESTIVAL             =5,
    IA_PURCHASE_LIMIT_SERVER_CRAFT=6,
    IA_FIXED_REAR_ITEM      =7,
    IA_COMBINATION          =8,
    IA_PURCHASE_SPECIAL_CRAFT=9,
    IA_MAX                  =10,
};
enum BlessOptionType
{
    BOT_BASE                =0,
    BOT_ENCHANT             =1,
    BOT_MAX                 =2,
};
enum PetEvolveConditionType
{
    PECT_NONE               =0,
    PECT_LEVEL              =1,
    PECT_MAX                =2,
};
enum MableGameEventType
{
    MGET_NONE               =0,
    MGET_BACK               =1,
    MGET_NEXT               =2,
    MGET_WARP               =3,
    MGET_PRISON             =4,
    MGET_REWARD             =5,
    MGET_MAX                =6,
};
enum RandomCraftAnnounceGrade
{
    RCAG_None               =0,
    RCAG_1                  =1,
    RCAG_2                  =2,
    RCAG_3                  =3,
    RCAG_MAX                =4,
};
enum RaidNPCRespawnType
{
    RNRT_NoUse              =0,
    RNRT_Unknown            =1,
    RNRT_AfterDeath         =2,
    RNRT_SpecificTime       =3,
    RNRT_SpecificDayTime    =4,
    RNRT_MAX                =5,
    RNRT_MAX                =6,
};
enum StatBonusType
{
    SBT_STR                 =0,
    SBT_INT                 =1,
    SBT_DEX                 =2,
    SBT_WIT                 =3,
    SBT_CON                 =4,
    SBT_MEN                 =5,
    SBT_MAX                 =6,
    SBT_MAX                 =7,
};
enum RankingType
{
    RANKTYPE_Character      =0,
    RANKTYPE_Olympiad       =1,
    RANKTYPE_Pledge         =2,
    RANKTYPE_PVP            =3,
    RANKTYPE_MAX            =4,
    RANKTYPE_MAX            =5,
};
enum RankingScope
{
    TopN                    =0,
    AroundMe                =1,
};
enum RankingGroup
{
    ServerGroup             =0,
    RaceGroup               =1,
    Pledge                  =2,
    Friends                 =3,
    ClassRankingGroup       =4,
};
enum GACHA_SHOP_RESULT_TYPE
{
    GACHA_SHOP_GACHA_SUCESS =0,
    GACHA_SHOP_GACHA_SYSTEM_FAIL=1,
    GACHA_SHOP_NOT_ENOUGH_COST_ITEM=2,
    GACHA_SHOP_NOT_EVENT_TIME=3,
    GACHA_MAX               =4,
};
enum DamageTypeEnum
{
    DAMAGE_NONE             =0,
    DAMAGE_NORMAL           =1,
    DAMAGE_HEIGHT           =2,
    DAMAGE_WATER            =3,
    DAMAGE_SKILL            =4,
    DAMAGE_SUICIDE          =5,
    DAMAGE_AREA             =6,
    DAMAGE_OVER_HIT         =7,
    DAMAGE_POISON           =8,
    DAMAGE_TRANSFER         =9,
    DAMAGE_CHRONO           =10,
    DAMAGE_CURSED_WEAPON_EXPIRED=11,
    DAMAGE_FIST             =12,
    DAMAGE_SUICIDE_SKILL    =13,
    DAMAGE_SHIELD           =14,
    DAMAGE_EVENT            =15,
    DAMAGE_END              =16,
    DAMAGE_MAX              =17,
};
enum AttackerTypeEnum
{
    ATTACKER_NONE           =0,
    ATTACKER_NPC            =1,
    ATTACKER_PC             =2,
    ATTACKER_MAX            =3,
};
enum PAYBACK_EVENT_ID_TYPE
{
    CR_EVENT_INVALID        =0,
    CR_EVENT_LCOIN_2018     =1,
    CR_EVENT_MAX            =2,
    CR_MAX                  =3,
};
enum HTML_OPEN_TYPE
{
    OPEN_HTML_NONE_TYPE     =0,
    OPEN_PCCAFE_HTML        =1,
    OPEN_PLSHOP_HTML        =2,
    OPEN_15EVENT_HTML       =3,
    OPEN_LCOINSHOP_HTML     =4,
    OPEN_PREMIUM_MANAGER    =5,
    OPEN_PAYBACK_HELP_HTML  =6,
    OPEN_EINHASAD_COIN_HTML =7,
    OPEN_HTML_MAX_TYPE      =8,
    OPEN_MAX                =9,
};
enum ELCoinShopFilterType
{
    LCoinShopFilter_None    =0,
    LCoinShopFilter_RareWeapon=1,
    LCoinShopFilter_NormalWeapon=2,
    LCoinShopFilter_RareArmor=3,
    LCoinShopFilter_HeavyArmor=4,
    LCoinShopFilter_LightArmor=5,
    LCoinShopFilter_Robe    =6,
    LCoinShopFilter_Shield  =7,
    LCoinShopFilter_Dye     =8,
    LCoinShopFilter_Scroll  =9,
    LCoinShopFilter_Etc     =10,
    LCoinShopFilter_Belt    =11,
    LCoinShopFilter_Elixir  =12,
    LCoinShopFilter_Skillbook_S1=13,
    LCoinShopFilter_Skillbook_S2=14,
    LCoinShopFilter_Skillbook_S3=15,
    LCoinShopFilter_Max     =16,
    LCoinShopFilter_MAX     =17,
};
enum ELCoinShopMarkType
{
    LCoinShopMark_None      =0,
    LCoinShopMark_Event     =1,
    LCoinShopMark_Sale      =2,
    LCoinShopMark_Best      =3,
    LCoinShopMark_Limited   =4,
    LCoinShopMark_New       =5,
    LCoinShopMark_Relay     =6,
    LCoinShopMark_Max       =7,
    LCoinShopMark_MAX       =8,
};
enum PLSHOP_LIMIT_TYPE
{
    PLSHOP_LIMIT_NONE       =0,
    PLSHOP_LIMIT_CHARACTER  =1,
    PLSHOP_LIMIT_ACCOUNT    =2,
    PLSHOP_LIMIT_TYPE_MAX   =3,
    PLSHOP_MAX              =4,
};
enum PLSHOP_BUY_RESULT_TYPE
{
    PLSHOP_BUY_SUCCESS      =0,
    PLSHOP_BUY_SYSTEM_FAIL  =1,
    PLSHOP_BUY_NOT_ENOUGH_COST_ITEM=2,
    PLSHOP_BUY_NOT_ENOUGH_ITEM_AMOUNT=3,
    PLSHOP_BUY_NOT_ENOUGH_LEVEL=4,
    PLSHOP_BUY_NOT_EVENT_TIME=5,
    PLSHOP_BUY_NOT_ENOUGH_SERVER_ITEM_AMOUNT=6,
    PLSHOP_BUY_NOT_ENOUGH_INVENTORY=7,
    PLSHOP_BUY_NOT_ENOUGH_CARRY_WEIGHT=8,
    PLSHOP_BUY_NOT_ENOUGH_PLEDGE_LEVEL=9,
    PLSHOP_BUY_NOT_ALIVE    =10,
    PLSHOP_BUY_RESULT_TYPE_MAX=11,
    PLSHOP_MAX              =12,
};
enum PLSHOP_EVENT_TYPE
{
    PLSHOP_EVNET_NONE       =0,
    PLSHOP_LIMITED_PERIOD   =1,
    PLSHOP_MAX              =2,
};
enum PLSHOP_RESET_TYPE
{
    PLSHOP_RESET_ALWAYS     =0,
    PLSHOP_RESET_ONEDAY     =1,
    PLSHOP_RESET_ONEWEEK    =2,
    PLSHOP_RESET_ONEMONTH   =3,
    PLSHOP_RESET_TYPE_MAX   =4,
    PLSHOP_MAX              =5,
};
enum EAutomaticUseSkillType
{
    AUST_NONE               =0,
    AUST_BUFF_SKILL         =1,
    AUST_SEQUENTIAL_SKILL   =2,
    AUST_PRIORITY_BUFF_SKILL=3,
    AUST_MAX                =4,
    AUST_MAX                =5,
};
enum EOnedayRewardCheckType
{
    OneDayRCT_CHAR          =0,
    OneDayRCT_ACCOUNT       =1,
    OneDayRCT_MAX           =2,
    OneDayRCT_MAX           =3,
};
enum EAutomaticUseItemType
{
    AUIT_NONE               =0,
    AUIT_ITEM               =1,
    AUIT_HP_POTION          =2,
    AUIT_HP_PET_POTION      =3,
    AUIT_BOX                =4,
    AUIT_MAX                =5,
    AUIT_MAX                =6,
};
enum EAutoNextTargetMode
{
    ANTM_DEFAULT            =0,
    ANTM_HOSTILE_NPC        =1,
    ANTM_HOSTILE_PC         =2,
    ANTM_FRIENDLY_NPC       =3,
    ANTM_DEFAULT_AND_COUNTER_ATTACK=4,
    ANTM_MAX                =5,
    ANTM_MAX                =6,
};
enum EWebMethodType
{
    EWMT_GET                =0,
    EWMT_POST               =1,
    EWMT_MAX                =2,
};
enum EFactionRequsetType
{
    FIRT_NONE               =0,
    FIRT_SHOW               =1,
    FIRT_REFRESH            =2,
    FIRT_MAX                =3,
};
enum EKeepSelectType
{
    EKST_NORMAL             =0,
    EKST_ENCHANT            =1,
    EKST_MAX                =2,
};
enum EKeepType
{
    EKT_NONE                =0,
    EKT_INDIVIDUAL          =1,
    EKT_PLEDGE              =2,
    EKT_INDIVIDUAL_PLEDGE   =3,
    EKT_CASTLE              =4,
    EKT_INDIVIDUAL_CASTLE   =5,
    EKT_PLEDGE_CASTLE       =6,
    EKT_ALL                 =7,
    EKT_ACCOUNTSHARE        =8,
    EKT_INDIVIDUAL_ACCOUNTSHARE=9,
    EKT_PLEDGE_ACCOUNTSHARE =10,
    EKT_INDIVIDUAL_PLEDGE_ACCOUNTSHARE=11,
    EKT_CASTLE_ACCOUNTSHARE =12,
    EKT_INDIVIDUAL_CASTLE_ACCOUNTSHARE=13,
    EKT_PLEDGE_CASTLE_ACCOUNTSHARE=14,
    EKT_ALL_ACCOUNTSHARE    =15,
    EKT_MAX                 =16,
};
enum EDrawItemAlignType
{
    DIAT_LEFT               =0,
    DIAT_CENTER             =1,
    DIAT_RIGHT              =2,
    DIAT_RIGHT_BOTTOM       =3,
    DIAT_MAX                =4,
};
enum EDrawItemType
{
    DIT_BLANK               =0,
    DIT_TEXT                =1,
    DIT_TEXTURE             =2,
    DIT_SPLITLINE           =3,
    DIT_TEXTLINK            =4,
    DIT_OVERLAY_TEXTURE     =5,
    DIT_FORMATTEXT          =6,
    DIT_MAX                 =7,
};
enum E_CHARACTER_COLOR
{
    ECC_NONE                =0,
    ECC_RED                 =1,
    ECC_BLUE                =2,
    ECC_PURPLE              =3,
    ECC_MAX                 =4,
    ECC_MAX                 =5,
};
enum ESkillConditionEquipType
{
    SCET_NONE               =0,
    SCET_SHIELD             =1,
    SCET_WEAPON             =2,
    SCET_MAX                =3,
    SCET_MAX                =4,
};
enum ESkillAffectScope
{
    ESkillAffect_None       =0,
    ESkillAffect_Single     =1,
    ESkillAffect_Party      =2,
    ESkillAffect_Pledge     =3,
    ESkillAffect_Fan        =4,
    ESkillAffect_PointBlank =5,
    ESkillAffect_RangeSortByDist=6,
    ESkillAffect_RangeSortByHp=7,
    ESkillAffect_Range      =8,
    ESkillAffect_Square     =9,
    ESkillAffect_Range_sort_by_block_act=10,
    ESkillAffect_Fan_with_relation=11,
    ESkillAffect_Point_blank_with_relation=12,
    ESkillAffect_Range_with_relation=13,
    ESkillAffect_Square_with_relation=14,
    ESkillAffect_Max        =15,
    ESkillAffect_MAX        =16,
};
enum ESkillTargetType
{
    ESkillTarget_None       =0,
    ESkillTarget_Enemy      =1,
    ESkillTarget_EnemyOnly  =2,
    ESkillTarget_EnemyNot   =3,
    ESkillTarget_Self       =4,
    ESkillTarget_Summon     =5,
    ESkillTarget_Target     =6,
    ESkillTarget_TargetSelf =7,
    ESkillTarget_RealEnemyOnly=8,
    ESkillTarget_Max        =9,
    ESkillTarget_MAX        =10,
};
enum ESkillTraitType
{
    ESkillTrait_None        =0,
    ESkillTrait_Hold        =1,
    ESkillTrait_Infection   =2,
    ESkillTrait_Sleep       =3,
    ESkillTrait_Shock       =4,
    ESkillTrait_Paralyze    =5,
    ESkillTrait_Seal        =6,
    ESkillTrait_Pull        =7,
    ESkillTrait_Silence     =8,
    ESkillTrait_Fear        =9,
    ESkillTrait_SlowDown    =10,
    ESkillTrait_TurnStone   =11,
    ESkillTrait_Disarm      =12,
    ESkillTrait_Hate        =13,
    ESkillTrait_PhysicalBlockade=14,
    ESkillTrait_RootPhysically=15,
    ESkillTrait_Deport      =16,
    ESkillTrait_Bluff       =17,
    ESkillTrait_Poison      =18,
    ESkillTrait_Bleed       =19,
    ESkillTrait_Changebody  =20,
    ESkillTrait_Derangement =21,
    ESkillTrait_AirBind     =22,
    ESkillTrait_WindStun    =23,
    ESkillTrait_Psychic     =24,
    ESkillTrait_KnockBack   =25,
    ESkillTrait_KnockDown   =26,
    ESkillTrait_Max         =27,
    ESkillTrait_MAX         =28,
};
enum EListCtlDrawItemType
{
    LCDIT_TEXT              =0,
    LCDIT_TEXTURE           =1,
    LCDIT_BUTTON            =2,
    LCDIT_ITEM              =3,
    LCDIT_STATUS            =4,
    LCDIT_SKILL             =5,
    LCDIT_MAX               =6,
};
enum EBlessPanelDrawType
{
    BPDT_NEED_NONE          =0,
    BPDT_NEED_BLESS         =1,
    BPDT_NEED_NO_BLESS      =2,
    BPDT_MAX                =3,
};
enum ArmorType
{
    AMT_NONE                =0,
    AMT_LIGHT               =1,
    AMT_HEAVY               =2,
    AMT_MAGIC               =3,
    AMT_SIGIL               =4,
    AMT_MAX                 =5,
};
enum AttackType
{
    AT_NONE                 =0,
    AT_SWORD                =1,
    AT_TWOHANDSWORD         =2,
    AT_BUSTER               =3,
    AT_BLUNT                =4,
    AT_TWOHANDBLUNT         =5,
    AT_STAFF                =6,
    AT_TWOHANDSTAFF         =7,
    AT_DAGGER               =8,
    AT_POLE                 =9,
    AT_FIST                 =10,
    AT_BOW                  =11,
    AT_ETC                  =12,
    AT_DUAL                 =13,
    AT_DUALFIST             =14,
    AT_FISHINGROD           =15,
    AT_RAPIER               =16,
    AT_CROSSBOW             =17,
    AT_ANCIENTSWORD         =18,
    AT_FLAG                 =19,
    AT_DUALDAGGER           =20,
    AT_OWNTHING             =21,
    AT_TWOHANDCROSSBOW      =22,
    AT_DUALBLUNT            =23,
    AT_PISTOL               =24,
    AT_SHOOTER              =25,
    AT_MAX                  =26,
    AT_MAX                  =27,
};
enum ETimerCheckType
{
    ETCT_STEADYBOX          =0,
    ETCT_MAX                =1,
};
enum ECharacterDeleteFailType
{
    ECDFT_NONE              =0,
    ECDFT_UNKNOWN           =1,
    ECDFT_PLEDGE_MEMBER     =2,
    ECDFT_PLEDGE_MASTER     =3,
    ECDFT_PROHIBIT_CHAR_DELETION=4,
    ECDFT_COMMISSION        =5,
    ECDFT_MENTOR            =6,
    ECDFT_MENTEE            =7,
    ECDFT_MAIL              =8,
    ECDFT_MAX               =9,
};
enum EItemInventoryType
{
    EIIT_NONE               =0,
    EIIT_EQUIPMENT          =1,
    EIIT_CONSUMABLE         =2,
    EIIT_MATERIAL           =3,
    EIIT_ETC                =4,
    EIIT_QUEST              =5,
    EIIT_MAX                =6,
};
enum EClassRoleType
{
    ECRT_NONE               =0,
    ECRT_KNIGHT             =1,
    ECRT_WARRIOR            =2,
    ECRT_ROGUE              =3,
    ECRT_ARCHOR             =4,
    ECRT_WIZARD             =5,
    ECRT_SUMMONER           =6,
    ECRT_ENCHANTER          =7,
    ECRT_SUPPORT            =8,
    ECRT_NOVICE             =9,
    ECRT_SHAMAN             =10,
    ECRT_BARD               =11,
    ECRT_DEATHKNIGHT        =12,
    ECRT_HUNTER             =13,
    ECRT_MAX                =14,
};
enum EClassIconType
{
    CICON_LEVEL_TWO_WARRIOR =0,
    CICON_LEVEL_TWO_ROGUE   =1,
    CICON_LEVEL_TWO_ARCHER  =2,
    CICON_LEVEL_TWO_FIGHTER =3,
    CICON_LEVEL_TWO_SONGDANCER=4,
    CICON_LEVEL_TWO_WIZARD  =5,
    CICON_LEVEL_TWO_HEALER  =6,
    CICON_LEVEL_TWO_SUMMONER=7,
    CICON_LEVEL_ONE_WARRIOR =8,
    CICON_LEVEL_ONE_WIZARD  =9,
    CICON_LEVEL_THREE_WARRIOR=10,
    CICON_LEVEL_THREE_ROGUE =11,
    CICON_LEVEL_THREE_ARCHER=12,
    CICON_LEVEL_THREE_FIGHTER=13,
    CICON_LEVEL_THREE_SONGDANCER=14,
    CICON_LEVEL_THREE_WIZARD=15,
    CICON_LEVEL_THREE_HEALER=16,
    CICON_LEVEL_THREE_SUMMONER=17,
    CICON_LEVEL_FOUR_FIGHTER=18,
    CICON_LEVEL_FOUR_WARRIOR=19,
    CICON_LEVEL_FOUR_ROGUE  =20,
    CICON_LEVEL_FOUR_ARCHER =21,
    CICON_LEVEL_FOUR_WIZARD =22,
    CICON_LEVEL_FOUR_ENCHANTER=23,
    CICON_LEVEL_FOUR_SUMMONER=24,
    CICON_LEVEL_FOUR_HEALER =25,
    CICON_LEVEL_FIVE_FIGHTER=26,
    CICON_LEVEL_FIVE_WARRIOR=27,
    CICON_LEVEL_FIVE_ROGUE  =28,
    CICON_LEVEL_FIVE_ARCHER =29,
    CICON_LEVEL_FIVE_WIZARD =30,
    CICON_LEVEL_FIVE_ENCHANTER=31,
    CICON_LEVEL_FIVE_SUMMONER=32,
    CICON_LEVEL_FIVE_HEALER =33,
    CICON_MAX               =34,
};
enum EBR_CashShopProduct
{
    BRCSP_PRODUCT           =0,
    BRCSP_RECENT            =1,
    BRCSP_BASKET            =2,
    BRCSP_MAX               =3,
};
enum ETooltipSourceType
{
    NTST_TEXT               =0,
    NTST_ITEM               =1,
    NTST_LIST               =2,
    NTST_LIST_DRAWITEM      =3,
    NTST_MAX                =4,
};
enum ECastleSiegeDefenderType
{
    CSDT_NOT_DEFENDER       =0,
    CSDT_CASTLE_OWNER       =1,
    CSDT_WAITING_CONFIRM    =2,
    CSDT_APPROVED           =3,
    CSDT_REJECTED           =4,
    CSDT_MAX                =5,
};
enum RestartPoint
{
    RESTART_VILLAGE         =0,
    RESTART_AGIT            =1,
    RESTART_CASTLE          =2,
    RESTART_FORTRESS        =3,
    RESTART_BATTLE_CAMP     =4,
    RESTART_ORIGINAL_PLACE  =5,
    RESTART_VILLAGE_BY_DISMOUNT=6,
    RESTART_ORIGINAL_PLACE_LIMIT=7,
    RESTART_ARENA           =8,
    RESTART_VILLAGE_USING_ITEM=9,
    RESTART_DUMMY_10        =10,
    RESTART_DUMMY_11        =11,
    RESTART_DUMMY_12        =12,
    RESTART_DUMMY_13        =13,
    RESTART_DUMMY_14        =14,
    RESTART_DUMMY_15        =15,
    RESTART_DUMMY_16        =16,
    RESTART_DUMMY_17        =17,
    RESTART_DUMMY_18        =18,
    RESTART_DUMMY_19        =19,
    RESTART_BRANCH_START    =20,
    RESTART_BY_AGATHION     =21,
    RESTART_BY_NPC          =22,
    RESURRECT_BY_SKILL      =23,
    RESTART_NEARBY_BATTLE_FIELD=24,
    RESTART_TIME_FIELD_START_POS=25,
    RESTART_MAX             =26,
};
enum EInventoryUpdateType
{
    IVUT_NONE               =0,
    IVUT_ADD                =1,
    IVUT_UPDATE             =2,
    IVUT_DELETE             =3,
    IVUT_MAX                =4,
};
enum EShortCutItemType
{
    SCIT_NONE               =0,
    SCIT_ITEM               =1,
    SCIT_SKILL              =2,
    SCIT_ACTION             =3,
    SCIT_MACRO              =4,
    SCIT_RECIPE             =5,
    SCIT_BOOKMARK           =6,
    SCIT_ATTRIBUTE          =7,
    SCIT_MAX                =8,
};
enum EControlReturnType
{
    CRTT_NO_CONTROL_USE     =0,
    CRTT_CONTROL_USE        =1,
    CRTT_USE_AND_HIDE       =2,
    CRTT_MAX                =3,
};
enum EEnvType
{
    ET_NONE                 =0,
    ET_GROUND               =1,
    ET_UNDERWATER           =2,
    ET_AIR                  =3,
    ET_HOVER                =4,
    ET_MAX                  =5,
};
enum EMoveType
{
    MVT_NONE                =0,
    MVT_SLOW                =1,
    MVT_FAST                =2,
    MVT_MAX                 =3,
};
enum ESystemMsgParamType
{
    SMPT_STRING             =0,
    SMPT_NUMBER             =1,
    SMPT_NPCID              =2,
    SMPT_ITEMID             =3,
    SMPT_SKILLID            =4,
    SMPT_CASTLEID           =5,
    SMPT_BIGNUMBER          =6,
    SMPT_ZONENAME           =7,
    SMPT_MAX                =8,
};
enum ESystemMsgType
{
    SYSTEM_NONE             =0,
    SYSTEM_BATTLE           =1,
    SYSTEM_SERVER           =2,
    SYSTEM_DAMAGE           =3,
    SYSTEM_POPUP            =4,
    SYSTEM_ERROR            =5,
    SYSTEM_PETITION         =6,
    SYSTEM_USEITEMS         =7,
    SYSTEM_POPUPWITHMSG     =8,
    SYSTEM_DAMAGETEXT       =9,
    SYSTEM_CLIENT_DEBUG_MSG =10,
    SYSTEM_GETITEMS         =11,
    SYSTEM_DICE             =12,
    SYSTEM_ESSENTIAL        =13,
    SYSTEM_MAX              =14,
};
enum SayPacketType
{
    SPT_NORMAL              =0,
    SPT_SHOUT               =1,
    SPT_TELL                =2,
    SPT_PARTY               =3,
    SPT_PLEDGE              =4,
    SPT_SYSTEM              =5,
    SPT_USER_PET            =6,
    SPT_GM_PET              =7,
    SPT_MARKET              =8,
    SPT_ALLIANCE            =9,
    SPT_ANNOUNCE            =10,
    SPT_CUSTOM              =11,
    SPT_L2_FRIEND           =12,
    SPT_MSN_CHAT            =13,
    SPT_PARTY_ROOM_CHAT     =14,
    SPT_COMMANDER_CHAT      =15,
    SPT_INTER_PARTYMASTER_CHAT=16,
    SPT_HERO                =17,
    SPT_CRITICAL_ANNOUNCE   =18,
    SPT_SCREEN_ANNOUNCE     =19,
    SPT_DOMINIONWAR         =20,
    SPT_MPCC_ROOM_CHAT      =21,
    SPT_NPC_NORMAL          =22,
    SPT_NPC_SHOUT           =23,
    SPT_FRIEND_ANNOUNCE     =24,
    SPT_WORLD               =25,
    SPT_PLEDGE_INRAIDSERVER =26,
    SPT_ALLIANCE_INRAIDSERVER=27,
    SPT_CASTLEWAR_PLEDGE_COMMAND_MSG=28,
    SPT_WORLD_INRAIDSERVER  =29,
    SPT_MAX                 =30,
};
enum EInterfaceSoundType
{
    IFST_CLICK1             =0,
    IFST_CLICK2             =1,
    IFST_CLICK_FAILED       =2,
    IFST_PICKUP             =3,
    IFST_TRASH_BASKET       =4,
    IFST_WINDOW_OPEN        =5,
    IFST_WINDOW_CLOSE       =6,
    IFST_QUEST_TUTORIAL     =7,
    IFST_MINIMAP_OPEN_CLOSE =8,
    IFST_COOLTIME_END       =9,
    IFST_PETITION           =10,
    IFST_STATUSWND_OPEN     =11,
    IFST_STATUSWND_CLOSE    =12,
    IFST_INVENWND_OPEN      =13,
    IFST_INVENWND_CLOSE     =14,
    IFST_MAPWND_OPEN        =15,
    IFST_MAPWND_CLOSE       =16,
    IFST_SYSTEMWND_OPEN     =17,
    IFST_SYSTEMWND_CLOSE    =18,
    IFST_WORKSHOP_OPEN      =19,
    IFST_WORKSHOP_CLOSE     =20,
    IFST_SYSTEMWND_TELEAUTHFAIL=21,
    IFST_MAX                =22,
};
enum EServerAgeLimit
{
    SERVER_AGE_LIMIT_15     =0,
    SERVER_AGE_LIMIT_18     =1,
    SERVER_AGE_LIMIT_Free   =2,
    SERVER_MAX              =3,
};
enum EXMLTreeNodeItemType
{
    XTNITEM_BLANK           =0,
    XTNITEM_TEXT            =1,
    XTNITEM_TEXTURE         =2,
    XTNITEM_MAX             =3,
};
enum EActionCategory
{
    ACTION_NONE             =0,
    ACTION_BASIC            =1,
    ACTION_PARTY            =2,
    ACTION_TACTICALSIGN     =3,
    ACTION_SOCIAL           =4,
    ACTION_PET              =5,
    ACTION_SUMMON           =6,
    ACTION_SUMMON_DIRECT    =7,
    ACTION_SUMMON_AI        =8,
    ACTION_SUMMON_REACT     =9,
    ACTION_SUMMON_SKILL     =10,
    ACTION_MAX              =11,
};
enum ESkillCategory
{
    SKILL_Active            =0,
    SKILL_Passive           =1,
    SKILL_MAX               =2,
};
enum EEtcItemType
{
    ITEME_NONE              =0,
    ITEME_SCROLL            =1,
    ITEME_ARROW             =2,
    ITEME_POTION            =3,
    ITEME_SPELLBOOK         =4,
    ITEME_RECIPE            =5,
    ITEME_MATERIAL          =6,
    ITEME_PET_COLLAR        =7,
    ITEME_CASTLE_GUARD      =8,
    ITEME_DYE               =9,
    ITEME_SEED              =10,
    ITEME_SEED2             =11,
    ITEME_HARVEST           =12,
    ITEME_LOTTO             =13,
    ITEME_RACE_TICKET       =14,
    ITEME_TICKET_OF_LORD    =15,
    ITEME_LURE              =16,
    ITEME_CROP              =17,
    ITEME_MATURECROP        =18,
    ITEME_ENCHT_WP          =19,
    ITEME_ENCHT_AM          =20,
    ITEME_BLESS_ENCHT_WP    =21,
    ITEME_BLESS_ENCHT_AM    =22,
    ITEME_COUPON            =23,
    ITEME_ELIXIR            =24,
    ITEME_ENCHT_ATTR        =25,
    ITEME_ENCHT_ATTR_CURSED =26,
    ITEME_BOLT              =27,
    ITEME_ENCHT_ATTR_INC_PROP_ENCHT_WP=28,
    ITEME_ENCHT_ATTR_INC_PROP_ENCHT_AM=29,
    ITEME_ENCHT_ATTR_CRYSTAL_ENCHANT_AM=30,
    ITEME_ENCHT_ATTR_CRYSTAL_ENCHANT_WP=31,
    ITEME_ENCHT_ATTR_ANCIENT_CRYSTAL_ENCHANT_AM=32,
    ITEME_ENCHT_ATTR_ANCIENT_CRYSTAL_ENCHANT_WP=33,
    ITEME_ENCHT_ATTR_RUNE   =34,
    ITEME_ENCHT_ATTRT_RUNE_SELECT=35,
    ITEME_TELEPORTBOOKMARK  =36,
    ITEME_CHANGE_ATTR       =37,
    ITEME_SOULSHOT          =38,
    ITEME_SHAPE_SHIFTING_WP =39,
    ITEME_BLESS_SHAPE_SHIFTING_WP=40,
    ITEME_SHAPE_SHIFTING_WP_FIXED=41,
    ITEME_SHAPE_SHIFTING_AM =42,
    ITEME_BLESS_SHAPE_SHIFTING_AM=43,
    ITEME_SHAPE_SHIFTING_AM_FIXED=44,
    ITEME_SHAPE_SHIFTING_HAIRACC=45,
    ITEME_BLESS_SHAPE_SHIFTING_HAIRACC=46,
    ITEME_SHAPE_SHIFTING_HAIRACC_FIXED=47,
    ITEME_RESTORE_SHAPE_SHIFTING_WP=48,
    ITEME_RESTORE_SHAPE_SHIFTING_AM=49,
    ITEME_RESTORE_SHAPE_SHIFTING_HAIRACC=50,
    ITEME_RESTORE_SHAPE_SHIFTING_ALLITEM=51,
    ITEME_BLESS_INC_PROP_ENCHT_WP=52,
    ITEME_BLESS_INC_PROP_ENCHT_AM=53,
    ITEME_CARD_EVENT        =54,
    ITEME_SHAPE_SHIFTING_ALLITEM_FIXED=55,
    ITEME_MULTI_ENCHT_WP    =56,
    ITEME_MULTI_ENCHT_AM    =57,
    ITEME_MULTI_INC_PROB_ENCHT_WP=58,
    ITEME_MULTI_INC_PROB_ENCHT_AM=59,
    ITEME_ENSOUL_STONE      =60,
    ITEME_NICK_COLOR_OLD    =61,
    ITEME_NICK_COLOR_NEW    =62,
    ITEME_ENCHT_AG          =63,
    ITEME_BLESS_ENCHT_AG    =64,
    ITEME_MULTI_ENCHT_AG    =65,
    ITEME_ANCIENT_CRYSTAL_ENCHANT_AG=66,
    ITEME_INC_PROP_ENCHT_AG =67,
    ITEME_BLESS_INC_PROP_ENCHT_AG=68,
    ITEME_MULTI_INC_PROB_ENCHT_AG=69,
    ITEME_LOCK_ITEM         =70,
    ITEME_UNLOCK_ITEM       =71,
    ITEME_BULLET            =72,
    ITEME_COSTUME_BOOK      =73,
    ITEME_COSTUME_BOOK_RD_ALL=74,
    ITEME_COSTUME_BOOK_RD_PART=75,
    ITEME_COSTUME_BOOK_1    =76,
    ITEME_COSTUME_BOOK_2    =77,
    ITEME_COSTUME_BOOK_3    =78,
    ITEME_COSTUME_BOOK_4    =79,
    ITEME_COSTUME_BOOK_5    =80,
    ITEME_MAGIC_LAMP        =81,
    ITEME_POLY_ENCHANT_WP   =82,
    ITEME_POLY_ENCHANT_AM   =83,
    ITEME_POLY_INC_ENCHANT_PROP_WP=84,
    ITEME_POLY_INC_ENCHANT_PROP_AM=85,
    ITEME_CURSED_ENCHANT_WP =86,
    ITEME_CURSED_ENCHANT_AM =87,
    ITEME_VITAL_LEGACY_ITEM_1D=88,
    ITEME_VITAL_LEGACY_ITEM_7D=89,
    ITEME_VITAL_LEGACY_ITEM_30D=90,
    ITEME_BLESS_UPGRADE     =91,
    ITEME_ORB               =92,
    ITEME_ITEM_RESTORE_COIN =93,
    ITEME_SPECIAL_ENCHT_WP  =94,
    ITEME_SPECIAL_ENCHT_AM  =95,
    ITEME_NICK_COLOR_ICON   =96,
    ITEME_TRADE_TICKET      =97,
    ITEME_MAX               =98,
};
enum EItemParamType
{
    ITEMP_WEAPON            =0,
    ITEMP_ARMOR             =1,
    ITEMP_SHIELD            =2,
    ITEMP_ACCESSARY         =3,
    ITEMP_ETC               =4,
    ITEMP_MAX               =5,
};
enum EItemType
{
    ITEM_WEAPON             =0,
    ITEM_ARMOR              =1,
    ITEM_ACCESSARY          =2,
    ITEM_QUESTITEM          =3,
    ITEM_ASSET              =4,
    ITEM_ETCITEM            =5,
    ITEM_MAX                =6,
};
enum ENameCtrlType
{
    NCT_Normal              =0,
    NCT_Item                =1,
    NCT_MAX                 =2,
};
enum ETextureLayer
{
    TL_None                 =0,
    TL_Normal               =1,
    TL_Background           =2,
    TL_MAX                  =3,
};
enum ETextureCtrlType
{
    TCT_Stretch             =0,
    TCT_Normal              =1,
    TCT_Tile                =2,
    TCT_Draggable           =3,
    TCT_Control             =4,
    TCT_Mask                =5,
    TCT_MAX                 =6,
};
enum ETextVAlign
{
    TVA_Undefined           =0,
    TVA_Top                 =1,
    TVA_Middle              =2,
    TVA_Bottom              =3,
    TVA_MAX                 =4,
};
enum ETextAlign
{
    TA_Undefined            =0,
    TA_Left                 =1,
    TA_Center               =2,
    TA_Right                =3,
    TA_MacroIcon            =4,
    TA_MAX                  =5,
};
enum EEventMatchObsMsgType
{
    MESSAGE_GM              =0,
    MESSAGE_Finish          =1,
    MESSAGE_Start           =2,
    MESSAGE_GameOver        =3,
    MESSAGE_1               =4,
    MESSAGE_2               =5,
    MESSAGE_3               =6,
    MESSAGE_4               =7,
    MESSAGE_5               =8,
    MESSAGE_MAX             =9,
};
enum ESearchListType
{
    SLT_FRIEND_LIST         =0,
    SLT_PLEDGEMEMBER_LIST   =1,
    SLT_ADDITIONALFRIEND_LIST=2,
    SLT_ADDITIONAL_LIST     =3,
    SLT_MAX                 =4,
};
enum EMPlayerPushCategory
{
    MPPC_NONE               =0,
    MPPC_AUTOPLAY_OFF       =1,
    MPPC_DIE                =2,
    MPPC_ATTACKED           =3,
    MPPC_EMPTY_VITAL_CLASSIC=4,
    MPPC_EMPTY_VITAL        =5,
    MPPC_MAX                =6,
};
enum EMixMagicType
{
    MIXMAGICTYPE_DEFAULT    =0,
    MIXMAGICTYPE_EARTHTOGGLE=1,
    MIXMAGICTYPE_WINDTOGGLE =2,
    MIXMAGICTYPE_WATERTOGGLE=3,
    MIXMAGICTYPE_FIRETOGGLE =4,
    MIXMAGICTYPE_HOLYTOGGLE =5,
    MIXMAGICTYPE_UNHOLYTOGGLE=6,
    MIXMAGICTYPE_APPLIEDSKILL=7,
    MIXMAGICTYPE_ALTERSKILL =8,
    MIXMAGICTYPE_EQUILTOGGLE=9,
    MIXMAGICTYPE_RAGETOGGLE =10,
    MIXMAGICTYPE_ULTIMATEMAX=11,
    MIXMAGICTYPE_MAX        =12,
};
enum EAttributeType
{
    ATTRIBUTE_FIRE          =0,
    ATTRIBUTE_WATER         =1,
    ATTRIBUTE_WIND          =2,
    ATTRIBUTE_EARTH         =3,
    ATTRIBUTE_HOLY          =4,
    ATTRIBUTE_UNHOLY        =5,
    ATTRIBUTE_MAX           =6,
};
enum EQuestStatus
{
    QuestStatus_None        =0,
    QuestStatus_Doing       =1,
    QuestStatus_Done        =2,
    QuestStatus_MAX         =3,
};
enum EMinimapRegionType
{
    MRT_Castle              =0,
    MRT_Fortress            =1,
    MRT_Agit                =2,
    MRT_HuntingZone_Base    =3,
    MRT_Faction             =4,
    MRT_HuntingZone_Mission =5,
    MRT_InstantZone         =6,
    MRT_Raid                =7,
    MRT_Quest               =8,
    MRT_Etc                 =9,
    MRT_MAX                 =10,
};
enum EMinimapTargetIcon
{
    TARGET_QUEST            =0,
    TARGET_ME               =1,
    TARGET_MAX              =2,
};
enum EStatisticUnitType
{
    SUT_NONE                =0,
    SUT_HOUR                =1,
    SUT_MINUTE              =2,
    SUT_SECOND              =3,
    SUT_RAID                =4,
    SUT_TIME                =5,
    SUT_MAX                 =6,
};
enum EAnchorPointType
{
    ANCHORPOINT_None        =0,
    ANCHORPOINT_TopLeft     =1,
    ANCHORPOINT_TopCenter   =2,
    ANCHORPOINT_TopRight    =3,
    ANCHORPOINT_CenterLeft  =4,
    ANCHORPOINT_CenterCenter=5,
    ANCHORPOINT_CenterRight =6,
    ANCHORPOINT_BottomLeft  =7,
    ANCHORPOINT_BottomCenter=8,
    ANCHORPOINT_BottomRight =9,
    ANCHORPOINT_MAX         =10,
};
enum EItemWindowIconDrawType
{
    ITEMWND_IconDraw_Default=0,
    ITEMWND_IconDraw_NoConditionalEffect=1,
    ITEMWND_IconDraw_ShowNewlyAcquired=2,
    ITEMWND_MAX             =3,
};
enum EItemWindowType
{
    ITEMWNDTYPE_ScrollType  =0,
    ITEMWNDTYPE_SideButtonType=1,
    ITEMWNDTYPE_UpDownButtonType=2,
    ITEMWNDTYPE_MAX         =3,
};
enum ETextureAutoRotateType
{
    ETART_None              =0,
    ETART_Camera            =1,
    ETART_Pawn              =2,
    ETART_MAX               =3,
};
enum EProgressBarType
{
    PBT_None                =0,
    PBT_RightLeft           =1,
    PBT_LeftRight           =2,
    PBT_TopBottom           =3,
    PBT_BottomTop           =4,
    PBT_MAX                 =5,
};
enum EControlOrderWay
{
    COW_None                =0,
    COW_Top                 =1,
    COW_Up                  =2,
    COW_Down                =3,
    COW_Bottom              =4,
    COW_MAX                 =5,
};
enum ETextLinkType
{
    TLT_None                =0,
    TLT_ServerItem          =1,
    TLT_LocalItem           =2,
    TLT_User                =3,
    TLT_SKill               =4,
    TLT_URL                 =5,
    TLT_SharedPosition      =6,
    TLT_EmojiIcon           =7,
    TLT_InviteParty         =8,
    TLT_ChatMenuIcon        =9,
    TLT_MAX                 =10,
};
enum EControlPropertyRestrictionType
{
    CPRT_None               =0,
    CPRT_Integer            =1,
    CPRT_String             =2,
    CPRT_MAX                =3,
};
enum EControlPropertyItemType
{
    CPIT_None               =0,
    CPIT_Boolean            =1,
    CPIT_Integer            =2,
    CPIT_String             =3,
    CPIT_MAX                =4,
};
enum EControlPropertyGroupType
{
    CPGT_None               =0,
    CPGT_Single             =1,
    CPGT_SingleRequired     =2,
    CPGT_Multiple           =3,
    CPGT_MultipleRequired   =4,
    CPGT_Choice             =5,
    CPGT_MAX                =6,
};
enum ETrackerAlignType
{
    TAT_Left                =0,
    TAT_Center              =1,
    TAT_Right               =2,
    TAT_Width               =3,
    TAT_Height              =4,
    TAT_MAX                 =5,
};
enum EXMLControlType
{
    XCT_None                =0,
    XCT_FrameWnd            =1,
    XCT_Button              =2,
    XCT_TextBox             =3,
    XCT_EditBox             =4,
    XCT_TextureCtrl         =5,
    XCT_ChatListBox         =6,
    XCT_TabControl          =7,
    XCT_ItemWnd             =8,
    XCT_CheckBox            =9,
    XCT_ComboBox            =10,
    XCT_ProgressCtrl        =11,
    XCT_MultiEdit           =12,
    XCT_ListCtrl            =13,
    XCT_ListBox             =14,
    XCT_StatusBarCtrl       =15,
    XCT_StatusRoundCtrl     =16,
    XCT_NameCtrl            =17,
    XCT_MinimapWnd          =18,
    XCT_ShortcutItemWnd     =19,
    XCT_XMLTreeCtrl         =20,
    XCT_SliderCtrl          =21,
    XCT_EffectButton        =22,
    XCT_TextListBox         =23,
    XCT_RadarWnd            =24,
    XCT_HtmlViewer          =25,
    XCT_RadioButton         =26,
    XCT_InvenWeightWnd      =27,
    XCT_StatusIconCtrl      =28,
    XCT_BarCtrl             =29,
    XCT_ScrollWnd           =30,
    XCT_FishViewportWnd     =31,
    XCT_VIPShopItemInfoWnd  =32,
    XCT_VIPShopNeededItemWnd=33,
    XCT_DrawPanel           =34,
    XCT_RadarMapCtrl        =35,
    XCT_PropertyController  =36,
    XCT_FlashCtrl           =37,
    XCT_CharacterViewportWnd=38,
    XCT_SceneCameraCtrl     =39,
    XCT_SceneNpcCtrl        =40,
    XCT_ScenePcCtrl         =41,
    XCT_SceneScreenCtrl     =42,
    XCT_SceneMusicCtrl      =43,
    XCT_RichListCtrl        =44,
    XCT_EffectViewportWnd   =45,
    XCT_MAX                 =46,
};
enum EIMEType
{
    IME_NONE                =0,
    IME_KOR                 =1,
    IME_ENG                 =2,
    IME_JPN                 =3,
    IME_CHN                 =4,
    IME_TAIWAN_CHANGJIE     =5,
    IME_TAIWAN_DAYI         =6,
    IME_TAIWAN_NEWPHONETIC  =7,
    IME_TAIWAN_BOSHAMY      =8,
    IME_CHN_MS              =9,
    IME_CHN_JB              =10,
    IME_CHN_ABC             =11,
    IME_CHN_WUBI            =12,
    IME_CHN_WUBI2           =13,
    IME_THAI                =14,
    IME_RUSSIA              =15,
    IME_GERMANY             =16,
    IME_FRANCE              =17,
    IME_POLAND              =18,
    IME_TURKEY              =19,
    IME_SPAIN               =20,
    IME_MAX                 =21,
};
enum ELanguageType
{
    LANG_Korean             =0,
    LANG_English            =1,
    LANG_Japanese           =2,
    LANG_Taiwan             =3,
    LANG_Chinese            =4,
    LANG_Thai               =5,
    LANG_Philippine         =6,
    LANG_Indonesia          =7,
    LANG_Russia             =8,
    LANG_Euro               =9,
    LANG_Germany            =10,
    LANG_France             =11,
    LANG_Poland             =12,
    LANG_Turkey             =13,
    LANG_Spain              =14,
    LANG_MAX                =15,
};
enum EGMCommandType
{
    GMCOMMAND_None          =0,
    GMCOMMAND_StatusInfo    =1,
    GMCOMMAND_ClanInfo      =2,
    GMCOMMAND_SkillInfo     =3,
    GMCOMMAND_QuestInfo     =4,
    GMCOMMAND_InventoryInfo =5,
    GMCOMMAND_WarehouseInfo =6,
    GMCOMMAND_MAX           =7,
};
#define UCONST_VALIDATE_ENUM_MAX 16
#define UCONST_AutoplayMacroSlotID2 279
#define UCONST_AutoHPPetPotionSlotID 278
#define UCONST_AutoHPPotionSlotID 277
#define UCONST_AutoplayMacroSlotID 276
#define UCONST_SSB_ActiveSkill 32
#define UCONST_SSB_Enchantable 16
#define UCONST_SSB_RegistShortcut 8
#define UCONST_SSB_AcquirableNextLevel 4
#define UCONST_SSB_Acquirable 2
#define UCONST_SSB_Unacquirable 1
#define UCONST_SSB_None 0
#define UCONST_SBT_ARTIFACT_D3 4611686018427387904
#define UCONST_SBT_ARTIFACT_D2 2305843009213693952
#define UCONST_SBT_ARTIFACT_D1 1152921504606846976
#define UCONST_SBT_ARTIFACT_C3 576460752303423488
#define UCONST_SBT_ARTIFACT_C2 288230376151711744
#define UCONST_SBT_ARTIFACT_C1 144115188075855872
#define UCONST_SBT_ARTIFACT_B3 72057594037927936
#define UCONST_SBT_ARTIFACT_B2 36028797018963968
#define UCONST_SBT_ARTIFACT_B1 18014398509481984
#define UCONST_SBT_ARTIFACT_A12 9007199254740992
#define UCONST_SBT_ARTIFACT_A11 4503599627370496
#define UCONST_SBT_ARTIFACT_A10 2251799813685248
#define UCONST_SBT_ARTIFACT_A9 1125899906842624
#define UCONST_SBT_ARTIFACT_A8 562949953421312
#define UCONST_SBT_ARTIFACT_A7 281474976710656
#define UCONST_SBT_ARTIFACT_A6 140737488355328
#define UCONST_SBT_ARTIFACT_A5 70368744177664
#define UCONST_SBT_ARTIFACT_A4 35184372088832
#define UCONST_SBT_ARTIFACT_A3 17592186044416
#define UCONST_SBT_ARTIFACT_A2 8796093022208
#define UCONST_SBT_ARTIFACT_A1 4398046511104
#define UCONST_SBT_ARTIFACTBOOK 2199023255552
#define UCONST_SBT_AGATHION_SUB4 1099511627776
#define UCONST_SBT_AGATHION_SUB3 549755813888
#define UCONST_SBT_AGATHION_SUB2 274877906944
#define UCONST_SBT_AGATHION_SUB1 137438953472
#define UCONST_SBT_AGATHION_MAIN 68719476736
#define UCONST_SBT_JEWEL6 34359738368
#define UCONST_SBT_JEWEL5 17179869184
#define UCONST_SBT_JEWEL4 8589934592
#define UCONST_SBT_JEWEL3 4294967296
#define UCONST_SBT_JEWEL2 2147483648
#define UCONST_SBT_JEWEL1 1073741824
#define UCONST_SBT_BROOCH 536870912
#define UCONST_SBT_WAIST 268435456
#define UCONST_SBT_DECO6 134217728
#define UCONST_SBT_DECO5 67108864
#define UCONST_SBT_DECO4 33554432
#define UCONST_SBT_DECO3 16777216
#define UCONST_SBT_DECO2 8388608
#define UCONST_SBT_DECO1 4194304
#define UCONST_SBT_LBRACELET 2097152
#define UCONST_SBT_RBRACELET 1048576
#define UCONST_SBT_HAIRALL 524288
#define UCONST_SBT_HAIR2 262144
#define UCONST_SBT_ALLDRESS 131072
#define UCONST_SBT_HAIR 65536
#define UCONST_SBT_ONEPIECE 32768
#define UCONST_SBT_RLHAND 16384
#define UCONST_SBT_BACK 8192
#define UCONST_SBT_FEET 4096
#define UCONST_SBT_LEGS 2048
#define UCONST_SBT_CHEST 1024
#define UCONST_SBT_GLOVES 512
#define UCONST_SBT_LHAND 256
#define UCONST_SBT_RHAND 128
#define UCONST_SBT_HEAD 64
#define UCONST_SBT_LFINGER 32
#define UCONST_SBT_RFINGER 16
#define UCONST_SBT_NECK 8
#define UCONST_SBT_LEAR 4
#define UCONST_SBT_REAR 2
#define UCONST_SBT_UNDERWEAR 1
#define UCONST_SBT_NONE 0
#define UCONST_EISI_MAX 2
#define UCONST_EISI_START 1
#define UCONST_EISI_INVALID -1
#define UCONST_EIST_MAX 3
#define UCONST_EIST_BM 2
#define UCONST_EIST_NORMAL 1
#define UCONST_EIST_INVALID 0
#define UCONST_MAX_INCLUDE_ITEM 10
#define UCONST_MAX_RELATED_QUEST 10
#define UCONST_BLACKCOUPON_OLDSERVER 1000001
#define UCONST_DisabledByUltimateSkillPoint 32
#define UCONST_DisabledByTargetAbnormalState 16
#define UCONST_DisabledByCasterAbnormalState 8
#define UCONST_DisabledByCost 4
#define UCONST_DisabledByItem 2
#define UCONST_DisabledByStat 1
#define UCONST_CLAN_AUTH_GRADE9 9
#define UCONST_CLAN_AUTH_GRADE8 8
#define UCONST_CLAN_AUTH_GRADE7 7
#define UCONST_CLAN_AUTH_GRADE6 6
#define UCONST_CLAN_AUTH_GRADE5 5
#define UCONST_CLAN_AUTH_GRADE4 4
#define UCONST_CLAN_AUTH_GRADE3 3
#define UCONST_CLAN_AUTH_GRADE2 2
#define UCONST_CLAN_AUTH_GRADE1 1
#define UCONST_CLAN_MEMBERTYPE_COUNT 2
#define UCONST_CLAN_KNIGHTHOOD_COUNT 8
#define UCONST_CLAN_ACADEMY -1
#define UCONST_CLAN_KNIGHT6 2002
#define UCONST_CLAN_KNIGHT5 2001
#define UCONST_CLAN_KNIGHT4 1002
#define UCONST_CLAN_KNIGHT3 1001
#define UCONST_CLAN_KNIGHT2 200
#define UCONST_CLAN_KNIGHT1 100
#define UCONST_CLAN_MAIN 0
#define UCONST_CLAN_AUTH_EDIT 2
#define UCONST_CLAN_AUTH_VIEW 1
#define UCONST_ESTT_SILEN_ELDER_SHARING 9
#define UCONST_ESTT_ELDER_SHARING 8
#define UCONST_ESTT_BISHOP_SHARING 7
#define UCONST_ESTT_COLLECT 6
#define UCONST_ESTT_SUBJOB 5
#define UCONST_ESTT_TRANSFORM 4
#define UCONST_ESTT_SUB_CLAN 3
#define UCONST_ESTT_CLAN 2
#define UCONST_ESTT_FISHING 1
#define UCONST_ESTT_NORMAL 0
#define UCONST_MSIT_DETHRONE_POINT -1000
#define UCONST_MSIT_SP -900
#define UCONST_MSIT_PCCAFE_POINT -100
#define UCONST_MSIT_PLEDGE_POINT -200
#define UCONST_MSIT_PVP_POINT -300
#define UCONST_MSIT_FIELD_CYCLE_POINT -400
#define UCONST_MSIT_RAID_POINT -500
#define UCONST_MSIT_CRAFT_POINT -600
#define UCONST_MSIT_VITAL_POINT -800
#define UCONST_EV_CustomProtocolBegin 300000
#define UCONST_EV_CustomUIEvent 200000
#define UCONST_EV_ProtocolBegin 100000
#define UCONST_EV_PrivateShopFindOpen 20460
#define UCONST_EV_UniqueGachaOpen 20451
#define UCONST_EV_NotifyWM_SetFocus 20450
#define UCONST_EV_PkPenaltyInfoList 20440
#define UCONST_EV_VitalExInfo 20430
#define UCONST_EV_QTReceiveClanRoomID 20421
#define UCONST_EV_QTReceiveCurRoomInfo 20420
#define UCONST_EV_FestivalGame 20290
#define UCONST_EV_FestivalTopItemInfo 20280
#define UCONST_EV_FestivalAllItemInfo 20270
#define UCONST_EV_FestivalInfo 20260
#define UCONST_EV_CostumeCollectSkillActive 20258
#define UCONST_EV_CostumeFullList 20257
#define UCONST_EV_CostumeShortCutList 20256
#define UCONST_EV_CostumeLock 20255
#define UCONST_EV_CostumeExtract 20254
#define UCONST_EV_CostumeEvolution 20253
#define UCONST_EV_CostumeList 20252
#define UCONST_EV_CostumeChooseItem 20251
#define UCONST_EV_CostumeUseItem 20250
#define UCONST_EV_UserBanInfo 20240
#define UCONST_EV_TeleportMapWndShow 20200
#define UCONST_EV_PledgeClassicRaidInfo 20194
#define UCONST_EV_PledgeBonusUpdate 20193
#define UCONST_EV_PledgeBonusMarkReset 20192
#define UCONST_EV_PledgeBonusList 20191
#define UCONST_EV_PledgeBonusOpen 20190
#define UCONST_EV_BeginSoulShotUpdate 20182
#define UCONST_EV_MyPetSummonEvent 20181
#define UCONST_EV_SoulShotUpdate 20180
#define UCONST_EV_OneDayRewardCount 20177
#define UCONST_EV_ConnectedTimeAndGettableReward 20176
#define UCONST_EV_OneDayRewardItemListEnd 20175
#define UCONST_EV_OneDayRewardItemList 20174
#define UCONST_EV_OneDayRewardItemListStart 20173
#define UCONST_EV_OneDayRewardListEnd 20172
#define UCONST_EV_OneDayRewardList 20171
#define UCONST_EV_OneDayRewardListStart 20170
#define UCONST_EV_TodoListInzoneEnd 20166
#define UCONST_EV_TodoListRecommandEnd 20165
#define UCONST_EV_TodoListInzoneRenew 20164
#define UCONST_EV_TodoListRecommandRenew 20163
#define UCONST_EV_TodoListHTML 20162
#define UCONST_EV_TodoList 20161
#define UCONST_EV_TodoListShow 20160
#define UCONST_EV_VipInfoRemainTime 20151
#define UCONST_EV_VipInfo 20150
#define UCONST_EV_VipLuckyGameResult 20145
#define UCONST_EV_VipLuckyGameItemList 20144
#define UCONST_EV_VipLuckyGameInfo 20143
#define UCONST_EV_VipProductItemEnd 20142
#define UCONST_EV_VipProductItem 20141
#define UCONST_EV_VipProductItemStart 20140
#define UCONST_EV_UpdateMyMaxAP 11601
#define UCONST_EV_UpdateMyAP 11600
#define UCONST_EV_RequestDualInventorySwap 11591
#define UCONST_EV_DualInventoryInfo 11590
#define UCONST_EV_ShowSimpleItemExchangeMultisellWnd 11580
#define UCONST_EV_DisplayChanged 11575
#define UCONST_EV_ScalingUI 11570
#define UCONST_EV_HideXMLDetailTooltip 11560
#define UCONST_EV_RequestShowXMLDetailTooltip 11555
#define UCONST_EV_RequestInvitePartyAction 11550
#define UCONST_EV_WorldCastleWarSiegeAttackerListEnd 11542
#define UCONST_EV_WorldCastleWarSiegeAttackerList 11541
#define UCONST_EV_WorldCastleWarSiegeAttackerListStart 11540
#define UCONST_EV_PenaltyItemListEnd 11532
#define UCONST_EV_PenaltyItemInfo 11531
#define UCONST_EV_PenaltyItemListBegin 11530
#define UCONST_EV_Hair2SlotEnable 11520
#define UCONST_EV_CollectionResetReward 11511
#define UCONST_EV_CollectionRegistEnableItem 11510
#define UCONST_EV_CollectionActiveEvent 11509
#define UCONST_EV_CollectionReset 11508
#define UCONST_EV_CollectionReceiveReward 11507
#define UCONST_EV_CollectionComplete 11506
#define UCONST_EV_CollectionRegister 11505
#define UCONST_EV_CollectionSummary 11504
#define UCONST_EV_CollectionFavoriteList 11503
#define UCONST_EV_CollectionUpdateFavorite 11502
#define UCONST_EV_CollectionList 11501
#define UCONST_EV_CollectionInfoEnd 11500
#define UCONST_EV_RequestEnemyPledgeRegister 11490
#define UCONST_EV_PetAcquireSkillAlarm 11481
#define UCONST_EV_PetSkillList 11480
#define UCONST_EV_ShowHomunculusBirthInfo 11470
#define UCONST_EV_ShowHomunculusList 11460
#define UCONST_EV_XML_TeleportFavoritesList 11451
#define UCONST_EV_GFX_TeleportFavoritesList 11450
#define UCONST_EV_SharedPositionAction 11440
#define UCONST_EV_EquipItemTooltipClear 11430
#define UCONST_EV_UpdateTargetDead 11420
#define UCONST_EV_UpdateWarMark 11410
#define UCONST_EV_PvpbookNewPk 11400
#define UCONST_EV_PvpbookKillerLocation 11390
#define UCONST_EV_PvpbookListEnd 11380
#define UCONST_EV_PvpbookListItem 11370
#define UCONST_EV_PvpbookListStart 11360
#define UCONST_EV_PledgeMercenaryMemberJoin 11350
#define UCONST_EV_PledgeMercenaryMemberListEnd 11342
#define UCONST_EV_PledgeMercenaryMemberListItem 11341
#define UCONST_EV_PledgeMercenaryMemberListStart 11340
#define UCONST_EV_MCW_CastleSiegeDefenderListEnd 11332
#define UCONST_EV_MCW_CastleSiegeDefenderListItem 11331
#define UCONST_EV_MCW_CastleSiegeDefenderListStart 11330
#define UCONST_EV_MCW_CastleSiegeAttackerListEnd 11322
#define UCONST_EV_MCW_CastleSiegeAttackerListItem 11321
#define UCONST_EV_MCW_CastleSiegeAttackerListStart 11320
#define UCONST_EV_MCW_CastleSiegeInfo 11315
#define UCONST_EV_MCW_CastleSiegeHUDInfo 11310
#define UCONST_EV_MCW_CastleInfo 11300
#define UCONST_EV_ToggleCombatMode 11280
#define UCONST_EV_CharacterRankingListEnd 11272
#define UCONST_EV_CharacterRankingInfo 11271
#define UCONST_EV_CharacterRankingListBegin 11270
#define UCONST_EV_MyRankingHistoryList 11261
#define UCONST_EV_MyRankingDetailInfo 11260
#define UCONST_EV_TimeRestrictFieldExit 11250
#define UCONST_EV_TimeRestrictFieldUserAlarm 11240
#define UCONST_EV_TimeRestrictFieldChargeResult 11230
#define UCONST_EV_TimeRestrictFieldEnterResult 11220
#define UCONST_EV_TimeRestrictFieldListEnd 11210
#define UCONST_EV_TimeRestrictFieldInfo 11200
#define UCONST_EV_TimeRestrictFieldListStart 11190
#define UCONST_EV_GachaShopGachaItemEnd 11184
#define UCONST_EV_GachaShopGachaItemInfo 11183
#define UCONST_EV_GachaShopGachaItemBegin 11182
#define UCONST_EV_GachaShopGachaGroup 11181
#define UCONST_EV_GachaShopInfo 11180
#define UCONST_EV_AutoplayDoMacro 11171
#define UCONST_EV_AutoplaySetting 11170
#define UCONST_EV_DieInfoEnd 11163
#define UCONST_EV_DieInfoDamage 11162
#define UCONST_EV_DieInfoDropItem 11161
#define UCONST_EV_DieInfoBegin 11160
#define UCONST_EV_CounterAttack 11152
#define UCONST_EV_CounterAttackListEmpty 11151
#define UCONST_EV_CounterAttackListAdded 11150
#define UCONST_EV_PaybackUILauncher 11144
#define UCONST_EV_PaybackGiveReward 11143
#define UCONST_EV_PaybackListEnd 11142
#define UCONST_EV_PaybackListInfo 11141
#define UCONST_EV_PaybackListBegin 11140
#define UCONST_EV_PremiumManagerWndShow 11131
#define UCONST_EV_PremiumManagerWndLoadHtmlFromString 11130
#define UCONST_EV_ShowCursedBarrierInfo 11120
#define UCONST_EV_MinimapTreasureBoxLocation 11110
#define UCONST_EV_MyTargetIsDead 11090
#define UCONST_EV_MagicLamp_GameResult 11082
#define UCONST_EV_MagicLamp_GameInfo 11081
#define UCONST_EV_MagicLamp_ExpInfo 11080
#define UCONST_EV_ClassChangeFlagOff 11071
#define UCONST_EV_ClassChangeAlarm 11070
#define UCONST_EV_PurchaseLimitShopItemBuy 11064
#define UCONST_EV_PurchaseLimitShopListEnd 11063
#define UCONST_EV_PurchaseLimitShopItemInfo 11062
#define UCONST_EV_PurchaseLimitShopListBegin 11061
#define UCONST_EV_BloodyCoinCount 11060
#define UCONST_EV_Enchant_Artifact_Result 11050
#define UCONST_EV_GFX_ItemAnnounce 11040
#define UCONST_EV_NextTargetModeChange 11030
#define UCONST_EV_OlympiadMatchMakingResult 11023
#define UCONST_EV_OlympiadMatchInfo 11022
#define UCONST_EV_OlympiadRecord 11021
#define UCONST_EV_OlympiadInfo 11020
#define UCONST_EV_LockedResult 11010
#define UCONST_EV_LockedItemShow 11000
#define UCONST_EV_ElementalSpiritSimpleInfo 10940
#define UCONST_EV_ElementalSpiritGetExp 10930
#define UCONST_EV_ElementalSpiritAbsorb 10920
#define UCONST_EV_ElementalSpiritAbsorbInfo 10910
#define UCONST_EV_ElementalSpiritSetTalent 10900
#define UCONST_EV_ElementalSpiritEvolution 10890
#define UCONST_EV_ElementalSpiritEvolutionInfo 10880
#define UCONST_EV_ElementalSpiritExtract 10871
#define UCONST_EV_ElementalSpiritExtractInfo 10870
#define UCONST_EV_ElementalSpiritInfo 10860
#define UCONST_EV_WithdrawPledge 10850
#define UCONST_EV_OustPledge 10840
#define UCONST_EV_DismissPledge 10830
#define UCONST_EV_PledgeItemBuy 10820
#define UCONST_EV_PledgeItemInfo 10810
#define UCONST_EV_PledgeCreateShow 10800
#define UCONST_EV_AllyCrestSet 10790
#define UCONST_EV_PledgeEmblemSet 10780
#define UCONST_EV_PledgeCrestSet 10770
#define UCONST_EV_PledgeAnnounceSet 10760
#define UCONST_EV_PledgeAnnounce 10750
#define UCONST_EV_PledgeItemActivate 10740
#define UCONST_EV_PledgeItemList 10730
#define UCONST_EV_PledgeSkillActivate 10720
#define UCONST_EV_PledgeSkillInfo 10710
#define UCONST_EV_TutorialShowID 10700
#define UCONST_EV_PledgeMasteryReset 10690
#define UCONST_EV_PledgeMasterySet 10680
#define UCONST_EV_PledgeMasteryInfo 10670
#define UCONST_EV_GFX_AskStopPledgeWar 10660
#define UCONST_EV_GFX_ReceivePledgeMemberList 10650
#define UCONST_EV_GFX_ClanClearWarList 10640
#define UCONST_EV_GFX_ClanWarList 10630
#define UCONST_EV_GFX_ClanSkillListRenew 10620
#define UCONST_EV_GFX_ClanSkillList 10610
#define UCONST_EV_GFX_ClanMemberInfo 10600
#define UCONST_EV_GFX_ClanCrestChange 10590
#define UCONST_EV_GFX_AskStartPledgeWar 10580
#define UCONST_EV_GFX_ResultJoinDominionWar 10570
#define UCONST_EV_GFX_ClanSubClanUpdated 10560
#define UCONST_EV_GFX_ClanAuthGradeList 10550
#define UCONST_EV_GFX_ClanAuthMember 10540
#define UCONST_EV_GFX_ClanAuth 10530
#define UCONST_EV_GFX_ClanMyAuth 10520
#define UCONST_EV_GFX_ClanMemberInfoUpdate 10510
#define UCONST_EV_GFX_ClanDeleteMember 10500
#define UCONST_EV_GFX_ClanAddMemberMultiple 10490
#define UCONST_EV_GFX_ClanAddMember 10480
#define UCONST_EV_GFX_ClanDeleteAllMember 10470
#define UCONST_EV_GFX_ClanInfoUpdate 10460
#define UCONST_EV_GFX_ClanInfoEnd 10451
#define UCONST_EV_GFX_ClanInfo 10450
#define UCONST_EV_PledgeMissionRewardCount 10441
#define UCONST_EV_PledgeMissionInfo 10440
#define UCONST_EV_PledgeShowInfoUpdate 10430
#define UCONST_EV_PledgeLevelUp 10420
#define UCONST_EV_PledgeRaidInfo 10410
#define UCONST_EV_PledgeRaidRank 10400
#define UCONST_EV_PledgeContributionReward 10370
#define UCONST_EV_PledgeContributionInfo 10360
#define UCONST_EV_PledgeContributionRank 10350
#define UCONST_EV_CardUpdownGameQuit 10280
#define UCONST_EV_CardUpdownGameRewardReply 10270
#define UCONST_EV_CardUpdownGamePrepReward 10260
#define UCONST_EV_CardUpdownGamePickResult 10250
#define UCONST_EV_CardUpdownGameStart 10240
#define UCONST_EV_TeleportFreeLevel 10231
#define UCONST_EV_CurrentServerTime 10230
#define UCONST_EV_PrivateStoreSellingResult 10221
#define UCONST_EV_PrivateStoreBuyingResult 10220
#define UCONST_EV_KserthFieldEventPoint 10210
#define UCONST_EV_KserthFieldEventStep 10200
#define UCONST_EV_UpgradeSystemResult 10191
#define UCONST_EV_ShowUpgradeSystem 10190
#define UCONST_EV_ItemAuctionStatus 10183
#define UCONST_EV_RaidServerInfo 10182
#define UCONST_EV_RaidBossSpawnInfo 10181
#define UCONST_EV_AddAgitSiegeInfo 10180
#define UCONST_EV_FactionLevelUpNotify 10171
#define UCONST_EV_FactionInfoRewardIcon 10170
#define UCONST_EV_MonsterBookCloseForce 10162
#define UCONST_EV_MonsterBookOpenResult 10161
#define UCONST_EV_MonsterBookRewardIcon 10160
#define UCONST_EV_MonsterBookEnd 10152
#define UCONST_EV_MonsterBookInfo 10151
#define UCONST_EV_MonsterBookStart 10150
#define UCONST_EV_GotoWorldRaidServer 10140
#define UCONST_EV_AI_CONTENT_MONSTER_ARENA_SCORE 10130
#define UCONST_EV_InGameWebWnd_Info 10120
#define UCONST_EV_ResponseDecoNPCAvalability 10110
#define UCONST_EV_SendAgitFuncInfo 10100
#define UCONST_EV_VipBotCaptchaResult 10091
#define UCONST_EV_VipBotCaptchaInfo 10090
#define UCONST_EV_FactionInfo 10080
#define UCONST_EV_CastleWarSeasonReward 10071
#define UCONST_EV_CastleWarSeasonResult 10070
#define UCONST_EV_EnsoulExtractionResult 10063
#define UCONST_EV_EnsoulExtractionWndShow 10062
#define UCONST_EV_EnsoulResult 10061
#define UCONST_EV_EnsoulWndShow 10060
#define UCONST_EV_NotifyAttendance 10053
#define UCONST_EV_VipAttendanceRefresh 10052
#define UCONST_EV_VipAttendanceCheck 10051
#define UCONST_EV_VipAttendanceItemList 10050
#define UCONST_EV_InitEnterChattingSelectMode 10041
#define UCONST_EV_PathToAwakeningAlarm 10040
#define UCONST_EV_TrainingRoomStart_SecondInfo 10034
#define UCONST_EV_TrainingRoomEnd 10033
#define UCONST_EV_TrainingRoomStutus 10032
#define UCONST_EV_TrainingRoomStart 10031
#define UCONST_EV_ShowTrainingRoom 10030
#define UCONST_EV_LuckyGameResult 10023
#define UCONST_EV_LuckyGameStart 10022
#define UCONST_EV_ShowLuckyGame 10021
#define UCONST_EV_ShowWebPathAlarm 10012
#define UCONST_EV_ShowWebPathListPage 10011
#define UCONST_EV_ShowWebPathMainPage 10010
#define UCONST_EV_BR_EventFastivalInkEnergy 10001
#define UCONST_EV_BR_EventFastivalInkMax 10000
#define UCONST_EV_UIDebugMsg 9995
#define UCONST_EV_AlchemyAdditionPushItemOnMixCube 9920
#define UCONST_EV_AlchemyPushItemOnMixCube 9910
#define UCONST_EV_AlchemySkillInfoFromScript 9900
#define UCONST_EV_AlchemyConversion 9890
#define UCONST_EV_AlchemyTryMixCube 9880
#define UCONST_EV_AlchemyMixCubeInfo 9875
#define UCONST_EV_AlchemySkillListForXML 9873
#define UCONST_EV_AlchemySkillList 9870
#define UCONST_EV_ContextMenu 9860
#define UCONST_EV_NewEnchantRetryPutItemsFail 9852
#define UCONST_EV_NewEnchantRetryPutItemsOK 9851
#define UCONST_EV_NewEnchantTryFail 9850
#define UCONST_EV_NewEnchantTrySuccess 9840
#define UCONST_EV_NewEnchantRemoveTwoFail 9830
#define UCONST_EV_NewEnchantRemoveTwoOK 9820
#define UCONST_EV_NewEnchantRemoveOneFail 9810
#define UCONST_EV_NewEnchantRemoveOneOK 9800
#define UCONST_EV_NewEnchantPushTwoFail 9790
#define UCONST_EV_NewEnchantPushTwoOK 9780
#define UCONST_EV_NewEnchantPushOneFail 9770
#define UCONST_EV_NewEnchantPushOneOK 9760
#define UCONST_EV_GameStart 9750
#define UCONST_EV_CharacterDeleteFail 9740
#define UCONST_EV_DivideAdenaDone 9710
#define UCONST_EV_DivideAdenaCancel 9700
#define UCONST_EV_DivideAdenaStart 9690
#define UCONST_EV_BR_10thAnniBannerShow 9681
#define UCONST_EV_CardProperty 9680
#define UCONST_EV_CardListProperty 9670
#define UCONST_EV_CardRewardStart 9660
#define UCONST_EV_ShowEventChristmasWnd 9650
#define UCONST_EV_PledgeRecruitApplyInfo 9640
#define UCONST_EV_PledgeSigninForOpenJoiningMethod 9631
#define UCONST_EV_PledgeWaitingListAlarm 9630
#define UCONST_EV_PledgeDraftListItem 9621
#define UCONST_EV_PledgeDraftListStart 9620
#define UCONST_EV_PledgeWaitingUser 9610
#define UCONST_EV_PledgeWaitingListItem 9601
#define UCONST_EV_PledgeWaitingListStart 9600
#define UCONST_EV_PledgeWaitingListApplied 9591
#define UCONST_EV_PledgeRecruitBoardDetail 9590
#define UCONST_EV_PledgeRecruitInfoItem 9583
#define UCONST_EV_PledgeRecruitInfo 9582
#define UCONST_EV_PledgeRecruitBoardItem 9581
#define UCONST_EV_PledgeRecruitBoardStart 9580
#define UCONST_EV_AdenaInvenCount 9570
#define UCONST_EV_PledgeCount 9560
#define UCONST_EV_UnReadMailCount 9550
#define UCONST_EV_ExitSingleMeshZone 9541
#define UCONST_EV_EnterSingleMeshZone 9540
#define UCONST_EV_BR_Event_CampaignResult 9530
#define UCONST_EV_BR_Event_CampaignFinish 9520
#define UCONST_EV_BR_Event_CampaignProgressInfo 9510
#define UCONST_EV_BR_Event_CampaignArrived 9500
#define UCONST_EV_WebPetitionReplyAlarm 9452
#define UCONST_EV_ShowWebPetitionListPage 9451
#define UCONST_EV_ShowWebPetitionMainPage 9450
#define UCONST_EV_PurchaseItemList 9449
#define UCONST_EV_ExitBeautyshop 9448
#define UCONST_EV_EndSocialAction 9447
#define UCONST_EV_OldUserStyle 9446
#define UCONST_EV_CurrentUserStyle 9445
#define UCONST_EV_IsSuccessBuyingStyle 9444
#define UCONST_EV_SendUserAdenaAndCoin 9443
#define UCONST_EV_OpenBeautyshopResetWindow 9442
#define UCONST_EV_ReceiveBeautyItemList 9441
#define UCONST_EV_OpenBeautyshopWindow 9440
#define UCONST_EV_HairAccessoryPriority 9439
#define UCONST_EV_EventBalthusDisable 9435
#define UCONST_EV_EventBalthusJackpotUser 9434
#define UCONST_EV_EventBalthusState 9433
#define UCONST_EV_EventKalieDisable 9432
#define UCONST_EV_EventKalieJackpotUser 9431
#define UCONST_EV_EventKalieState 9430
#define UCONST_EV_SendRequestResult 9427
#define UCONST_EV_SendIsActiveUnionInfoBtn 9426
#define UCONST_EV_RequestOpenClanUnionInfoWnd 9425
#define UCONST_EV_ReceivePledgeUnionOpenNPC 9422
#define UCONST_EV_ReceiveUnionPoint 9421
#define UCONST_EV_ReceivePledgeUnionStateInfo 9420
#define UCONST_EV_UpdateHaircolorData 9410
#define UCONST_EV_CuriousHouseObserveModeOFF 9401
#define UCONST_EV_CuriousHouseObserveModeON 9400
#define UCONST_EV_CuriousHouseObserveListEnd 9392
#define UCONST_EV_CuriousHouseObserveList 9391
#define UCONST_EV_CuriousHouseObserveListStart 9390
#define UCONST_EV_CuriousHouseResultListEnd 9382
#define UCONST_EV_CuriousHouseResultList 9381
#define UCONST_EV_CuriousHouseResultListStart 9380
#define UCONST_EV_CuriousHouseResultIsVictory 9370
#define UCONST_EV_CuriousHouseRemainTime 9360
#define UCONST_EV_CuriousHouseMemberUpdate 9350
#define UCONST_EV_CuriousHouseMemberListEnd 9342
#define UCONST_EV_CuriousHouseMemberList 9341
#define UCONST_EV_CuriousHouseMemberListStart 9340
#define UCONST_EV_CuriousHouseLeave 9330
#define UCONST_EV_CuriousHouseEnter 9320
#define UCONST_EV_CuriousHouseWaitState 9310
#define UCONST_EV_ItemLookChangePutSupportItemResult 9300
#define UCONST_EV_ItemLookChangePutTargetItemResult 9290
#define UCONST_EV_ItemLookChangeResult 9280
#define UCONST_EV_ItemLookChangeHide 9270
#define UCONST_EV_ItemLookChangeShow 9260
#define UCONST_EV_EnvTestShow 9250
#define UCONST_EV_BeastTestShow 9240
#define UCONST_EV_NotifyFlyMoveStart 9231
#define UCONST_EV_FlyMoveText 9230
#define UCONST_EV_NotifyImportedCrestImage 9220
#define UCONST_EV_BR_RestartByNPCButtonEnable 9150
#define UCONST_EV_BR_Die_EnableNPC 9140
#define UCONST_EV_BR_EventValentineShow 9130
#define UCONST_EV_BR_MinigameAllRanking 9121
#define UCONST_EV_BR_MinigameMyRanking 9120
#define UCONST_EV_BR_EventCommonHtml3 9113
#define UCONST_EV_BR_EventCommonHtml2 9112
#define UCONST_EV_BR_EventCommonHtml1 9111
#define UCONST_EV_BR_EventChristmasShow 9110
#define UCONST_EV_BR_EventRankerLastList 9103
#define UCONST_EV_BR_EventRankerNowList 9102
#define UCONST_EV_BR_EventHalloweenShow 9101
#define UCONST_EV_BR_EventHalloweenHelp 9100
#define UCONST_EV_BR_FireEventTimeInfo 9091
#define UCONST_EV_BR_FireEventStateInfo 9090
#define UCONST_EV_BR_PREMIUM_STATE 9080
#define UCONST_EV_BR_RESULT_PRESENT_BUY_PRODUCT 9061
#define UCONST_EV_BR_PRESENT_HIDE_CONFIRM 9073
#define UCONST_EV_BR_PRESENT_SHOW_CONFIRM 9072
#define UCONST_EV_BR_HIDE_CONFIRM 9071
#define UCONST_EV_BR_SHOW_CONFIRM 9070
#define UCONST_EV_BR_RESULT_BUY_PRODUCT 9060
#define UCONST_EV_BR_SETEVENTCOIN 9051
#define UCONST_EV_BR_SETGAMEPOINT 9050
#define UCONST_EV_BR_AddPresentEachProductInfo 9041
#define UCONST_EV_BR_AddEachProductInfo 9040
#define UCONST_EV_BR_DeleteAllBasketProductItem 9035
#define UCONST_EV_BR_DeleteCashShopBasketProductItem 9034
#define UCONST_EV_BR_DeleteMyShopBasketProductItem 9033
#define UCONST_EV_BR_AddMyShopBasketProductItem 9032
#define UCONST_EV_BR_SetPresentNewProductInfo 9031
#define UCONST_EV_BR_SetNewProductInfo 9030
#define UCONST_EV_BR_AddBasketProductItem 9028
#define UCONST_EV_BR_AddRecentProductItem 9027
#define UCONST_EV_BR_SetBasketProduct 9026
#define UCONST_EV_BR_SetRecentProduct 9025
#define UCONST_EV_BR_CashShopAddProductItem 9023
#define UCONST_EV_BR_ProductListEnd 9022
#define UCONST_EV_BR_SetNewList 9021
#define UCONST_EV_BR_CashShopAddItem 9020
#define UCONST_EV_BR_CashShopCateroyTabClear 9016
#define UCONST_EV_BR_CashShopNewIconAnim 9015
#define UCONST_EV_BR_BasketProductListEnd 9014
#define UCONST_EV_BR_RecentProductListEnd 9013
#define UCONST_EV_BR_CashShopCateroyTabRemove 9012
#define UCONST_EV_BR_CashShopCateroyAdd 9011
#define UCONST_EV_BR_CashShopToggleWindow 9010
#define UCONST_EV_ArenaEnd 9000
#define UCONST_EV_ArenaChangeAbilpage 8800
#define UCONST_EV_NpcStrWithNPCViewportClose 8703
#define UCONST_EV_NpcStrWithNPCViewport 8702
#define UCONST_EV_HtmlWithNPCViewportClose 8701
#define UCONST_EV_HtmlWithNPCViewport 8700
#define UCONST_EV_ArenaMyRank 8660
#define UCONST_EV_ArenaRankAll 8650
#define UCONST_EV_ArenaShowEnemyParty 8610
#define UCONST_EV_ArenaCustomNotification 8600
#define UCONST_EV_ArenaBattleOccupyHideSkill 8546
#define UCONST_EV_ArenaBattleOccupyShowSkill 8545
#define UCONST_EV_ArenaBattleOccupyScore 8542
#define UCONST_EV_ArenaBattleOccupyStatus 8541
#define UCONST_EV_ArenaBattleOccupyDashboard 8540
#define UCONST_EV_TransformNotification 8530
#define UCONST_EV_ArenaKillInfo 8520
#define UCONST_EV_ArenaUpdateEquipSlot 8510
#define UCONST_EV_ArenaDashboard 8500
#define UCONST_EV_ClosedArena 8430
#define UCONST_EV_ClosingArena 8420
#define UCONST_EV_ExitArena 8410
#define UCONST_EV_BattleResultArenaStat 8402
#define UCONST_EV_BattleResultArenaReward 8401
#define UCONST_EV_BattleResultArena 8400
#define UCONST_EV_BattleReadyArena 8380
#define UCONST_EV_StartBattleReadyArena 8370
#define UCONST_EV_ConfirmClassArena 8360
#define UCONST_EV_ChangeClassArena 8350
#define UCONST_EV_StartChooseClassArena 8340
#define UCONST_EV_CancelMatchArena 8330
#define UCONST_EV_ConfirmMatchArena 8320
#define UCONST_EV_CompleteMatchArena 8310
#define UCONST_EV_RequestMatchArena 8300
#define UCONST_EV_MatchGroupOust 8230
#define UCONST_EV_MatchGroupWithdraw 8220
#define UCONST_EV_MatchGroupAsk 8210
#define UCONST_EV_MatchGroup 8200
#define UCONST_EV_NeedResetUIData 8000
#define UCONST_EV_ReceiveOption 6220
#define UCONST_EV_ReceiveChatFilter 6210
#define UCONST_EV_ReceiveWindowsInfo 6200
#define UCONST_EV_UpdateTargetSelectedRadarMap 6130
#define UCONST_EV_UpdateQuestMarkRadarMap 6120
#define UCONST_EV_ExtraWorldChattingCnt 6110
#define UCONST_EV_EventAttendanceInfo 6000
#define UCONST_EV_SetFullScreenCheck 5871
#define UCONST_EV_OptionWndShow 5870
#define UCONST_EV_InzoneWaitingInfo 5860
#define UCONST_EV_MenteeWaitingListEnd 5850
#define UCONST_EV_MenteeWaitingList 5840
#define UCONST_EV_MenteeWaitingListStart 5830
#define UCONST_EV_MentorMenteeListInfo 5820
#define UCONST_EV_MentorMenteeListStart 5810
#define UCONST_EV_ConfirmMentee 5800
#define UCONST_EV_WebBrowser_EventParam 5753
#define UCONST_EV_WebBrowser_NoticeOpenStatus 5752
#define UCONST_EV_WebBrowser_ReceivedTitle 5751
#define UCONST_EV_WebBrowser_FinishedLoading 5750
#define UCONST_EV_WebBrowser_ShowFileRegisterWnd 5740
#define UCONST_EV_ChangeAttribute_ItemResult 5733
#define UCONST_EV_ChangeAttribute_ItemDetail 5732
#define UCONST_EV_ChangeAttribute_CandidateItem 5731
#define UCONST_EV_ChangeAttribute_CandidateListClear 5730
#define UCONST_EV_OptionHasApplied 5720
#define UCONST_EV_CreditXMLString 5710
#define UCONST_EV_LoginUIGetFocus 5700
#define UCONST_EV_ServerListEnd 5692
#define UCONST_EV_ServerList 5691
#define UCONST_EV_ServerListStart 5690
#define UCONST_EV_ShowChinaEula 5681
#define UCONST_EV_ShowEula 5680
#define UCONST_EV_LoginGoogleOtp 5671
#define UCONST_EV_LoginSecurityCard 5670
#define UCONST_EV_LoginTelephoneWait 5661
#define UCONST_EV_LoginWait 5660
#define UCONST_EV_LoginQueueTicket 5651
#define UCONST_EV_LoginOK 5650
#define UCONST_EV_LoginFailFlash 5641
#define UCONST_EV_LoginFail 5640
#define UCONST_EV_LoginBegin 5630
#define UCONST_EV_DeleteFullSceneClipView 5624
#define UCONST_EV_ShowFullSceneClipView 5623
#define UCONST_EV_ShowUsm 5622
#define UCONST_EV_DeleteSceneClipView 5621
#define UCONST_EV_ShowSceneClipView 5620
#define UCONST_EV_CharacterNameCreatable 5618
#define UCONST_EV_SecondaryAuthFailEtc 5616
#define UCONST_EV_SecondaryAuthVerifyFail 5615
#define UCONST_EV_SecondaryAuthCreateFail 5614
#define UCONST_EV_SecondaryAuthSuccess 5613
#define UCONST_EV_SecondaryAuthBlocked 5612
#define UCONST_EV_SecondaryAuthVerify 5611
#define UCONST_EV_SecondaryAuthCreate 5610
#define UCONST_EV_GoodsInventoryResult 5604
#define UCONST_EV_GoodsInventoryNoti 5603
#define UCONST_EV_GoodsInventoryItemDesc 5602
#define UCONST_EV_GoodsInventoryItemList 5601
#define UCONST_EV_ShowGoodsInventoryWnd 5600
#define UCONST_EV_StatisticUserRecord 5595
#define UCONST_EV_StatisticWorldRecord 5594
#define UCONST_EV_StatisticAllNameInfo 5593
#define UCONST_EV_StatisticNameInfo 5592
#define UCONST_EV_StatisticHotLinkWndShow 5591
#define UCONST_EV_StatisticWndShow 5590
#define UCONST_EV_FlashDebugMsg 5580
#define UCONST_EV_ItemCommissionWndSellingPremiumItemRegister 5499
#define UCONST_EV_ItemCommissionWndSellingPremiumItemRegisterReset 5498
#define UCONST_EV_ItemCommissionRegisterWndCloseCauseOfFreeUser 5572
#define UCONST_EV_ItemCommissionWndCloseCauseOfLongDistance 5571
#define UCONST_EV_ItemCommissionWndRegisterResult 5570
#define UCONST_EV_ItemCommissionWndDeleteResult 5560
#define UCONST_EV_ItemCommissionWndBuyResult 5550
#define UCONST_EV_ItemCommissionWndBuyInfo 5540
#define UCONST_EV_ItemCommissionWndSearchFail 5535
#define UCONST_EV_ItemCommissionWndListEnd 5530
#define UCONST_EV_ItemCommissionWndEachItem 5520
#define UCONST_EV_ItemCommissionWndListStart 5510
#define UCONST_EV_ItemCommissionWndResponseInfo 5500
#define UCONST_EV_ItemCommissionWndRegistrableItemList 5495
#define UCONST_EV_ItemCommissionWndRegistrableItemCnt 5492
#define UCONST_EV_ItemCommissionWndShow 5490
#define UCONST_EV_ChangeToAwakenedClass 5480
#define UCONST_EV_CallToChangeClass 5470
#define UCONST_EV_MovieCaptureFailDiskSpace 5440
#define UCONST_EV_MovieCaptureEnded 5430
#define UCONST_EV_MovieCaptureStarted 5420
#define UCONST_EV_ShowPersonalConnectionWnd 5411
#define UCONST_EV_InzonePartyHistoryUpdate 5410
#define UCONST_EV_BlockDetailInfoUpdate 5404
#define UCONST_EV_BlockInfoUpdate 5403
#define UCONST_EV_BlockRemoved 5402
#define UCONST_EV_BlockAdded 5401
#define UCONST_EV_BlockInfoListEmpty 5400
#define UCONST_EV_FriendDetailInfoUpdate 5394
#define UCONST_EV_FriendInfoUpdate 5393
#define UCONST_EV_FriendRemoved 5392
#define UCONST_EV_FriendAdded 5391
#define UCONST_EV_FriendInfoListEmpty 5390
#define UCONST_EV_ClearTutorialQuest 5381
#define UCONST_EV_NotifyTutorialQuest 5380
#define UCONST_EV_DamageTextUpdate 5371
#define UCONST_EV_DamageTextCreate 5370
#define UCONST_EV_ApplyPetSkillAvailability 5365
#define UCONST_EV_ApplySkillAvailability 5360
#define UCONST_EV_GstarNotifyMonsterCount 5359
#define UCONST_EV_GstarGameEnd 5358
#define UCONST_EV_GstarCommandLineIcon 5357
#define UCONST_EV_GstarSceneStateEnter 5356
#define UCONST_EV_GstarZoneChange 5355
#define UCONST_EV_GstarCloseSkill 5354
#define UCONST_EV_GstarUIInit 5353
#define UCONST_EV_GstarPlayFlashMovie 5352
#define UCONST_EV_GstarShowMissionGuide 5351
#define UCONST_EV_GStarObtainSkill 5350
#define UCONST_EV_OwnSkillHasCanceled 5340
#define UCONST_EV_OwnSkillHasLaunched 5330
#define UCONST_EV_HeadDisplayUpdate 5320
#define UCONST_EV_ChangedSubjob 5312
#define UCONST_EV_CreatedSubjob 5311
#define UCONST_EV_NotifySubjob 5310
#define UCONST_EV_MinimapHideCampaign 5304
#define UCONST_EV_MinimapShowCampaign 5303
#define UCONST_EV_ZoneQuestResult 5302
#define UCONST_EV_CampaignResult 5301
#define UCONST_EV_ZoneQuestRewardFinish 5300
#define UCONST_EV_CampaignRewardFinish 5290
#define UCONST_EV_ZoneQuestRewardStart 5280
#define UCONST_EV_CampaignRewardStart 5270
#define UCONST_EV_ZoneQuestFinish 5260
#define UCONST_EV_CampaignFinish 5250
#define UCONST_EV_ZoneQuestProgressInfo 5240
#define UCONST_EV_CampaignProgressInfo 5230
#define UCONST_EV_ZoneQuestArrived 5220
#define UCONST_EV_CampaignArrived 5210
#define UCONST_EV_JumpWayPointHide 5200
#define UCONST_EV_JumpWayPointUpdate 5190
#define UCONST_EV_RequestStopPledgeWar 5181
#define UCONST_EV_RequestStartPledgeWar 5180
#define UCONST_EV_SheathingInfo 5170
#define UCONST_EV_ShowSheathingWnd 5160
#define UCONST_EV_RegisterUltimateSkill 5151
#define UCONST_EV_UpdateUltimateSkillPoint 5150
#define UCONST_EV_CrystalizingFail 5142
#define UCONST_EV_CrystalizingEstimationListEnd 5141
#define UCONST_EV_CrystalizingEstimationList 5140
#define UCONST_EV_UseActiveAlterSkill 5132
#define UCONST_EV_InactivateAlterSkill 5131
#define UCONST_EV_ActivateAlterSkill 5130
#define UCONST_EV_TargetStatusWndHide 5122
#define UCONST_EV_TargetStatusWndShow 5121
#define UCONST_EV_TargetSpelledList 5120
#define UCONST_EV_NavitAdventTimeChange 5120
#define UCONST_EV_NavitAdventEffect 5110
#define UCONST_EV_NavitAdventPointInfo 5100
#define UCONST_EV_UnSetEnterChatting 5091
#define UCONST_EV_SetEnterChatting 5090
#define UCONST_EV_ReceiveOlympiadResultV2 5082
#define UCONST_EV_ReceiveOlympiadResult 5081
#define UCONST_EV_ReceiveOlympiadGameList 5080
#define UCONST_EV_NatureRenderShow 5070
#define UCONST_EV_SkillCancel 5060
#define UCONST_EV_HDRRenderTestWndShow 5050
#define UCONST_EV_ListCtrlLoseSelected 5040
#define UCONST_EV_EnterOlympiadObserverMode 5030
#define UCONST_EV_ReplayRecEnded 5021
#define UCONST_EV_ReplayRecStarted 5020
#define UCONST_EV_ShowWeatherWnd 5010
#define UCONST_EV_ReceivePledgeMemberList 5000
#define UCONST_EV_ReceivePostFriendList 4990
#define UCONST_EV_ConfirmAddingPostFriend 4980
#define UCONST_EV_ReceiveFriendList 4970
#define UCONST_EV_ChatIconClick 4961
#define UCONST_EV_UrlLinkClick 4960
#define UCONST_EV_PostEffectShow 4950
#define UCONST_EV_ShowNewVoteSystemHelp 4941
#define UCONST_EV_ReceiveNewVoteSystemInfo 4940
#define UCONST_EV_ExpandQuestAlarmKillMonsterEnd 4932
#define UCONST_EV_ExpandQuestAlarmKillMonsterStart 4931
#define UCONST_EV_ExpandQuestAlarmKillMonster 4930
#define UCONST_EV_CommandAddAllianceCrestFile 4920
#define UCONST_EV_RecvPartyMaster 4919
#define UCONST_EV_HandOverPartyMaster 4918
#define UCONST_EV_WithdrawParty 4917
#define UCONST_EV_OustPartyMember 4916
#define UCONST_EV_BecamePartyMaster 4915
#define UCONST_EV_BecamePartyMember 4914
#define UCONST_EV_PartyHasDismissed 4913
#define UCONST_EV_MembershipType 4912
#define UCONST_EV_PartyLootingHasModified 4911
#define UCONST_EV_AskPartyLootingModify 4910
#define UCONST_EV_ShowAskCoupleActionDialog 4900
#define UCONST_EV_EffectViewerShow 4881
#define UCONST_EV_EffectViewerAddEffect 4880
#define UCONST_EV_UsePartyMatchAction 4870
#define UCONST_EV_AddPrivateMarketList 4861
#define UCONST_EV_ShowPrivateMarketList 4860
#define UCONST_EV_ShowNewUserPetitionHtml 4850
#define UCONST_EV_ShowNewUserPetitionContents 4840
#define UCONST_EV_AddNewUserPetitionCategoryStepTwo 4830
#define UCONST_EV_ShowNewUserPetitionDescription 4820
#define UCONST_EV_AddNewUserPetitionCategoryStepOne 4810
#define UCONST_EV_ShowNewUserPetitionWnd 4800
#define UCONST_EV_ReplyWritePost 4799
#define UCONST_EV_ReceivedStateSentPost 4798
#define UCONST_EV_OpenStateSentPost 4797
#define UCONST_EV_DeleteSentPost 4796
#define UCONST_EV_ReceivedStateReceivedPost 4795
#define UCONST_EV_OpenStateReceivedPost 4794
#define UCONST_EV_DeleteReceivedPost 4793
#define UCONST_EV_PostWriteEnd 4792
#define UCONST_EV_PostWriteAddItem 4791
#define UCONST_EV_PostWriteOpen 4790
#define UCONST_EV_ReplySentPostEnd 4782
#define UCONST_EV_ReplySentPostAddItem 4781
#define UCONST_EV_ReplySentPostStart 4780
#define UCONST_EV_EndSentPostList 4770
#define UCONST_EV_AddSentPostList 4760
#define UCONST_EV_StartSentPostList 4750
#define UCONST_EV_ReplyReceivedPostEnd 4742
#define UCONST_EV_ReplyReceivedPostAddItem 4741
#define UCONST_EV_ReplyReceivedPostStart 4740
#define UCONST_EV_MailCommisionValue 4731
#define UCONST_EV_EndReceivedPostList 4730
#define UCONST_EV_AddReceivedPostList 4720
#define UCONST_EV_StartReceivedPostList 4710
#define UCONST_EV_Notice_Post_Arrived 4700
#define UCONST_EV_SkillEnchantResult 4600
#define UCONST_EV_ScenePlay 4570
#define UCONST_EV_ScenePlayStart 4560
#define UCONST_EV_SlideShow 4550
#define UCONST_EV_CurSceneIndexInit 4540
#define UCONST_EV_UpdateSceneTreeData 4530
#define UCONST_EV_SceneDataSave 4520
#define UCONST_EV_SceneDataUpdate 4510
#define UCONST_EV_SceneListUpdate 4500
#define UCONST_EV_MSProfilingClear 4431
#define UCONST_EV_MSProfilingResult 4430
#define UCONST_EV_MSViewerWndDeleteAllSkill 4420
#define UCONST_EV_MSViewerWndShow 4410
#define UCONST_EV_MSViewerWndAddSkill 4400
#define UCONST_EV_NPCViewerWndReload 4380
#define UCONST_EV_PCViewerWndReload 4370
#define UCONST_EV_PawnViewerWndShortcutSave 4365
#define UCONST_EV_PawnViewerWndAddAnimName 4360
#define UCONST_EV_PawnViewerWndClearAnimList 4350
#define UCONST_EV_PawnViewerWndUpdateHairAccCoord 4340
#define UCONST_EV_PawnViewerWndAddFaceTextureName 4330
#define UCONST_EV_PawnViewerWndAddHairMeshName 4320
#define UCONST_EV_PawnViewerWndAddItem 4300
#define UCONST_EV_ShowSeedMapInfo 4200
#define UCONST_EV_LoginVitalityEffectInfo 4120
#define UCONST_EV_GMVitalityEffectInfo 4111
#define UCONST_EV_VitalityEffectInfo 4110
#define UCONST_EV_VitalityPointInfo 4100
#define UCONST_EV_MpccPartyMasterList 4080
#define UCONST_EV_MpccRoomChatMessage 4070
#define UCONST_EV_MpccRoomMemberInfo 4060
#define UCONST_EV_MpccRoomMemberStart 4050
#define UCONST_EV_ManageMpccRoomMember 4040
#define UCONST_EV_DismissMpccRoom 4030
#define UCONST_EV_ListMpccWaitingCount 4021
#define UCONST_EV_ListMpccWaitingRoomInfo 4020
#define UCONST_EV_ListMpccWaitingStart 4010
#define UCONST_EV_MpccRoomInfo 4000
#define UCONST_EV_BlockStateResult 3910
#define UCONST_EV_BlockStatePlayer 3900
#define UCONST_EV_BlockStateTeam 3890
#define UCONST_EV_BlockListTimeUpset 3880
#define UCONST_EV_BlockListVote 3870
#define UCONST_EV_BlockListClose 3860
#define UCONST_EV_BlockListRemove 3850
#define UCONST_EV_BlockListAdd 3840
#define UCONST_EV_BlockListStart 3830
#define UCONST_EV_BlockRemainTime 3820
#define UCONST_EV_ChangeCharacterPawn 3810
#define UCONST_EV_ReserveShortCut 3801
#define UCONST_EV_FlightTransform 3800
#define UCONST_EV_CleftStateResult 3760
#define UCONST_EV_CleftStatePlayer 3750
#define UCONST_EV_CleftStateTeam 3740
#define UCONST_EV_CleftListClose 3730
#define UCONST_EV_CleftListRemove 3720
#define UCONST_EV_CleftListAdd 3710
#define UCONST_EV_CleftListStart 3700
#define UCONST_EV_CleftListInfo 3690
#define UCONST_EV_DominionWarEnd 3640
#define UCONST_EV_DominionWarStart 3630
#define UCONST_EV_DominionWarChannelSet 3620
#define UCONST_EV_DominionsOwnPos 3610
#define UCONST_EV_DominionInfo 3600
#define UCONST_EV_DominionInfoCnt 3590
#define UCONST_EV_ResultJoinDominionWar 3580
#define UCONST_EV_ShowDominionWarJoinListEnd 3572
#define UCONST_EV_ShowDominionWarJoinListEnemyDominionInfo 3571
#define UCONST_EV_ShowDominionWarJoinListStart 3570
#define UCONST_EV_BirthdayItemAlarm 3560
#define UCONST_EV_AITimer 3550
#define UCONST_EV_AirShipTeleportList 3543
#define UCONST_EV_AirShipTeleportListStart 3542
#define UCONST_EV_AirShipAltitude 3541
#define UCONST_EV_AirShipState 3540
#define UCONST_EV_AirShipUpdate 3530
#define UCONST_EV_ShowMiniGame1 3520
#define UCONST_EV_RenderDeviceRecreated 3511
#define UCONST_EV_CrataeCubeRecordRetire 3501
#define UCONST_EV_CrataeCubeRecordMyItem 3500
#define UCONST_EV_CrataeCubeRecordEnd 3490
#define UCONST_EV_CrataeCubeRecordItem 3480
#define UCONST_EV_CrataeCubeRecordBegin 3470
#define UCONST_EV_PremiumItemList 3461
#define UCONST_EV_PremiumItemAlarm 3460
#define UCONST_EV_SetShowAllStateInfo 3452
#define UCONST_EV_BookMarkShow 3451
#define UCONST_EV_BookMarkList 3450
#define UCONST_EV_ShowChangeNicknameNColor 3440
#define UCONST_EV_NotifyBeforeStateChanged 3411
#define UCONST_EV_StateChanged 3410
#define UCONST_EV_ToggleDetailStatusWnd 3400
#define UCONST_EV_PVPMatchUserDie 3390
#define UCONST_EV_PVPMatchRecordEachUserInfo 3380
#define UCONST_EV_PVPMatchRecord 3370
#define UCONST_EV_FinishRotate 3360
#define UCONST_EV_OpenDialogRestart 3350
#define UCONST_EV_OpenDialogQuit 3340
#define UCONST_EV_ToggleXMasSealWndShowHide 3330
#define UCONST_EV_QuestHtmlWndHide 3324
#define UCONST_EV_QuestHtmlWndShow 3323
#define UCONST_EV_QuestHtmlWndLoadHtmlFromString 3322
#define UCONST_EV_QuestIDWndLoadHtmlFromString 3321
#define UCONST_EV_ItemDescWndSetWindowTitle 3320
#define UCONST_EV_ItemDescWndLoadHtmlFromString 3310
#define UCONST_EV_ItemDescWndShow 3300
#define UCONST_EV_NPCDialogWndLoadHtmlFromStringBig1 3291
#define UCONST_EV_NPCDialogWndLoadHtmlFromString 3290
#define UCONST_EV_NPCDialogWndHideBig1 3281
#define UCONST_EV_NPCDialogWndHide 3280
#define UCONST_EV_NPCDialogWndShowBig1 3271
#define UCONST_EV_NPCDialogWndShow 3270
#define UCONST_EV_CharacterCreateEnableRotate 3260
#define UCONST_EV_CharacterCreateClearName 3250
#define UCONST_EV_CharacterCreateClearWnd 3240
#define UCONST_EV_CharacterCreateClearSetupWnd 3230
#define UCONST_EV_CharacterCreateClearClassDesc 3220
#define UCONST_EV_CharacterCreateSetClassDesc 3210
#define UCONST_EV_FortressMapBarrackInfo 3202
#define UCONST_EV_ShowFortressMapInfo 3201
#define UCONST_EV_ShowFortressSiegeInfo 3200
#define UCONST_EV_AddAgitInfo 3190
#define UCONST_EV_ShowAgitInfo 3180
#define UCONST_EV_AddFortressInfo 3170
#define UCONST_EV_ShowFortressInfo 3160
#define UCONST_EV_AddCastleInfo 3150
#define UCONST_EV_ShowCastleInfo 3140
#define UCONST_EV_PartySummonDelete 3133
#define UCONST_EV_PartySummonUpdate 3132
#define UCONST_EV_PartySummonAdd 3131
#define UCONST_EV_PartyPetDelete 3130
#define UCONST_EV_PartyPetUpdate 3120
#define UCONST_EV_PartyPetAdd 3110
#define UCONST_EV_ShowWindow 3080
#define UCONST_EV_MouseOut 3070
#define UCONST_EV_MouseOver 3060
#define UCONST_EV_ITEM_AUCTION_UPDATED_BIDDING_INFO 3053
#define UCONST_EV_ITEM_AUCTION_NEXT_NOTEXIST 3052
#define UCONST_EV_ITEM_AUCTION_NEXT_INFO 3051
#define UCONST_EV_ITEM_AUCTION_INFO 3050
#define UCONST_EV_LobbyShowDormantUserCouponWnd 3029
#define UCONST_EV_LobbyShowPremiumLevelInfo 3028
#define UCONST_EV_LobbyCharacterReceivingFinished 3027
#define UCONST_EV_LobbyGetSelectedCharacterIndex 3026
#define UCONST_EV_LobbyShowDialog 3025
#define UCONST_EV_LobbyStartButtonClick 3024
#define UCONST_EV_LobbyClearCharacterName 3023
#define UCONST_EV_LobbyCharacterSelect 3022
#define UCONST_EV_LobbyAddCharacterName 3021
#define UCONST_EV_LobbyMenuButtonEnable 3020
#define UCONST_EV_TextLinkRButtonClick 3010
#define UCONST_EV_TextLinkLButtonClick 3000
#define UCONST_EV_MinimapRegionInfoBtnClick 2990
#define UCONST_EV_MinimapTravel 2980
#define UCONST_EV_NotifyPartyMemberPosition 2971
#define UCONST_EV_NotifyObject 2970
#define UCONST_EV_RequestTooltipInfo 2960
#define UCONST_EV_EditorUpdateProperty 2950
#define UCONST_EV_EditorSetProperty 2940
#define UCONST_EV_TrackerDetach 2930
#define UCONST_EV_TrackerAttach 2920
#define UCONST_EV_ResolutionChanged 2900
#define UCONST_EV_RemoveAttributeEnchantResult 2898
#define UCONST_EV_RemoveAttributeEnchantItemData 2897
#define UCONST_EV_RemoveAttributeEnchantWndShow 2896
#define UCONST_EV_AttributeEnchantResult 2895
#define UCONST_EV_AttributeEnchantItemList 2894
#define UCONST_EV_AttributeEnchantItemShow 2893
#define UCONST_EV_EnchantRemoveSupportItemResult 2883
#define UCONST_EV_EnchantPutScrollItemResult 2882
#define UCONST_EV_EnchantPutSupportItemResult 2881
#define UCONST_EV_EnchantPutTargetItemResult 2880
#define UCONST_EV_EnchantResult 2870
#define UCONST_EV_EnchantHide 2865
#define UCONST_EV_EnchantShow 2860
#define UCONST_EV_QuestInfo 2850
#define UCONST_EV_QuestInfoStart 2840
#define UCONST_EV_RefineryRefineCancelResult 2830
#define UCONST_EV_RefineryConfirmCancelItemResult 2820
#define UCONST_EV_ShowRefineryCancelInteface 2810
#define UCONST_EV_RefineryRefineResult 2800
#define UCONST_EV_RefineryConfirmGemStoneResult 2790
#define UCONST_EV_RefineryConfirmRefinerItemResult 2780
#define UCONST_EV_RefineryConfirmTargetItemResult 2770
#define UCONST_EV_ShowRefineryInteface 2760
#define UCONST_EV_DuelEnemyRelation 2750
#define UCONST_EV_DuelUpdateUserInfo 2740
#define UCONST_EV_DuelEnd 2730
#define UCONST_EV_DuelStart 2720
#define UCONST_EV_DuelReady 2710
#define UCONST_EV_DuelAskStart 2700
#define UCONST_EV_ManorShopWndAddItem 2690
#define UCONST_EV_ManorShopWndOpen 2680
#define UCONST_EV_ManorCropInfoChangeWndShow 2670
#define UCONST_EV_ManorCropInfoSettingWndChangeValue 2668
#define UCONST_EV_ManorCropInfoSettingWndAddItemEnd 2667
#define UCONST_EV_ManorCropInfoSettingWndAddItem 2666
#define UCONST_EV_ManorCropInfoSettingWndShow 2665
#define UCONST_EV_ManorSeedInfoChangeWndShow 2660
#define UCONST_EV_ManorSeedInfoSettingWndChangeValue 2659
#define UCONST_EV_ManorSeedInfoSettingWndAddItemEnd 2658
#define UCONST_EV_ManorSeedInfoSettingWndAddItem 2657
#define UCONST_EV_ManorSeedInfoSettingWndShow 2656
#define UCONST_EV_ManorInfoWndDefaultAdd 2655
#define UCONST_EV_ManorInfoWndDefaultShow 2654
#define UCONST_EV_ManorInfoWndCropAdd 2653
#define UCONST_EV_ManorInfoWndCropShow 2652
#define UCONST_EV_ManorInfoWndSeedAdd 2651
#define UCONST_EV_ManorInfoWndSeedShow 2650
#define UCONST_EV_ManorCropSellChangeWndSetCropNameAndRewardType 2649
#define UCONST_EV_ManorCropSellChangeWndAddItem 2648
#define UCONST_EV_ManorCropSellChangeWndShow 2647
#define UCONST_EV_ManorCropSellWndSetCropSell 2646
#define UCONST_EV_ManorCropSellWndAddItem 2645
#define UCONST_EV_ManorCropSellWndShow 2640
#define UCONST_EV_InventoryPremiumHennaInfoClear 2633
#define UCONST_EV_InventoryAddPremiumHennaInfo 2632
#define UCONST_EV_InventoryToggleWindow 2631
#define UCONST_EV_InventoryAddHennaInfo 2630
#define UCONST_EV_InventoryItemListEnd 2620
#define UCONST_EV_InventoryUpdateItem 2610
#define UCONST_EV_InventoryAddItem 2600
#define UCONST_EV_InventoryHideWindow 2590
#define UCONST_EV_InventoryOpenWindow 2580
#define UCONST_EV_InventoryClear 2570
#define UCONST_EV_MultiSellResult 2565
#define UCONST_EV_NewMultiSellInfoListEnd 2561
#define UCONST_EV_MultiSellInfoListEnd 2560
#define UCONST_EV_NewMultiSellInputItemInfo 2551
#define UCONST_EV_MultiSellInputItemInfo 2550
#define UCONST_EV_NewMultiSellOutputItemInfo 2541
#define UCONST_EV_MultiSellOutputItemInfo 2540
#define UCONST_EV_NewMultiSellResultItemInfo 2536
#define UCONST_EV_MultiSellResultItemInfo 2535
#define UCONST_EV_NewMultiSellInfoListBegin 2531
#define UCONST_EV_MultiSellInfoListBegin 2530
#define UCONST_EV_AutoFishAvailable 2490
#define UCONST_EV_AutoFishEnd 2481
#define UCONST_EV_FishViewportWndHide 2480
#define UCONST_EV_AutoFishStart 2471
#define UCONST_EV_ObserverWndHide 2460
#define UCONST_EV_ObserverWndShow 2450
#define UCONST_EV_TutorialViewerWndHide 2440
#define UCONST_EV_TutorialViewerWndShowHtmlFile 2431
#define UCONST_EV_TutorialViewerWndShow 2430
#define UCONST_EV_BeginShowZoneTitleWnd 2420
#define UCONST_EV_GMSnoop 2410
#define UCONST_EV_GMAddPremiumHennaInfo 2405
#define UCONST_EV_GMUpdateHennaInfo 2404
#define UCONST_EV_GMAddHennaInfo 2403
#define UCONST_EV_GMObservingInventoryClear 2402
#define UCONST_EV_GMObservingInventoryAddItem 2401
#define UCONST_EV_GMObservingClanMember 2400
#define UCONST_EV_GMObservingClanMemberStart 2390
#define UCONST_EV_GMObservingClan 2380
#define UCONST_EV_GMObservingWarehouseItemList 2370
#define UCONST_EV_GMObservingWarehouseItemListStart 2360
#define UCONST_EV_GMObservingQuestItem 2350
#define UCONST_EV_GMObservingQuestListEnd 2340
#define UCONST_EV_GMObservingQuestList 2330
#define UCONST_EV_GMObservingQuestListStart 2320
#define UCONST_EV_GMObservingSkillList 2310
#define UCONST_EV_GMObservingSkillListStart 2300
#define UCONST_EV_GMObservingUserInfoUpdateClassic 2291
#define UCONST_EV_GMObservingUserInfoUpdate 2290
#define UCONST_EV_ShowGMWnd 2280
#define UCONST_EV_EventMatchGMMessage 2270
#define UCONST_EV_EventMatchUpdateUserInfo 2260
#define UCONST_EV_EventMatchUpdateTeamInfo 2250
#define UCONST_EV_EventMatchUpdateScore 2240
#define UCONST_EV_EventMatchUpdateTeamName 2230
#define UCONST_EV_StartEventMatchObserver 2220
#define UCONST_EV_EventMatchPartyLeader 2211
#define UCONST_EV_EventMatchManage 2210
#define UCONST_EV_EventMatchDestroyed 2200
#define UCONST_EV_EventMatchCreated 2190
#define UCONST_EV_ShowEventMatchGMWnd 2180
#define UCONST_EV_DeliverAddItem 2170
#define UCONST_EV_DeliverOpenWindow 2160
#define UCONST_EV_SelectDeliverAddName 2150
#define UCONST_EV_SelectDeliverClear 2140
#define UCONST_EV_PrivateShopAddItem 2130
#define UCONST_EV_PrivateShopOpenWindow 2120
#define UCONST_EV_WarehouseDeleteItem 2111
#define UCONST_EV_WarehouseAddItem 2110
#define UCONST_EV_WarehouseOpenWindow 2100
#define UCONST_EV_ShopAddItem 2090
#define UCONST_EV_OnAddCastleTaxRateList 2082
#define UCONST_EV_OnEndTransactionList 2081
#define UCONST_EV_ShopOpenWindow 2080
#define UCONST_EV_SetMaxCount 2070
#define UCONST_EV_SkillEnchantInfoWndAddExtendInfo 2067
#define UCONST_EV_SkillEnchantInfoWndAddSkill 2065
#define UCONST_EV_SkillEnchantInfoWndShow 2064
#define UCONST_EV_SkillLearningNewArrival 2059
#define UCONST_EV_SkillLearningDetailInfo 2058
#define UCONST_EV_SkillLearningTabAddSkillEnd 2057
#define UCONST_EV_SkillLearningTabAddSkillItem 2056
#define UCONST_EV_SkillLearningTabAddSkillBegin 2055
#define UCONST_EV_SkillTrainInfoWndAddExtendInfo 2051
#define UCONST_EV_SkillTrainInfoWndHide 2050
#define UCONST_EV_SkillTrainInfoWndShow 2040
#define UCONST_EV_SkillTrainListWndAddSkill 2030
#define UCONST_EV_SkillTrainListWndHide 2020
#define UCONST_EV_SkillTrainListWndShow 2010
#define UCONST_EV_TradeRequestStartExchange 2000
#define UCONST_EV_TradeUpdateInventoryItem 1990
#define UCONST_EV_TradeOtherOK 1980
#define UCONST_EV_TradeDone 1970
#define UCONST_EV_TradeAddItem 1960
#define UCONST_EV_TradeStart 1950
#define UCONST_EV_EnablePetitionFeedback 1940
#define UCONST_EV_PetitionChatMessage 1930
#define UCONST_EV_ShowUserPetitionWnd 1921
#define UCONST_EV_ShowPetitionWnd 1920
#define UCONST_EV_PCCafePointInfo 1910
#define UCONST_EV_LanguageChanged 1900
#define UCONST_EV_MinimapAdjustViewLocation 1893
#define UCONST_EV_MinimapCloseMultilayer 1892
#define UCONST_EV_MinimapShowMultilayer 1891
#define UCONST_EV_MinimapUpdateGameTime 1890
#define UCONST_EV_MinimapHideReduceBtn 1880
#define UCONST_EV_MinimapShowReduceBtn 1870
#define UCONST_EV_MinimapCursedWeaponLocation 1860
#define UCONST_EV_MinimapCursedWeaponList 1850
#define UCONST_EV_MinimapChangeZone 1840
#define UCONST_EV_MinimapHideQuest 1830
#define UCONST_EV_MinimapShowQuest 1820
#define UCONST_EV_MinimapDeleteAllTarget 1810
#define UCONST_EV_MinimapDeleteTarget 1800
#define UCONST_EV_MinimapAddTarget 1790
#define UCONST_EV_ShowMinimap 1780
#define UCONST_EV_ShowTownMap 1770
#define UCONST_EV_RadarColor 1760
#define UCONST_EV_RadarDeleteAllTarget 1750
#define UCONST_EV_RadarDeleteTarget 1740
#define UCONST_EV_RadarAddTarget 1730
#define UCONST_EV_DialogCancel 1720
#define UCONST_EV_DialogOK 1710
#define UCONST_EV_CalculatorWndShowHide 1700
#define UCONST_EV_HennaInfoWndShowHidePremiumUnEquip 1691
#define UCONST_EV_HennaInfoWndShowHideUnEquip 1690
#define UCONST_EV_HennaListWndAddHennaUnEquip 1680
#define UCONST_EV_HennaListWndClose 1671
#define UCONST_EV_HennaListWndShowHideUnEquip 1670
#define UCONST_EV_HennaInfoWndShowHidePremiumEquip 1661
#define UCONST_EV_HennaInfoWndShowHideEquip 1660
#define UCONST_EV_HennaListWndAddHennaEquip 1650
#define UCONST_EV_HennaListWndShowHideEquip 1640
#define UCONST_EV_PartyMatchCommand 1630
#define UCONST_EV_PartyMatchWaitList 1620
#define UCONST_EV_PartyMatchWaitListStart 1610
#define UCONST_EV_PartyMatchChatMessage 1600
#define UCONST_EV_PartyMatchRoomMemberUpdate 1590
#define UCONST_EV_PartyMatchRoomMember 1580
#define UCONST_EV_PartyMatchList 1570
#define UCONST_EV_PartyMatchRoomClose 1560
#define UCONST_EV_PartyMatchingRoomHistory 1551
#define UCONST_EV_PartyMatchRoomStart 1550
#define UCONST_EV_PartyMatchStart 1540
#define UCONST_EV_ArriveNewMail 1530
#define UCONST_EV_ArriveShowQuest 1520
#define UCONST_EV_ArriveTutorial 1511
#define UCONST_EV_ArriveNewTutorialQuestion 1510
#define UCONST_EV_IMEStatusChange 1500
#define UCONST_EV_SiegeInfoSelectableTime 1490
#define UCONST_EV_SiegeInfoClanListEnd 1480
#define UCONST_EV_SiegeInfoClanList 1470
#define UCONST_EV_SiegeInfoClanListStart 1460
#define UCONST_EV_SiegeInfo 1450
#define UCONST_EV_RestartMenuHide 1440
#define UCONST_EV_RestartMenuShow 1430
#define UCONST_EV_CommandChannelPartyMember 1420
#define UCONST_EV_CommandChannelRoutingType 1400
#define UCONST_EV_CommandChannelPartyUpdate 1395
#define UCONST_EV_CommandChannelPartyList 1390
#define UCONST_EV_CommandChannelInfo 1380
#define UCONST_EV_CommandChannelEnd 1370
#define UCONST_EV_CommandChannelStart 1360
#define UCONST_EV_ActionSummonedAllSkillList 1352
#define UCONST_EV_ActionSummonedAllSkillListStart 1351
#define UCONST_EV_ActionSummonedCommonList 1350
#define UCONST_EV_ActionSummonedCommonListStart 1340
#define UCONST_EV_ActionPetList 1330
#define UCONST_EV_ActionPetListStart 1320
#define UCONST_EV_ActionListNew 1311
#define UCONST_EV_ActionList 1310
#define UCONST_EV_ActionListStart 1300
#define UCONST_EV_SkillListEnd 1291
#define UCONST_EV_SkillList 1290
#define UCONST_EV_SkillListStart 1280
#define UCONST_EV_MacroDeleted 1270
#define UCONST_EV_MacroShowEditWnd 1260
#define UCONST_EV_MacroList 1250
#define UCONST_EV_MacroUpdate 1240
#define UCONST_EV_MacroShowListWnd 1230
#define UCONST_EV_LoadPetitionHtml 1221
#define UCONST_EV_LoadHelpHtml 1220
#define UCONST_EV_ShowHelp 1210
#define UCONST_EV_ShowBoardPacket 1200
#define UCONST_EV_ShowBBS 1190
#define UCONST_EV_PartySpelledListInsert 1183
#define UCONST_EV_PartySpelledListDelete 1182
#define UCONST_EV_PartyRenameMember 1181
#define UCONST_EV_PartySpelledList 1180
#define UCONST_EV_PartyDeleteAllParty 1170
#define UCONST_EV_PartyDeleteParty 1160
#define UCONST_EV_PartyUpdateParty 1150
#define UCONST_EV_PartyAddParty 1140
#define UCONST_EV_SummonedDelete 1132
#define UCONST_EV_SummonedStatusClose 1131
#define UCONST_EV_PetStatusClose 1130
#define UCONST_EV_SummonedStatusRemainTime 1120
#define UCONST_EV_SummonedStatusSpelledListInsert 1113
#define UCONST_EV_SummonedStatusSpelledListDelete 1112
#define UCONST_EV_SummonedStatusSpelledList 1110
#define UCONST_EV_SummonedStatusShow 1100
#define UCONST_EV_SummonedWndShow 1090
#define UCONST_EV_PetInventoryItemUpdate 1080
#define UCONST_EV_PetInventoryItemList 1070
#define UCONST_EV_PetInventoryItemStart 1060
#define UCONST_EV_PetStatusSpelledListInsert 1053
#define UCONST_EV_PetStatusSpelledListDelete 1052
#define UCONST_EV_PetStatusSpelledList 1050
#define UCONST_EV_PetStatusShow 1040
#define UCONST_EV_PetWndRegPetNameFailed 1030
#define UCONST_EV_PetWndShowNameBtn 1020
#define UCONST_EV_PetWndShow 1010
#define UCONST_EV_ShowBuffIcon 1000
#define UCONST_EV_TargetHideWindow 990
#define UCONST_EV_TargetSkillCancel 982
#define UCONST_EV_TargetSkillInfo 981
#define UCONST_EV_TargetUpdate 980
#define UCONST_EV_AbnormalStatusShortItem 970
#define UCONST_EV_AbnormalStatusEtcItem 960
#define UCONST_EV_AbnormalStatusNormalItem 950
#define UCONST_EV_OlympiadBuffInfo 940
#define UCONST_EV_OlympiadBuffShow 930
#define UCONST_EV_OlympiadUserInfo 920
#define UCONST_EV_OlympiadMatchEnd 910
#define UCONST_EV_OlympiadTargetShow 900
#define UCONST_EV_HeroRecord 890
#define UCONST_EV_HeroShowList 880
#define UCONST_EV_RecipeShopAddShopItem 870
#define UCONST_EV_RecipeShopAddBookItem 860
#define UCONST_EV_RecipeShopShowWnd 850
#define UCONST_EV_RecipeItemMakeInfo 840
#define UCONST_EV_RecipeAddBookItem 830
#define UCONST_EV_RecipeShowBookWnd 820
#define UCONST_EV_RecipeShowRecipeTreeWnd 810
#define UCONST_EV_RecipeShopItemInfo 800
#define UCONST_EV_RecipeShopSellItem 790
#define UCONST_EV_RecipeShowBuyListWnd 780
#define UCONST_EV_SSQPreInfo 770
#define UCONST_EV_SSQSealStatus 760
#define UCONST_EV_SSQMainEvent 750
#define UCONST_EV_SSQStatus 740
#define UCONST_EV_QuestSetCurrentID 730
#define UCONST_EV_QuestListEnd 720
#define UCONST_EV_QuestList 710
#define UCONST_EV_QuestListStart 700
#define UCONST_EV_ShortcutAutomaticUseActivated 694
#define UCONST_EV_ShortcutKeyAssignChanged 693
#define UCONST_EV_ShortcutDataReceived 692
#define UCONST_EV_ShortcutInit 691
#define UCONST_EV_ShowShortcutWnd 690
#define UCONST_EV_ShortcutPageUp 680
#define UCONST_EV_ShortcutPageDown 670
#define UCONST_EV_ShortcutJoypad 660
#define UCONST_EV_ShortcutClear 650
#define UCONST_EV_ShortcutPageUpdate 640
#define UCONST_EV_ShortcutSkillListUpdate 631
#define UCONST_EV_ShortcutUpdate 630
#define UCONST_EV_JoypadRButtonUp 620
#define UCONST_EV_JoypadRButtonDown 610
#define UCONST_EV_JoypadLButtonUp 600
#define UCONST_EV_JoypadLButtonDown 590
#define UCONST_EV_MessageWndString 581
#define UCONST_EV_SystemMessage 580
#define UCONST_EV_ChatWndMacroCommand 572
#define UCONST_EV_ChatWndMsnStatus 571
#define UCONST_EV_ChatWndSetFocus 570
#define UCONST_EV_ChatWndSetString 560
#define UCONST_EV_ChatWndOnResize 555
#define UCONST_EV_ChatWndStatusChange 550
#define UCONST_EV_GFxScrMessage 542
#define UCONST_EV_ReceiveChatMessage 541
#define UCONST_EV_ChatMessage 540
#define UCONST_EV_ToggleShowPCCafeEventWnd 531
#define UCONST_EV_ShowPCCafeCouponUI 530
#define UCONST_EV_PartyMemberChanged 520
#define UCONST_EV_MinFrameRateChanged 510
#define UCONST_EV_ClanSkillListRenew 500
#define UCONST_EV_ClanSkillList 490
#define UCONST_EV_ClanSubClanUpdated 480
#define UCONST_EV_ClanClearWarList 470
#define UCONST_EV_ClanWarList 460
#define UCONST_EV_ClanDeleteMember 450
#define UCONST_EV_ClanMemberInfoUpdate 440
#define UCONST_EV_ClanMemberInfo 430
#define UCONST_EV_ClanDeleteAllMember 420
#define UCONST_EV_ClanAddMemberMultiple 410
#define UCONST_EV_ClanAddMember 400
#define UCONST_EV_ClanAuthMember 380
#define UCONST_EV_ClanAuth 370
#define UCONST_EV_ClanCrestChange 360
#define UCONST_EV_ClanAuthGradeList 350
#define UCONST_EV_ClanMyAuth 340
#define UCONST_EV_ClanInfoUpdate 330
#define UCONST_EV_ClanInfo 320
#define UCONST_EV_ShowReplayQuitDialogBox 310
#define UCONST_EV_ReceiveTargetLevelDiff 300
#define UCONST_EV_ReceiveMagicSkillUse 290
#define UCONST_EV_ReceiveAttack 280
#define UCONST_EV_UpdateHennaInfo 260
#define UCONST_EV_UpdateSummonInfo 251
#define UCONST_EV_UpdatePetInfo 250
#define UCONST_EV_UpdateMyMaxBP 248
#define UCONST_EV_UpdateMyBP 247
#define UCONST_EV_UpdateMyMaxDP 246
#define UCONST_EV_UpdateMyDP 245
#define UCONST_EV_UpdateMyMaxCP 241
#define UCONST_EV_UpdateMaxCP 240
#define UCONST_EV_UpdateMyCP 231
#define UCONST_EV_UpdateCP 230
#define UCONST_EV_UpdateMyMaxMP 221
#define UCONST_EV_UpdateMaxMP 220
#define UCONST_EV_UpdateMyMP 211
#define UCONST_EV_UpdateMP 210
#define UCONST_EV_UpdateMyMaxHP 201
#define UCONST_EV_UpdateMaxHP 200
#define UCONST_EV_UpdateMyHP 191
#define UCONST_EV_UpdateHP 190
#define UCONST_EV_PreUpdateUserInfo 182
#define UCONST_EV_UpdateUserEquipSlotInfo 181
#define UCONST_EV_UpdateUserInfo 180
#define UCONST_EV_ServerAgeLimitChange 170
#define UCONST_EV_GamingStatePreExit 161
#define UCONST_EV_GamingStateExit 160
#define UCONST_EV_GamingStateEnter 150
#define UCONST_EV_ShowScreenNPCZoomMessage 141
#define UCONST_EV_ShowScreenMessage 140
#define UCONST_EV_ShowGuideWnd 130
#define UCONST_EV_RaidRecord 120
#define UCONST_EV_SetRadarZoneCode 110
#define UCONST_EV_MagicSkillList 100
#define UCONST_EV_ShortcutCommandSlot 91
#define UCONST_EV_ShortcutCommand 90
#define UCONST_EV_RadarTransitionFinished 80
#define UCONST_EV_RegenStatus 70
#define UCONST_EV_CardKeyLogin 60
#define UCONST_EV_Die 50
#define UCONST_EV_Restart 40
#define UCONST_EV_Paste 20
#define UCONST_EV_Test_9 19
#define UCONST_EV_Test_8 18
#define UCONST_EV_Test_7 17
#define UCONST_EV_Test_6 16
#define UCONST_EV_Test_5 15
#define UCONST_EV_Test_4 14
#define UCONST_EV_Test_3 13
#define UCONST_EV_Test_2 12
#define UCONST_EV_Test_1 11
#define UCONST_EV_Test 10
#define UCONST_EV_UI_Internal_Event 5
#define UCONST_CREATE_ON_DEMAND 1
#define UCONST_MAX_PartyMemberCount 9

class NWINDOW_API UUIEventManager : public UInteractions
{
public:
    DECLARE_FUNCTION(execGetUIState);
    DECLARE_FUNCTION(execSMessageBox);
    DECLARE_FUNCTION(execMessageBox);
    DECLARE_FUNCTION(execSetUIState);
    DECLARE_FUNCTION(execRegisterState);
    DECLARE_FUNCTION(execRegisterEvent);
    DECLARE_FUNCTION(execItemInfoToParam);
    DECLARE_FUNCTION(execParamToItemInfo);
    DECLARE_FUNCTION(execParseFloat);
    DECLARE_FUNCTION(execParseINT64);
    DECLARE_FUNCTION(execParseInt);
    DECLARE_FUNCTION(execParseString);
    DECLARE_FUNCTION(execParamAddINT64);
    DECLARE_FUNCTION(execParamAdd);
    DECLARE_FUNCTION(execExecuteEvent);
    DECLARE_CLASS(UUIEventManager,UInteractions,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIEventManager)
};


class NWINDOW_API UActionAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execGetActionUIData);
    DECLARE_FUNCTION(execGetActionAutomaticUseType);
    DECLARE_FUNCTION(execGetActionNameBySocialIndex);
    DECLARE_FUNCTION(execRequestSummonedAllSkillActionList);
    DECLARE_FUNCTION(execRequestSummonedCommonActionList);
    DECLARE_FUNCTION(execRequestPetActionList);
    DECLARE_FUNCTION(execRequestActionList);
    DECLARE_CLASS(UActionAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UActionAPI)
};


class NWINDOW_API UWindowHandle : public UUIEventManager
{
public:
    class UObject* m_pTargetWnd;
    FStringNoInit m_WindowNameWithFullPath;
    DECLARE_FUNCTION(execGetResizeFrame);
    DECLARE_FUNCTION(execGetCurrentScalableSizeRate);
    DECLARE_FUNCTION(execScalingToCurrentSizeType);
    DECLARE_FUNCTION(execScalingToDefaultSizeType);
    DECLARE_FUNCTION(execSetUpScalableUIDefaultSetting);
    DECLARE_FUNCTION(execSetUnConditionalShow);
    DECLARE_FUNCTION(execSetCanBeShownDuringScene);
    DECLARE_FUNCTION(execSetResizeFrameOffset);
    DECLARE_FUNCTION(execEnableDynamicAlpha);
    DECLARE_FUNCTION(execGetChildWindow);
    DECLARE_FUNCTION(execInsertTooltipDrawItem);
    DECLARE_FUNCTION(execSetTooltipCalculateSize);
    DECLARE_FUNCTION(execSetShowAndHideAnimType);
    DECLARE_FUNCTION(execIsCurrentState);
    DECLARE_FUNCTION(execExitState);
    DECLARE_FUNCTION(execEnterState);
    DECLARE_FUNCTION(execChangeControlOrder);
    DECLARE_FUNCTION(execMakeBaseUC);
    DECLARE_FUNCTION(execConvertToEditable);
    DECLARE_FUNCTION(execSetXMLDocumentInfo);
    DECLARE_FUNCTION(execGetXMLDocumentInfo);
    DECLARE_FUNCTION(execSaveXMLWindow);
    DECLARE_FUNCTION(execLoadXMLWindow);
    DECLARE_FUNCTION(execGetControlType);
    DECLARE_FUNCTION(execIsControlContainer);
    DECLARE_FUNCTION(execSetScript);
    DECLARE_FUNCTION(execSetBackTexture);
    DECLARE_FUNCTION(execDeleteChildWnd);
    DECLARE_FUNCTION(execGetClassName);
    DECLARE_FUNCTION(execAddChildWnd);
    DECLARE_FUNCTION(execSetEditable);
    DECLARE_FUNCTION(execInitRotation);
    DECLARE_FUNCTION(execIsFront);
    DECLARE_FUNCTION(execClearRotation);
    DECLARE_FUNCTION(execRotate);
    DECLARE_FUNCTION(execSetSettledWnd);
    DECLARE_FUNCTION(execSetScrollUnit);
    DECLARE_FUNCTION(execGetScrollHeight);
    DECLARE_FUNCTION(execSetScrollHeight);
    DECLARE_FUNCTION(execGetScrollPosition);
    DECLARE_FUNCTION(execSetScrollPosition);
    DECLARE_FUNCTION(execSetScrollBarPosition);
    DECLARE_FUNCTION(execSetResizeFrameSize);
    DECLARE_FUNCTION(execSetFrameSize);
    DECLARE_FUNCTION(execClearAllChildShortcutItemTooltip);
    DECLARE_FUNCTION(execClearTooltip);
    DECLARE_FUNCTION(execGetTooltipCustomType);
    DECLARE_FUNCTION(execSetTooltipCustomType);
    DECLARE_FUNCTION(execSetTooltipType);
    DECLARE_FUNCTION(execGetTooltipText);
    DECLARE_FUNCTION(execSetTooltipText);
    DECLARE_FUNCTION(execNotifyAlarm);
    DECLARE_FUNCTION(execKillTimer);
    DECLARE_FUNCTION(execSetTimer);
    DECLARE_FUNCTION(execBringToFront);
    DECLARE_FUNCTION(execBringToFrontOf);
    DECLARE_FUNCTION(execReleaseFocus);
    DECLARE_FUNCTION(execIsFocused);
    DECLARE_FUNCTION(execSetFocus);
    DECLARE_FUNCTION(execIsEnableWindow);
    DECLARE_FUNCTION(execDisableWindow);
    DECLARE_FUNCTION(execEnableWindow);
    DECLARE_FUNCTION(execSetDragOverTexture);
    DECLARE_FUNCTION(execSetVirtualDrag);
    DECLARE_FUNCTION(execIsVirtualDrag);
    DECLARE_FUNCTION(execSetStuckable);
    DECLARE_FUNCTION(execSetDraggable);
    DECLARE_FUNCTION(execIsDraggable);
    DECLARE_FUNCTION(execIsAnchored);
    DECLARE_FUNCTION(execClearAnchor);
    DECLARE_FUNCTION(execSetAnchor);
    DECLARE_FUNCTION(execDisableTick);
    DECLARE_FUNCTION(execEnableTick);
    DECLARE_FUNCTION(execMoveShake);
    DECLARE_FUNCTION(execMoveExWithTime);
    DECLARE_FUNCTION(execMoveC);
    DECLARE_FUNCTION(execMoveEx);
    DECLARE_FUNCTION(execMoveTo);
    DECLARE_FUNCTION(execMove);
    DECLARE_FUNCTION(execIsRelativeSize);
    DECLARE_FUNCTION(execSetWindowSizeRel43);
    DECLARE_FUNCTION(execGetWindowSizeRel);
    DECLARE_FUNCTION(execSetWindowSizeRel);
    DECLARE_FUNCTION(execGetWindowSize);
    DECLARE_FUNCTION(execSetWindowSize);
    DECLARE_FUNCTION(execAddWindowSize);
    DECLARE_FUNCTION(execGetRect);
    DECLARE_FUNCTION(execSetModal);
    DECLARE_FUNCTION(execSetAlwaysFullAlpha);
    DECLARE_FUNCTION(execSetFontColor);
    DECLARE_FUNCTION(execIsAlwaysOnBack);
    DECLARE_FUNCTION(execIsAlwaysOnTop);
    DECLARE_FUNCTION(execIsVirtual);
    DECLARE_FUNCTION(execGetScriptName);
    DECLARE_FUNCTION(execGetScript);
    DECLARE_FUNCTION(execSetAlpha);
    DECLARE_FUNCTION(execGetAlpha);
    DECLARE_FUNCTION(execGetTopFrameWnd);
    DECLARE_FUNCTION(execIsChildOf);
    DECLARE_FUNCTION(execGetChildWindowList);
    DECLARE_FUNCTION(execGetParentWindowHandle);
    DECLARE_FUNCTION(execChangeParentWindow);
    DECLARE_FUNCTION(execGetParentWindowName);
    DECLARE_FUNCTION(execGetWindowName);
    DECLARE_FUNCTION(execIsMinimizedWindow);
    DECLARE_FUNCTION(execIsShowWindow);
    DECLARE_FUNCTION(execHideWindow);
    DECLARE_FUNCTION(execShowWindow);
    DECLARE_FUNCTION(execSetTitlePosOffset);
    DECLARE_FUNCTION(execSetWindowTitle);
    DECLARE_CLASS(UWindowHandle,UUIEventManager,0,NWindow)
	#include "WindowHandle.h"
};


class NWINDOW_API UTextureHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetColorModify);
    DECLARE_FUNCTION(execGetColor);
    DECLARE_FUNCTION(execSetRotatingDirection);
    DECLARE_FUNCTION(execSetAutoRotateType);
    DECLARE_FUNCTION(execGetTextureName);
    DECLARE_FUNCTION(execSetTextureWithObject);
    DECLARE_FUNCTION(execSetTextureWithClanCrest);
    DECLARE_FUNCTION(execSetTextureCtrlType);
    DECLARE_FUNCTION(execSetTextureSize);
    DECLARE_FUNCTION(execSetUV);
    DECLARE_FUNCTION(execSetTexture);
    DECLARE_CLASS(UTextureHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UTextureHandle)
};


class NWINDOW_API UAnimTextureHandle : public UTextureHandle
{
public:
    DECLARE_FUNCTION(execStop);
    DECLARE_FUNCTION(execPause);
    DECLARE_FUNCTION(execPlay);
    DECLARE_FUNCTION(execSetTimes);
    DECLARE_FUNCTION(execSetLoopCount);
    DECLARE_CLASS(UAnimTextureHandle,UTextureHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UAnimTextureHandle)
};


class NWINDOW_API UBarHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetTexture);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execGetValue);
    DECLARE_FUNCTION(execSetValue);
    DECLARE_CLASS(UBarHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UBarHandle)
};


class NWINDOW_API UButtonHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetDefaultTextDisableColor);
    DECLARE_FUNCTION(execSetDefaultTextEnableColor);
    DECLARE_FUNCTION(execSetEnable);
    DECLARE_FUNCTION(execSetButtonValue);
    DECLARE_FUNCTION(execGetButtonValue);
    DECLARE_FUNCTION(execIsMouseOver);
    DECLARE_FUNCTION(execSetTexture);
    DECLARE_FUNCTION(execSetNameText);
    DECLARE_FUNCTION(execSetButtonName);
    DECLARE_FUNCTION(execGetButtonName);
    DECLARE_CLASS(UButtonHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UButtonHandle)
};


class NWINDOW_API UCharacterViewportWindowHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetBackgroundTex);
    DECLARE_FUNCTION(execApplyPreviewCostumeItem);
    DECLARE_FUNCTION(execSetNPCViewportData);
    DECLARE_FUNCTION(execSetSpawnDuration);
    DECLARE_FUNCTION(execSetCameraDistance);
    DECLARE_FUNCTION(execSetCurrentRotation);
    DECLARE_FUNCTION(execSetDragRotationRate);
    DECLARE_FUNCTION(execSetNPCInfo);
    DECLARE_FUNCTION(execHideNPC);
    DECLARE_FUNCTION(execShowNPC);
    DECLARE_FUNCTION(execAutoAttacking);
    DECLARE_FUNCTION(execPlayAttackAnimation);
    DECLARE_FUNCTION(execPlayAnimation);
    DECLARE_FUNCTION(execSetCharacterOffset);
    DECLARE_FUNCTION(execSetCharacterOffsetZ);
    DECLARE_FUNCTION(execSetUISound);
    DECLARE_FUNCTION(execSpawnEffect);
    DECLARE_FUNCTION(execSpawnNPC);
    DECLARE_FUNCTION(execSetCharacterOffsetY);
    DECLARE_FUNCTION(execSetCharacterOffsetX);
    DECLARE_FUNCTION(execSetCharacterScale);
    DECLARE_FUNCTION(execEndZoom);
    DECLARE_FUNCTION(execStartZoom);
    DECLARE_FUNCTION(execEndRotation);
    DECLARE_FUNCTION(execStartRotation);
    DECLARE_CLASS(UCharacterViewportWindowHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UCharacterViewportWindowHandle)
};

enum ELineGapType
{
    LG_NONE                 =0,
    LG_AUTO                 =1,
    LG_MANUAL               =2,
    LG_MAX                  =3,
};

class NWINDOW_API UTextListBoxHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetFontIDByName);
    DECLARE_FUNCTION(execSetTextListBoxScrollPosition);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execAddStringToChatWindow);
    DECLARE_FUNCTION(execAddString);
    DECLARE_CLASS(UTextListBoxHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UTextListBoxHandle)
};


class NWINDOW_API UChatWindowHandle : public UTextListBoxHandle
{
public:
    DECLARE_FUNCTION(execISScrollable);
    DECLARE_FUNCTION(execEnableTexture);
    DECLARE_CLASS(UChatWindowHandle,UTextListBoxHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UChatWindowHandle)
};


class NWINDOW_API UCheckBoxHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execToggleDisable);
    DECLARE_FUNCTION(execSetDisable);
    DECLARE_FUNCTION(execIsDisable);
    DECLARE_FUNCTION(execIsChecked);
    DECLARE_FUNCTION(execSetCheck);
    DECLARE_FUNCTION(execSetTitle);
    DECLARE_CLASS(UCheckBoxHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UCheckBoxHandle)
};


class NWINDOW_API UComboBoxHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execGetAdditionalString);
    DECLARE_FUNCTION(execAddStringWithIconWithGapWithStr);
    DECLARE_FUNCTION(execAddStringWithIconWithStr);
    DECLARE_FUNCTION(execAddStringWithIconWithGap);
    DECLARE_FUNCTION(execAddStringWithIcon);
    DECLARE_FUNCTION(execAddStringWithFileExt);
    DECLARE_FUNCTION(execGetFileExtInfo);
    DECLARE_FUNCTION(execAddStringWithColor);
    DECLARE_FUNCTION(execGetNumOfItems);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execSetSelectedNum);
    DECLARE_FUNCTION(execGetSelectedNum);
    DECLARE_FUNCTION(execGetReserved);
    DECLARE_FUNCTION(execGetString);
    DECLARE_FUNCTION(execSYS_AddStringWithReserved);
    DECLARE_FUNCTION(execAddStringWithReserved);
    DECLARE_FUNCTION(execSYS_AddString);
    DECLARE_FUNCTION(execAddStringWithGap);
    DECLARE_FUNCTION(execAddString);
    DECLARE_CLASS(UComboBoxHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UComboBoxHandle)
};


class NWINDOW_API UDrawPanelHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetMiddleAlign);
    DECLARE_FUNCTION(execPreCheckPanelSize);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execInsertDrawItem);
    DECLARE_CLASS(UDrawPanelHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UDrawPanelHandle)
};


class NWINDOW_API UEditBoxHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetIME);
    DECLARE_FUNCTION(execSetAsChatEditBox);
    DECLARE_FUNCTION(execSetVAlign);
    DECLARE_FUNCTION(execSetAlign);
    DECLARE_FUNCTION(execGetFormatString);
    DECLARE_FUNCTION(execSetFormatString);
    DECLARE_FUNCTION(execAddEmojiIcon);
    DECLARE_FUNCTION(execIsEmpty);
    DECLARE_FUNCTION(execSetUnFocusedBackTexture);
    DECLARE_FUNCTION(execSetFocusedBackTexture);
    DECLARE_FUNCTION(execDeleteClipBoard);
    DECLARE_FUNCTION(execIsShowCandidateBox);
    DECLARE_FUNCTION(execSetDownList);
    DECLARE_FUNCTION(execAddItemToAutoCompleteHistory);
    DECLARE_FUNCTION(execDeleteNameFromAdditionalSearchList);
    DECLARE_FUNCTION(execClearAdditionalSearchList);
    DECLARE_FUNCTION(execFillAdditionalSearchList);
    DECLARE_FUNCTION(execAddNameToAdditionalSearchList);
    DECLARE_FUNCTION(execAllSelect);
    DECLARE_FUNCTION(execClearHistory);
    DECLARE_FUNCTION(execSetEnableTextLink);
    DECLARE_FUNCTION(execGetMaxLength);
    DECLARE_FUNCTION(execSetMaxLength);
    DECLARE_FUNCTION(execSetHighLight);
    DECLARE_FUNCTION(execSetEditType);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execSimulateBackspace);
    DECLARE_FUNCTION(execAddString);
    DECLARE_FUNCTION(execSetString);
    DECLARE_FUNCTION(execGetString);
    DECLARE_CLASS(UEditBoxHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UEditBoxHandle)
};


class NWINDOW_API UEffectViewportWndHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSpawnEffect);
    DECLARE_FUNCTION(execSetCameraYaw);
    DECLARE_FUNCTION(execSetCameraPitch);
    DECLARE_FUNCTION(execSetCameraDistance);
    DECLARE_FUNCTION(execSetOffset);
    DECLARE_FUNCTION(execSetScale);
    DECLARE_CLASS(UEffectViewportWndHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UEffectViewportWndHandle)
};


class NWINDOW_API UFlashCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execInvoke);
    DECLARE_FUNCTION(execSetFlashFile);
    DECLARE_FUNCTION(execGotoFrame);
    DECLARE_FUNCTION(execGetCurrentFrame);
    DECLARE_FUNCTION(execGetTotalFrameCnt);
    DECLARE_FUNCTION(execStop);
    DECLARE_FUNCTION(execPause);
    DECLARE_FUNCTION(execPlay);
    DECLARE_CLASS(UFlashCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UFlashCtrlHandle)
};


class NWINDOW_API UHtmlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execIsPageLock);
    DECLARE_FUNCTION(execSetPageLock);
    DECLARE_FUNCTION(execSetHtmlBuffData);
    DECLARE_FUNCTION(execControllerExecution);
    DECLARE_FUNCTION(execGetFrameMaxHeight);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execLoadHtmlFromString);
    DECLARE_FUNCTION(execLoadHtml);
    DECLARE_CLASS(UHtmlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UHtmlHandle)
};


class NWINDOW_API UItemWindowHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetDualSlotBitType);
    DECLARE_FUNCTION(execSetNoItemDrag);
    DECLARE_FUNCTION(execSetButtonClick);
    DECLARE_FUNCTION(execClearItemTooltip);
    DECLARE_FUNCTION(execClearNewlyAcquired);
    DECLARE_FUNCTION(execSetNewlyAcquired);
    DECLARE_FUNCTION(execSetIconDrawType);
    DECLARE_FUNCTION(execSetIconIndex);
    DECLARE_FUNCTION(execSetToggleEffect);
    DECLARE_FUNCTION(execResizeScrollBar);
    DECLARE_FUNCTION(execSetSelectedNum);
    DECLARE_FUNCTION(execPushSideTypeNextBtn);
    DECLARE_FUNCTION(execPushSideTypePrevBtn);
    DECLARE_FUNCTION(execGetSideTypeCurPage);
    DECLARE_FUNCTION(execGetSideTypePageNum);
    DECLARE_FUNCTION(execFindItemByClassID);
    DECLARE_FUNCTION(execSetItemUsability);
    DECLARE_FUNCTION(execSetExpandItemNum);
    DECLARE_FUNCTION(execSetCol);
    DECLARE_FUNCTION(execSetRow);
    DECLARE_FUNCTION(execSetDisableTex);
    DECLARE_FUNCTION(execGetIndexAt);
    DECLARE_FUNCTION(execSwapItems);
    DECLARE_FUNCTION(execShowScrollBar);
    DECLARE_FUNCTION(execSetFaded);
    DECLARE_FUNCTION(execFindItemWithReserved);
    DECLARE_FUNCTION(execFindItemWithAllProperty);
    DECLARE_FUNCTION(execFindItem);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execSetBlessPanelDrawType);
    DECLARE_FUNCTION(execSetItemSkillDisabled);
    DECLARE_FUNCTION(execGetItemSkillDisabled);
    DECLARE_FUNCTION(execGetItemIdLevel);
    DECLARE_FUNCTION(execGetItem);
    DECLARE_FUNCTION(execGetSelectedItem);
    DECLARE_FUNCTION(execDeleteItem);
    DECLARE_FUNCTION(execSetItem);
    DECLARE_FUNCTION(execAddItemWithFaded);
    DECLARE_FUNCTION(execAddItem);
    DECLARE_FUNCTION(execClearSelect);
    DECLARE_FUNCTION(execGetItemNum);
    DECLARE_FUNCTION(execGetSelectedNum);
    DECLARE_CLASS(UItemWindowHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UItemWindowHandle)
};


class NWINDOW_API UListBoxHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetMaxRow);
    DECLARE_FUNCTION(execSetDrawOffset);
    DECLARE_FUNCTION(execSetListBoxScrollPosition);
    DECLARE_FUNCTION(execGetSelectedItemData);
    DECLARE_FUNCTION(execGetSelectedString);
    DECLARE_FUNCTION(execAddStringWithData);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execAddString);
    DECLARE_CLASS(UListBoxHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UListBoxHandle)
};


class NWINDOW_API UListCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execIsAscending);
    DECLARE_FUNCTION(execSetAscend);
    DECLARE_FUNCTION(execHideSortIcon);
    DECLARE_FUNCTION(execShowSortIcon);
    DECLARE_FUNCTION(execSetSortable);
    DECLARE_FUNCTION(execGetShowRow);
    DECLARE_FUNCTION(execSetUseHorizontalScrollBar);
    DECLARE_FUNCTION(execSetColumnMinimumWidth);
    DECLARE_FUNCTION(execSetColumnString);
    DECLARE_FUNCTION(execSetAppearTooltipAtMouseX);
    DECLARE_FUNCTION(execSetSelectedSelTooltip);
    DECLARE_FUNCTION(execEnablePageBrowser);
    DECLARE_FUNCTION(execSetColumnWidth);
    DECLARE_FUNCTION(execSetResizable);
    DECLARE_FUNCTION(execSetHeaderTextOffset);
    DECLARE_FUNCTION(execSetHeaderAlignment);
    DECLARE_FUNCTION(execAdjustColumnWidth);
    DECLARE_FUNCTION(execInitListCtrl);
    DECLARE_FUNCTION(execGetRec);
    DECLARE_FUNCTION(execGetSelectedRec);
    DECLARE_FUNCTION(execModifyRecord);
    DECLARE_FUNCTION(execShowScrollBar);
    DECLARE_FUNCTION(execSetSelectedIndex);
    DECLARE_FUNCTION(execGetSelectedIndex);
    DECLARE_FUNCTION(execGetRecordCount);
    DECLARE_FUNCTION(execDeleteRecord);
    DECLARE_FUNCTION(execDeleteAllItem);
    DECLARE_FUNCTION(execInsertRecord);
    DECLARE_CLASS(UListCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UListCtrlHandle)
};


class NWINDOW_API UMinimapCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetShowRegionInfoByType);
    DECLARE_FUNCTION(execEraseRegionInfoByType);
    DECLARE_FUNCTION(execEraseRegionInfoCtrl);
    DECLARE_FUNCTION(execUpdateRegionInfoCtrl);
    DECLARE_FUNCTION(execAddRegionInfoCtrl);
    DECLARE_FUNCTION(execDisableDirIcon);
    DECLARE_FUNCTION(execSetDirIconDest);
    DECLARE_FUNCTION(execSetDrawTeleportPath);
    DECLARE_FUNCTION(execEraseQuestIcon);
    DECLARE_FUNCTION(execRegisterQuestIcon);
    DECLARE_FUNCTION(execGetPlayerContinent);
    DECLARE_FUNCTION(execGetContinent);
    DECLARE_FUNCTION(execSetContinent);
    DECLARE_FUNCTION(execEraseRegionInfo);
    DECLARE_FUNCTION(execEraseAllRegionInfo);
    DECLARE_FUNCTION(execUpdateRegionInfo);
    DECLARE_FUNCTION(execAddRegionInfo);
    DECLARE_FUNCTION(execDeleteAllCursedWeaponIcon);
    DECLARE_FUNCTION(execIsOverlapped);
    DECLARE_FUNCTION(execRequestReduceBtn);
    DECLARE_FUNCTION(execDrawGridIcon);
    DECLARE_FUNCTION(execSetSSQStatus);
    DECLARE_FUNCTION(execSetShowQuest);
    DECLARE_FUNCTION(execDeleteAllTarget);
    DECLARE_FUNCTION(execDeleteTarget);
    DECLARE_FUNCTION(execAddTarget);
    DECLARE_FUNCTION(execAdjustMapView);
    DECLARE_CLASS(UMinimapCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UMinimapCtrlHandle)
};


class NWINDOW_API UMultiEditBoxHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execGetTotalSizeOfText);
    DECLARE_FUNCTION(execSetMaxSizeOfText);
    DECLARE_FUNCTION(execSetString);
    DECLARE_FUNCTION(execGetString);
    DECLARE_CLASS(UMultiEditBoxHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UMultiEditBoxHandle)
};


class NWINDOW_API UNameCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetNameUsingItem);
    DECLARE_FUNCTION(execGetName);
    DECLARE_FUNCTION(execSetNameWithColor);
    DECLARE_FUNCTION(execSetName);
    DECLARE_CLASS(UNameCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UNameCtrlHandle)
};


class NWINDOW_API UProgressCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetBarTex);
    DECLARE_FUNCTION(execSetBackTex);
    DECLARE_FUNCTION(execStart);
    DECLARE_FUNCTION(execResume);
    DECLARE_FUNCTION(execStop);
    DECLARE_FUNCTION(execReset);
    DECLARE_FUNCTION(execSetPos);
    DECLARE_FUNCTION(execSetProgressTime);
    DECLARE_CLASS(UProgressCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UProgressCtrlHandle)
};


class NWINDOW_API UPropertyControllerHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execGetItemStringValue);
    DECLARE_FUNCTION(execGetItemIntegerValue);
    DECLARE_FUNCTION(execGetItemBooleanValue);
    DECLARE_FUNCTION(execSetItemStringValue);
    DECLARE_FUNCTION(execSetItemIntegerValue);
    DECLARE_FUNCTION(execSetItemBooleanValue);
    DECLARE_FUNCTION(execGetItemType);
    DECLARE_FUNCTION(execSetGroupVisible);
    DECLARE_FUNCTION(execSetGroupExpandState);
    DECLARE_FUNCTION(execAddGroup);
    DECLARE_FUNCTION(execDeleteGroup);
    DECLARE_FUNCTION(execGetGroupCheck);
    DECLARE_FUNCTION(execSetGroupCheck);
    DECLARE_FUNCTION(execGetGroupType);
    DECLARE_FUNCTION(execUpdatePropertyGroup);
    DECLARE_FUNCTION(execGetPropertyHeight);
    DECLARE_FUNCTION(execClearValue);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execSetProperty);
    DECLARE_CLASS(UPropertyControllerHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UPropertyControllerHandle)
};


class NWINDOW_API URadarMapCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSwitchSingleMeshMode);
    DECLARE_FUNCTION(execSetMapInvisible);
    DECLARE_FUNCTION(execSetEnableRotation);
    DECLARE_FUNCTION(execSetMagnification);
    DECLARE_FUNCTION(execRequestObjectAround);
    DECLARE_FUNCTION(execUpdateObject);
    DECLARE_FUNCTION(execDeleteObject);
    DECLARE_FUNCTION(execAddObject);
    DECLARE_CLASS(URadarMapCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(URadarMapCtrlHandle)
};


class NWINDOW_API URadioButtonHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execIsChecked);
    DECLARE_CLASS(URadioButtonHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(URadioButtonHandle)
};


class NWINDOW_API URichListCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execGetPointedRec);
    DECLARE_FUNCTION(execSetEnableInteractionPass);
    DECLARE_FUNCTION(execGetStartRow);
    DECLARE_FUNCTION(execDecreaseStartRow);
    DECLARE_FUNCTION(execIncreaseStartRow);
    DECLARE_FUNCTION(execAdjustShowRow);
    DECLARE_FUNCTION(execIsAscending);
    DECLARE_FUNCTION(execSetAscend);
    DECLARE_FUNCTION(execHideSortIcon);
    DECLARE_FUNCTION(execShowSortIcon);
    DECLARE_FUNCTION(execSetSortable);
    DECLARE_FUNCTION(execGetShowRow);
    DECLARE_FUNCTION(execSetEnableItemRecordDrag);
    DECLARE_FUNCTION(execSetStartRow);
    DECLARE_FUNCTION(execSetSelectable);
    DECLARE_FUNCTION(execSetUseStripeBackTexture);
    DECLARE_FUNCTION(execSetStatusBarTexture);
    DECLARE_FUNCTION(execSetUseHorizontalScrollBar);
    DECLARE_FUNCTION(execSetColumnMinimumWidth);
    DECLARE_FUNCTION(execSetColumnString);
    DECLARE_FUNCTION(execSetAppearTooltipAtMouseX);
    DECLARE_FUNCTION(execSetSelectedSelTooltip);
    DECLARE_FUNCTION(execSetContentsHeight);
    DECLARE_FUNCTION(execEnablePageBrowser);
    DECLARE_FUNCTION(execSetColumnWidth);
    DECLARE_FUNCTION(execSetResizable);
    DECLARE_FUNCTION(execSetHeaderTextOffset);
    DECLARE_FUNCTION(execSetHeaderAlignment);
    DECLARE_FUNCTION(execAdjustColumnWidth);
    DECLARE_FUNCTION(execInitListCtrl);
    DECLARE_FUNCTION(execGetRec);
    DECLARE_FUNCTION(execGetSelectedRec);
    DECLARE_FUNCTION(execModifyRecord);
    DECLARE_FUNCTION(execShowScrollBar);
    DECLARE_FUNCTION(execSetSelectedIndex);
    DECLARE_FUNCTION(execGetSelectedIndex);
    DECLARE_FUNCTION(execGetRecordCount);
    DECLARE_FUNCTION(execDeleteRecord);
    DECLARE_FUNCTION(execDeleteAllItem);
    DECLARE_FUNCTION(execInsertRecord);
    DECLARE_CLASS(URichListCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(URichListCtrlHandle)
};


class NWINDOW_API USceneCameraCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSaveCameraData);
    DECLARE_FUNCTION(execUpdateCameraData);
    DECLARE_CLASS(USceneCameraCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(USceneCameraCtrlHandle)
};


class NWINDOW_API USceneMusicCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSaveMusicData);
    DECLARE_FUNCTION(execUpdateMusicData);
    DECLARE_CLASS(USceneMusicCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(USceneMusicCtrlHandle)
};


class NWINDOW_API USceneNpcCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSaveNpcData);
    DECLARE_FUNCTION(execUpdateNpcData);
    DECLARE_CLASS(USceneNpcCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(USceneNpcCtrlHandle)
};


class NWINDOW_API UScenePcCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSavePcData);
    DECLARE_FUNCTION(execUpdatePcData);
    DECLARE_CLASS(UScenePcCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UScenePcCtrlHandle)
};


class NWINDOW_API USceneScreenCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSaveScreenData);
    DECLARE_FUNCTION(execUpdateScreenData);
    DECLARE_CLASS(USceneScreenCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(USceneScreenCtrlHandle)
};


class NWINDOW_API USliderCtrlHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execIsMouseScrolling);
    DECLARE_FUNCTION(execSetTotalTickCount);
    DECLARE_FUNCTION(execGetTotalTickCount);
    DECLARE_FUNCTION(execSetCurrentTick);
    DECLARE_FUNCTION(execGetCurrentTick);
    DECLARE_CLASS(USliderCtrlHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(USliderCtrlHandle)
};

enum StatusRoundSplitType
{
    SRST_Back               =0,
    SRST_Main               =1,
    SRST_Trailer            =2,
    SRST_Mask1              =3,
    SRST_Mask2              =4,
    SRST_Overlay            =5,
    SRST_MAX                =6,
};
enum StatusBarSplitType
{
    SBST_BackLeft           =0,
    SBST_BackCenter         =1,
    SBST_BackRight          =2,
    SBST_RegenLeft          =3,
    SBST_RegenCenter        =4,
    SBST_RegenRight         =5,
    SBST_ForeLeft           =6,
    SBST_ForeCenter         =7,
    SBST_ForeRight          =8,
    SBST_OverlayLeft        =9,
    SBST_OverlayCenter      =10,
    SBST_OverlayRight       =11,
    SBST_WarnLeft           =12,
    SBST_WarnCenter         =13,
    SBST_WarnRight          =14,
    SBST_ForeLeft01         =15,
    SBST_ForeCenter01       =16,
    SBST_ForeRight01        =17,
    SBST_ForeLeft02         =18,
    SBST_ForeCenter02       =19,
    SBST_ForeRight02        =20,
    SBST_Trailer            =21,
    SBST_MAX                =22,
};

class NWINDOW_API UStatusBaseHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetRegenInfo);
    DECLARE_FUNCTION(execSetPointExpPercentRate);
    DECLARE_FUNCTION(execSetPointPercent);
    DECLARE_FUNCTION(execSetPoint);
    DECLARE_FUNCTION(execClearPoint);
    DECLARE_FUNCTION(execGetPoint);
    DECLARE_FUNCTION(execSetGaugeColor);
    DECLARE_FUNCTION(execGetGaugeColor);
    DECLARE_FUNCTION(execSetGaugeTexture);
    DECLARE_FUNCTION(execGetGaugeTexture);
    DECLARE_FUNCTION(execGetSelfScript);
    DECLARE_CLASS(UStatusBaseHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UStatusBaseHandle)
};


class NWINDOW_API UStatusBarHandle : public UStatusBaseHandle
{
public:
    DECLARE_FUNCTION(execSetDrawPoint);
    DECLARE_FUNCTION(execSetDecimalPlace);
    DECLARE_CLASS(UStatusBarHandle,UStatusBaseHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UStatusBarHandle)
};


class NWINDOW_API UStatusRoundHandle : public UStatusBaseHandle
{
public:
    DECLARE_CLASS(UStatusRoundHandle,UStatusBaseHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UStatusRoundHandle)
};


class NWINDOW_API UStatusIconHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execSetIconSize);
    DECLARE_FUNCTION(execDelItem);
    DECLARE_FUNCTION(execSetItem);
    DECLARE_FUNCTION(execGetItem);
    DECLARE_FUNCTION(execGetColCount);
    DECLARE_FUNCTION(execGetRowCount);
    DECLARE_FUNCTION(execInsertCol);
    DECLARE_FUNCTION(execInsertRow);
    DECLARE_FUNCTION(execAddCol);
    DECLARE_FUNCTION(execAddRow);
    DECLARE_CLASS(UStatusIconHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UStatusIconHandle)
};


class NWINDOW_API UTabHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetButtonTooltip);
    DECLARE_FUNCTION(execSetTabControlTexture);
    DECLARE_FUNCTION(execRemoveTabControl);
    DECLARE_FUNCTION(execSetButtonDisableTexture);
    DECLARE_FUNCTION(execSetButtonBlink);
    DECLARE_FUNCTION(execSetButtonOffsetTex);
    DECLARE_FUNCTION(execSetButtonSizeTex);
    DECLARE_FUNCTION(execSetButtonName);
    DECLARE_FUNCTION(execMergeTab);
    DECLARE_FUNCTION(execSetDisable);
    DECLARE_FUNCTION(execGetTopIndex);
    DECLARE_FUNCTION(execSetTopOrder);
    DECLARE_FUNCTION(execInitTabCtrl);
    DECLARE_CLASS(UTabHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UTabHandle)
};


class NWINDOW_API UTextBoxHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetFormatString);
    DECLARE_FUNCTION(execGetSizeY);
    DECLARE_FUNCTION(execGetSizeX);
    DECLARE_FUNCTION(execSetFontIDByName);
    DECLARE_FUNCTION(execSetTextEllipsisWidth);
    DECLARE_FUNCTION(execSetTooltipString);
    DECLARE_FUNCTION(execSetInt);
    DECLARE_FUNCTION(execSetAlign);
    DECLARE_FUNCTION(execGetTextColor);
    DECLARE_FUNCTION(execSetTextColor);
    DECLARE_FUNCTION(execSetText);
    DECLARE_FUNCTION(execGetText);
    DECLARE_CLASS(UTextBoxHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UTextBoxHandle)
};


class NWINDOW_API UTreeHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execSetNodeItemTexture);
    DECLARE_FUNCTION(execSetNodeItemText);
    DECLARE_FUNCTION(execShowScrollBar);
    DECLARE_FUNCTION(execGetParentNode);
    DECLARE_FUNCTION(execGetChildNode);
    DECLARE_FUNCTION(execIsExpandedNode);
    DECLARE_FUNCTION(execIsNodeNameExist);
    DECLARE_FUNCTION(execDeleteNode);
    DECLARE_FUNCTION(execGetExpandedNode);
    DECLARE_FUNCTION(execSetExpandedNode);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execInsertNodeItem);
    DECLARE_FUNCTION(execInsertNode);
    DECLARE_CLASS(UTreeHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UTreeHandle)
};


class NWINDOW_API UWebBrowserHandle : public UWindowHandle
{
public:
    DECLARE_FUNCTION(execReloadCurPage);
    DECLARE_FUNCTION(execGoForwardPage);
    DECLARE_FUNCTION(execCanGoForwardPage);
    DECLARE_FUNCTION(execGoBackPage);
    DECLARE_FUNCTION(execCanGoBackPage);
    DECLARE_FUNCTION(execNavigate);
    DECLARE_FUNCTION(execSetCookie);
    DECLARE_FUNCTION(execGetCookie);
    DECLARE_FUNCTION(execExecuteJavaScript);
    DECLARE_FUNCTION(execGetUrl);
    DECLARE_FUNCTION(execGetURLEncodedAsUTF8);
    DECLARE_FUNCTION(execExecuteJavaScriptWithFloatResult);
    DECLARE_FUNCTION(execExecuteJavaScriptWithIntegerResult);
    DECLARE_FUNCTION(execExecuteJavaScriptWithStringResult);
    DECLARE_FUNCTION(execGoToHistoryOffset);
    DECLARE_FUNCTION(execNavigateAsGetJson);
    DECLARE_FUNCTION(execNavigateAsGet);
    DECLARE_FUNCTION(execNavigateAsPost);
    DECLARE_FUNCTION(execPushParam);
    DECLARE_FUNCTION(execBeginParam);
    DECLARE_FUNCTION(execWithoutWebSession);
    DECLARE_FUNCTION(execWithWebSession);
    DECLARE_CLASS(UWebBrowserHandle,UWindowHandle,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UWebBrowserHandle)
};


class NWINDOW_API UBookMarkAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestGetBookMarkPos);
    DECLARE_FUNCTION(execRequestChangeBookMarkSlot);
    DECLARE_FUNCTION(execRequestTelePortBookMark);
    DECLARE_FUNCTION(execRequestDeleteBookMarkSlot);
    DECLARE_FUNCTION(execRequestModifyBookMarkSlot);
    DECLARE_FUNCTION(execRequestSaveBookMarkSlot);
    DECLARE_FUNCTION(execRequestShowBookMark);
    DECLARE_FUNCTION(execRequestBookMarkSlotInfo);
    DECLARE_CLASS(UBookMarkAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UBookMarkAPI)
};


class NWINDOW_API UEnchantAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestUnlockedItemCancel);
    DECLARE_FUNCTION(execRequestUnlockedItem);
    DECLARE_FUNCTION(execRequestLockedItemCancel);
    DECLARE_FUNCTION(execRequestLockedItem);
    DECLARE_FUNCTION(execRequestExCancelEnchantItem);
    DECLARE_FUNCTION(execRequestExRemoveEnchantSupportItem);
    DECLARE_FUNCTION(execRequestExAddEnchantScrollItem);
    DECLARE_FUNCTION(execRequestExTryToPutEnchantSupportItem);
    DECLARE_FUNCTION(execRequestExTryToPutEnchantTargetItem);
    DECLARE_FUNCTION(execRequestRemoveAttribute);
    DECLARE_FUNCTION(execRequestEnchantItemAttribute);
    DECLARE_FUNCTION(execRequestEnchantItem);
    DECLARE_CLASS(UEnchantAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UEnchantAPI)
};


class NWINDOW_API UEnsoulAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestItemExtraction);
    DECLARE_FUNCTION(execRequestItemEnsoul);
    DECLARE_CLASS(UEnsoulAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UEnsoulAPI)
};


class NWINDOW_API UEventMatchAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestEventMatchObserverEnd);
    DECLARE_FUNCTION(execSetSelectedUser);
    DECLARE_FUNCTION(execGetUserData);
    DECLARE_FUNCTION(execGetPartyMemberCount);
    DECLARE_FUNCTION(execGetTeamName);
    DECLARE_FUNCTION(execGetScore);
    DECLARE_FUNCTION(execGetEventMatchData);
    DECLARE_CLASS(UEventMatchAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UEventMatchAPI)
};


class NWINDOW_API UFileListAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execShowFlash);
    DECLARE_FUNCTION(execGetDriveInfoList);
    DECLARE_FUNCTION(execGetFileInfoList);
    DECLARE_CLASS(UFileListAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UFileListAPI)
};

enum CollectionRegistFailReason
{
    CRFR_None               =0,
    CRFR_UnderNeedEnchant   =1,
    CRFR_HaveNotEnoughItem  =2,
    CRFR_OverNeedEnchant    =3,
    CRFR_MAX                =4,
};
enum ESoundType
{
    SOUND_Ambient           =0,
    SOUND_Effect            =1,
    SOUND_Music             =2,
    SOUND_SystemVoice       =3,
    SOUND_NPCVoice          =4,
    SOUND_NotifySound       =5,
    SOUND_MainVolume        =6,
    SOUND_MAX               =7,
};
enum ReleaseMode
{
    RM_DEV                  =0,
    RM_RC                   =1,
    RM_TEST                 =2,
    RM_LIVE                 =3,
    RM_MAX                  =4,
};
enum PetitionMethod
{
    PetitionMethod_Default  =0,
    PetitionMethod_New      =1,
    PetitionMethod_Web      =2,
    PetitionMethod_MAX      =3,
};
enum DialogEnterAction
{
    EEnterNone              =0,
    EEnterOK                =1,
    EEnterCancel            =2,
    EEnterDoNothing         =3,
};
enum DialogDefaultAction
{
    EDefaultNone            =0,
    EDefaultOK              =1,
    EDefaultCancel          =2,
};
enum EDialogModalType
{
    DialogModalType_Modal   =0,
    DialogModalType_Modalless=1,
    DialogModalType_MAX     =2,
};
enum EDialogType
{
    DialogType_OKCancel     =0,
    DialogType_OK           =1,
    DialogType_OKCancelInput=2,
    DialogType_OKInput      =3,
    DialogType_Warning      =4,
    DialogType_Notice       =5,
    DialogType_NumberPad    =6,
    DialogType_Progress     =7,
    DialogType_NumberPad2   =8,
    DialogType_NumberPadAdena=9,
    DialogType_MAX          =10,
};
enum PawnType
{
    PT_NONE                 =0,
    PT_NPC                  =1,
    PT_PC                   =2,
    PT_PET                  =3,
    PT_MAX                  =4,
};
enum EventNotificationCondition
{
    NotifyEvent_Always      =0,
    NotifyEvent_Visible     =1,
    NotifyEvent_MAX         =2,
};

struct UUIScript_eventOnModifyCurrentTickSliderCtrl_Parms
{
    FString strID;
    INT iCurrentTick;
};
struct UUIScript_eventOnScrollMove_Parms
{
    FString strID;
    INT Position;
};
struct UUIScript_eventOnCallUCFunction_Parms
{
    FString functionName;
    FString param;
};
struct UUIScript_eventOnFlashCtrlMsg_Parms
{
    class UFlashCtrlHandle* a_FlashCtrlHandle;
    FString a_Param;
};
struct UUIScript_eventOnHtmlMsgHideWindow_Parms
{
    class UHtmlHandle* a_HtmlHandle;
};
struct UUIScript_eventOnPropertyControllerResize_Parms
{
    class UPropertyControllerHandle* a_PropertyHandle;
    INT a_Height;
};
struct UUIScript_eventOnTextureAnimEnd_Parms
{
    class UAnimTextureHandle* a_AnimTextureHandle;
};
struct UUIScript_eventOnComboBoxItemSelected_Parms
{
    FString strID;
    INT Index;
};
struct UUIScript_eventOnProgressTimeUp_Parms
{
    FString strID;
};
struct UUIScript_eventOnSelectItemWithHandle_Parms
{
    class UItemWindowHandle* a_hItemWindow;
    INT a_Index;
};
struct UUIScript_eventOnDBClickItemWithHandle_Parms
{
    class UItemWindowHandle* a_hItemWindow;
    INT a_Index;
};
struct UUIScript_eventOnRClickItemWithHandle_Parms
{
    class UItemWindowHandle* a_hItemWindow;
    INT a_Index;
};
struct UUIScript_eventOnRDBClickItem_Parms
{
    FString strID;
    INT Index;
};
struct UUIScript_eventOnRClickItem_Parms
{
    FString strID;
    INT Index;
};
struct UUIScript_eventOnDBClickItem_Parms
{
    FString strID;
    INT Index;
};
struct UUIScript_eventOnClickItem_Parms
{
    FString strID;
    INT Index;
};
struct UUIScript_eventOnCilckCheckBoxWithHandle_Parms
{
    class UCheckBoxHandle* a_CheckBoxHandle;
};
struct UUIScript_eventOnClickCheckBox_Parms
{
    FString strID;
};
struct UUIScript_eventOnDBClickListBoxItem_Parms
{
    FString strID;
    INT SelectedIndex;
};
struct UUIScript_eventOnRButtonClickListBoxItem_Parms
{
    FString strID;
    INT SelectedIndex;
};
struct UUIScript_eventOnLButtonClickListBoxItem_Parms
{
    FString strID;
    INT SelectedIndex;
};
struct UUIScript_eventOnClickHeaderCtrl_Parms
{
    FString strID;
    INT Index;
};
struct UUIScript_eventOnClickRichListButton_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnRollOverListCtrlRecord_Parms
{
    FString strID;
    INT Index;
};
struct UUIScript_eventOnRClickListCtrlRecord_Parms
{
    FString strID;
};
struct UUIScript_eventOnDBClickListCtrlRecord_Parms
{
    FString strID;
};
struct UUIScript_eventOnClickListCtrlRecord_Parms
{
    FString strID;
};
struct UUIScript_eventOnChatMarkedEditBox_Parms
{
    FString strID;
};
struct UUIScript_eventOnChangeEditBox_Parms
{
    FString strID;
};
struct UUIScript_eventOnCompleteEditBox_Parms
{
    FString strID;
};
struct UUIScript_eventOnTabMerge_Parms
{
    FString sName;
};
struct UUIScript_eventOnTabSplit_Parms
{
    FString sName;
};
struct UUIScript_eventOnButtonTimer_Parms
{
    BITFIELD bExpired;
};
struct UUIScript_eventOnRClickButtonWithHandle_Parms
{
    class UButtonHandle* a_ButtonHandle;
};
struct UUIScript_eventOnRClickButton_Parms
{
    FString strID;
};
struct UUIScript_eventOnClickButtonWithHandle_Parms
{
    class UButtonHandle* a_ButtonHandle;
};
struct UUIScript_eventOnClickButton_Parms
{
    FString strID;
};
struct UUIScript_eventOnDropWnd_Parms
{
    class UWindowHandle* hTarget;
    class UWindowHandle* hDropWnd;
    INT X;
    INT Y;
};
struct UUIScript_eventOnDropItemWithHandle_Parms
{
    class UWindowHandle* hTarget;
    FItemInfo infItem;
    INT X;
    INT Y;
};
struct UUIScript_eventOnDropItemSource_Parms
{
    FString strTarget;
    FItemInfo infItem;
};
struct UUIScript_eventOnDragItemStartTiny_Parms
{
    FString strID;
    FItemInfo infItem;
};
struct UUIScript_eventOnDragItemEnd_Parms
{
    FString strID;
};
struct UUIScript_eventOnDragItemStart_Parms
{
    FString strID;
    FItemInfo infItem;
};
struct UUIScript_eventOnDropItem_Parms
{
    FString strID;
    FItemInfo infItem;
    INT X;
    INT Y;
};
struct UUIScript_eventOnMouseMove_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnMouseOut_Parms
{
    class UWindowHandle* a_WindowHandle;
};
struct UUIScript_eventOnMouseOver_Parms
{
    class UWindowHandle* a_WindowHandle;
};
struct UUIScript_eventOnMButtonUp_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnMButtonDown_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnRButtonDblClick_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnRButtonUp_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnRButtonDown_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnLButtonDblClick_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnLButtonUp_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnLButtonDown_Parms
{
    class UWindowHandle* a_WindowHandle;
    INT X;
    INT Y;
};
struct UUIScript_eventOnReceivedCloseUI_Parms
{
};
struct UUIScript_eventOnKeyUp_Parms
{
    class UWindowHandle* a_WindowHandle;
    BYTE Key;
};
struct UUIScript_eventOnKeyDown_Parms
{
    class UWindowHandle* a_WindowHandle;
    BYTE Key;
};
struct UUIScript_eventOnSetFocus_Parms
{
    class UWindowHandle* a_WindowHandle;
    BITFIELD bFocused;
};
struct UUIScript_eventOnRegisterEvent_Parms
{
};
struct UUIScript_eventOnDrawerHideFinished_Parms
{
};
struct UUIScript_eventOnDrawerShowFinished_Parms
{
};
struct UUIScript_eventOnDefaultPosition_Parms
{
};
struct UUIScript_eventOnSendPacketWhenHiding_Parms
{
};
struct UUIScript_eventOnExitState_Parms
{
    FName a_NextStateName;
};
struct UUIScript_eventOnEnterState_Parms
{
    FName a_PreStateName;
};
struct UUIScript_eventOnMinimize_Parms
{
};
struct UUIScript_eventOnTimer_Parms
{
    INT TimerID;
};
struct UUIScript_eventOnEventWithParamMap_Parms
{
    INT a_EventID;
    FParamMap a_ParamMap;
};
struct UUIScript_eventOnEvent_Parms
{
    INT a_EventID;
    FString a_Param;
};
struct UUIScript_eventOnHide_Parms
{
};
struct UUIScript_eventOnShow_Parms
{
};
struct UUIScript_eventOnTick_Parms
{
};
struct UUIScript_eventOnLoad_Parms
{
};
class NWINDOW_API UUIScript : public UUIEventManager
{
public:
    class UWindowHandle* m_hOwnerWnd;
    BITFIELD m_bCreated:1 GCC_PACK(4);
    BITFIELD m_bCreatedByXmlData:1;
    DECLARE_FUNCTION(execGetSkillAcquireList);
    DECLARE_FUNCTION(execGetSkillSubLevelList);
    DECLARE_FUNCTION(execGetEnchantExpItemListFromInven);
    DECLARE_FUNCTION(execGetNQuestNpcPortraitData);
    DECLARE_FUNCTION(execGetNQuestDialogData);
    DECLARE_FUNCTION(execGetNQuestData);
    DECLARE_FUNCTION(execGetClientCursorPos);
    DECLARE_FUNCTION(execRequestClanUnregisterCrestByPledgeID);
    DECLARE_FUNCTION(execRequestClanRegisterCrestPreset);
    DECLARE_FUNCTION(execGetPledgeCrestPresetData);
    DECLARE_FUNCTION(execGetItemExchangeMultisellData);
    DECLARE_FUNCTION(execIsPrivateStoreBypass);
    DECLARE_FUNCTION(execGetUniqueGachaCostInfo);
    DECLARE_FUNCTION(execGetUniqueGachaGameTypeInfo);
    DECLARE_FUNCTION(execGetUniqueGachaRewardItem);
    DECLARE_FUNCTION(execGetUniqueGachaShowItem);
    DECLARE_FUNCTION(execGetUniqueGachaVideo);
    DECLARE_FUNCTION(execSetUniqueGachaVideo);
    DECLARE_FUNCTION(execJapanPolicyCheck);
    DECLARE_FUNCTION(execOpenWebSite);
    DECLARE_FUNCTION(execGetRecoveryCouponData);
    DECLARE_FUNCTION(execGetPrisonDataList);
    DECLARE_FUNCTION(execGetPrisonData);
    DECLARE_FUNCTION(execGetSiegePointAlarms);
    DECLARE_FUNCTION(execConvertFloatToString);
    DECLARE_FUNCTION(execGetServerPrivateStoreSearchItemSubType);
    DECLARE_FUNCTION(execGetWorldExchangeData);
    DECLARE_FUNCTION(execGetBRWorldExchange);
    DECLARE_FUNCTION(execGetMissionLevelData);
    DECLARE_FUNCTION(execGetBalrogwarData);
    DECLARE_FUNCTION(execIsInTimeRestrictField);
    DECLARE_FUNCTION(execGetMagicLampAdvancedResultItemList);
    DECLARE_FUNCTION(execGetMagicLampNormalResultItemList);
    DECLARE_FUNCTION(execGetEventHtmlString);
    DECLARE_FUNCTION(execGetL2PassAdvanceInfo);
    DECLARE_FUNCTION(execGetL2PassPremiumPassCost);
    DECLARE_FUNCTION(execGetL2PassAdvanceFreeCount);
    DECLARE_FUNCTION(execGetL2PassLastItem);
    DECLARE_FUNCTION(execGetL2PassMaxCount);
    DECLARE_FUNCTION(execGetL2PassRewardStepMaxCount);
    DECLARE_FUNCTION(execGetL2PassHuntingMaxTime);
    DECLARE_FUNCTION(execGetL2PassRewardTotalList);
    DECLARE_FUNCTION(execGetL2PassReward);
    DECLARE_FUNCTION(execIsPlayerOnOlympiad);
    DECLARE_FUNCTION(execAddPledgeInfo);
    DECLARE_FUNCTION(execGetWorldCastleWarMapInfo);
    DECLARE_FUNCTION(execRequestDisassembleItemInfo);
    DECLARE_FUNCTION(execGetNickNameIconImage);
    DECLARE_FUNCTION(execGetNickNameItemData);
    DECLARE_FUNCTION(execGetServerMarkName);
    DECLARE_FUNCTION(execGetDethroneDistrictName);
    DECLARE_FUNCTION(execGetDethroneCategory);
    DECLARE_FUNCTION(execGetDethroneDailyMissionData);
    DECLARE_FUNCTION(execGetDethroneChangeNameCost);
    DECLARE_FUNCTION(execGetDethroneConnectCost);
    DECLARE_FUNCTION(execGetPurchaseLimitCraftData);
    DECLARE_FUNCTION(execGetSubjugationList);
    DECLARE_FUNCTION(execGetGeneralEffectName);
    DECLARE_FUNCTION(execGetCharacterAbilityData);
    DECLARE_FUNCTION(execGetCollectionOptionName);
    DECLARE_FUNCTION(execGetCompletePeriodCollection);
    DECLARE_FUNCTION(execGetCollectionOption);
    DECLARE_FUNCTION(execGetCollectionCount);
    DECLARE_FUNCTION(execGetCollectionInfo);
    DECLARE_FUNCTION(execIsCollectionRegistEnableItemWithReason);
    DECLARE_FUNCTION(execIsCollectionRegistEnableItem);
    DECLARE_FUNCTION(execGetCollectionIdByItemId);
    DECLARE_FUNCTION(execGetCollectionIdByItemName);
    DECLARE_FUNCTION(execGetCollectionMainData);
    DECLARE_FUNCTION(execGetCollectionData);
    DECLARE_FUNCTION(execGetSteadyBoxSlotInfo);
    DECLARE_FUNCTION(execGetSteadyBoxString);
    DECLARE_FUNCTION(execRequestRankingFestivalBonus);
    DECLARE_FUNCTION(execLoginWaitState);
    DECLARE_FUNCTION(execStartLoginState);
    DECLARE_FUNCTION(execGetPledgeLevelData);
    DECLARE_FUNCTION(execConvertWorldIDToStr);
    DECLARE_FUNCTION(execConvertWorldStrToID);
    DECLARE_FUNCTION(execRequestEnemyPledgeRegister);
    DECLARE_FUNCTION(execGetPledgeDonationData);
    DECLARE_FUNCTION(execGetMagicLampMaxCharge);
    DECLARE_FUNCTION(execGetMaxElixir);
    DECLARE_FUNCTION(execGetMableGameEventData);
    DECLARE_FUNCTION(execGetMableGameCellData);
    DECLARE_FUNCTION(execSetMPlayerClientVar);
    DECLARE_FUNCTION(execGetSharedPositionData);
    DECLARE_FUNCTION(execIsAssassinClass);
    DECLARE_FUNCTION(execIsOrcRiderClass);
    DECLARE_FUNCTION(execIsDeathFighterClass);
    DECLARE_FUNCTION(execIsDeathKnightClass);
    DECLARE_FUNCTION(execRequestMPlayerPush);
    DECLARE_FUNCTION(execUseContents);
    DECLARE_FUNCTION(execGetLevelUpItemMagicalDefenseBonus);
    DECLARE_FUNCTION(execGetLevelUpItemPhysicalDefenseBonus);
    DECLARE_FUNCTION(execGetLevelUpItemMagicalDamageBonus);
    DECLARE_FUNCTION(execGetLevelUpItemPhysicalDamageBonus);
    DECLARE_FUNCTION(execGetStatBonusResetData);
    DECLARE_FUNCTION(execGetStatBonusNameData);
    DECLARE_FUNCTION(execGetLetterCollectData);
    DECLARE_FUNCTION(execRequestAuthLoginForTCLS);
    DECLARE_FUNCTION(execIsTencentLoginSystem);
    DECLARE_FUNCTION(execIsFinalRelease);
    DECLARE_FUNCTION(execRequestMyRankingHistory);
    DECLARE_FUNCTION(execGetRankingGrade);
    DECLARE_FUNCTION(execGetRankingRewardSkillID);
    DECLARE_FUNCTION(execRequestRankingCharRankers);
    DECLARE_FUNCTION(execRequestRankingCharInfo);
    DECLARE_FUNCTION(execGetTimeRestrictFieldInfo);
    DECLARE_FUNCTION(execRequestEnterTimeRestrictField);
    DECLARE_FUNCTION(execRequestTimeRestrictFieldList);
    DECLARE_FUNCTION(execRequestGachaShopGachaItem);
    DECLARE_FUNCTION(execRequestGachaShopGachaGroup);
    DECLARE_FUNCTION(execRequestGachaShopInfo);
    DECLARE_FUNCTION(execGetGachaShopGroupDataAll);
    DECLARE_FUNCTION(execGetGachaShopGroupData);
    DECLARE_FUNCTION(execGetGachaShopData);
    DECLARE_FUNCTION(execGetPledgeShopProductData);
    DECLARE_FUNCTION(execGetLCoinShopBannerData);
    DECLARE_FUNCTION(execGetLCoinShopProductData);
    DECLARE_FUNCTION(execUpdateAutoplaySetting);
    DECLARE_FUNCTION(execResetCounterAttackList);
    DECLARE_FUNCTION(execSelectCounterAttackTarget);
    DECLARE_FUNCTION(execRequestPaybackGiveReward);
    DECLARE_FUNCTION(execRequestPaybackList);
    DECLARE_FUNCTION(execRequestMagicLampGameStart);
    DECLARE_FUNCTION(execRequestMagicLampGameInfo);
    DECLARE_FUNCTION(execRequestOpenWndWithoutNPC);
    DECLARE_FUNCTION(execRequestFestivalGame);
    DECLARE_FUNCTION(execRequestFestivalInfo);
    DECLARE_FUNCTION(execIsUseCostume);
    DECLARE_FUNCTION(execGetRewardCardTexName);
    DECLARE_FUNCTION(execGetSubTitle);
    DECLARE_FUNCTION(execRequestPurchaseLimitShopItemBuy);
    DECLARE_FUNCTION(execRequestPurchaseLimitShopItemList);
    DECLARE_FUNCTION(execRequestEnchantArtifact);
    DECLARE_FUNCTION(execShowQuestInfoWindow);
    DECLARE_FUNCTION(execRequestOlympiadRecord);
    DECLARE_FUNCTION(execFlashWindow);
    DECLARE_FUNCTION(execGetElementalSpiritExpData);
    DECLARE_FUNCTION(execRequestElementalSpiritInfo);
    DECLARE_FUNCTION(execGetPledgeMasteryName);
    DECLARE_FUNCTION(execRequestPledgeItemBuy);
    DECLARE_FUNCTION(execRequestPledgeItemActivate);
    DECLARE_FUNCTION(execRequestPledgeItemInfo);
    DECLARE_FUNCTION(execRequestPledgeItemList);
    DECLARE_FUNCTION(execRequestCreatePledge);
    DECLARE_FUNCTION(execRequestPledgeMissionReward);
    DECLARE_FUNCTION(execRequestPledgeMissionInfo);
    DECLARE_FUNCTION(execGetPledgeMissionData);
    DECLARE_FUNCTION(execGetTutorialBody);
    DECLARE_FUNCTION(execGetTutorialIndices);
    DECLARE_FUNCTION(execRequestSwapAgathionSlotItems);
    DECLARE_FUNCTION(execGetAgathionSubSkillList);
    DECLARE_FUNCTION(execGetAgathionMainSkillList);
    DECLARE_FUNCTION(execCardUpdownGameQuit);
    DECLARE_FUNCTION(execCardUpdownGameRetry);
    DECLARE_FUNCTION(execCardUpdownGameRewardRequest);
    DECLARE_FUNCTION(execCardUpdownGamePickNumber);
    DECLARE_FUNCTION(execRequestUserBanInfo);
    DECLARE_FUNCTION(execRequestCardReward);
    DECLARE_FUNCTION(execRequestEntireCardRewardList);
    DECLARE_FUNCTION(execRequestAccountAttendanceInfo);
    DECLARE_FUNCTION(execRequestAccountAttendanceReward);
    DECLARE_FUNCTION(execGetEventAlarmDataByIndex);
    DECLARE_FUNCTION(execGetEventAlarmDataCount);
    DECLARE_FUNCTION(execGetMinimapRegionIconData);
    DECLARE_FUNCTION(execRequestBlockListForAD);
    DECLARE_FUNCTION(execCancelWaitingQueueTicket);
    DECLARE_FUNCTION(execIsUsePledgeBonus);
    DECLARE_FUNCTION(execPledgeBonusRewardList);
    DECLARE_FUNCTION(execPledgeBonusReward);
    DECLARE_FUNCTION(execPledgeBonusOpen);
    DECLARE_FUNCTION(execCashShopCoinChargeForSteam);
    DECLARE_FUNCTION(execIsUseTokenLogin);
    DECLARE_FUNCTION(execIsUseSteam);
    DECLARE_FUNCTION(execIsUseAutoEquipSoulShot);
    DECLARE_FUNCTION(execGetAutoEquipShotList);
    DECLARE_FUNCTION(execSoulShotSlotClicked);
    DECLARE_FUNCTION(execSoulShotSlotSelected);
    DECLARE_FUNCTION(execappFractional);
    DECLARE_FUNCTION(execappCeil);
    DECLARE_FUNCTION(execappFloor);
    DECLARE_FUNCTION(execappRound);
    DECLARE_FUNCTION(execStringMatching);
    DECLARE_FUNCTION(execStringIntoArray);
    DECLARE_FUNCTION(execClipboardPaste);
    DECLARE_FUNCTION(execClipboardCopy);
    DECLARE_FUNCTION(execGetMonsterBookData);
    DECLARE_FUNCTION(execGetMonsterBookIDs);
    DECLARE_FUNCTION(execGetFactionData);
    DECLARE_FUNCTION(execGetUserFactionInfoList);
    DECLARE_FUNCTION(execRequestUserFactionInfo);
    DECLARE_FUNCTION(execRequestCastleWarSeasonReward);
    DECLARE_FUNCTION(execIsUseToDoList);
    DECLARE_FUNCTION(execRequestTodoListOneDayReward);
    DECLARE_FUNCTION(execRequestOneDayRewardPeriod);
    DECLARE_FUNCTION(execRequestOneDayRewardDesc);
    DECLARE_FUNCTION(execRequestOneDayRewardItemList);
    DECLARE_FUNCTION(execRequestOneDayRewardReceive);
    DECLARE_FUNCTION(execRequestTodoListHTML);
    DECLARE_FUNCTION(execRequestTodoListInzone);
    DECLARE_FUNCTION(execRequestTodoListRecommand);
    DECLARE_FUNCTION(execQTRequestGetCurRoomInfo);
    DECLARE_FUNCTION(execQTRequestEnterClanRoom);
    DECLARE_FUNCTION(execQTRequestBindClanRoom);
    DECLARE_FUNCTION(execQTRequestEnterPartyRoom);
    DECLARE_FUNCTION(execCrossEnterEventRoom);
    DECLARE_FUNCTION(execIsUsePrivateStore);
    DECLARE_FUNCTION(execRequestCaptchaAnswer);
    DECLARE_FUNCTION(execRequestRefreshCaptchaImage);
    DECLARE_FUNCTION(execGetCaptchaImageTex);
    DECLARE_FUNCTION(execIsAttendanceSystemEnable);
    DECLARE_FUNCTION(execRequestAttendanceWndOpen);
    DECLARE_FUNCTION(execRequestAttendanceCheck);
    DECLARE_FUNCTION(execRefreshRecipeOfferingRate);
    DECLARE_FUNCTION(execIsAdenServer);
    DECLARE_FUNCTION(execIsBloodyServer);
    DECLARE_FUNCTION(execGetServerType);
    DECLARE_FUNCTION(execGetAlchemySkillGradeType);
    DECLARE_FUNCTION(execRequestAlchemySkillList);
    DECLARE_FUNCTION(execIsActivateUSMBackground);
    DECLARE_FUNCTION(execGetLoginMapType);
    DECLARE_FUNCTION(execSwitchSingleMeshMode);
    DECLARE_FUNCTION(execProcessCommandInterPartyChatMessage);
    DECLARE_FUNCTION(execProcessCommandChatMessage);
    DECLARE_FUNCTION(execProcessPartyMatchChatMessage);
    DECLARE_FUNCTION(execProcessPetitionChatMessage);
    DECLARE_FUNCTION(execIsSameChatPrefix);
    DECLARE_FUNCTION(execGetChatPrefix);
    DECLARE_FUNCTION(execProcessChatMessage);
    DECLARE_FUNCTION(execSetChatMessage);
    DECLARE_FUNCTION(execChatNotificationFilter);
    DECLARE_FUNCTION(execGetChatSubColorByType);
    DECLARE_FUNCTION(execGetChatColorByType);
    DECLARE_FUNCTION(execEnableChatWndResizing);
    DECLARE_FUNCTION(execGetReleaseMode);
    DECLARE_FUNCTION(execIsPlayerOnWorldRaidServer);
    DECLARE_FUNCTION(execMeasureTimeEnd);
    DECLARE_FUNCTION(execMeasureTimeStart);
    DECLARE_FUNCTION(execMeasureTimeOff);
    DECLARE_FUNCTION(execMeasureTimeOn);
    DECLARE_FUNCTION(execAddTimeData);
    DECLARE_FUNCTION(execResponsePetitionAlarm);
    DECLARE_FUNCTION(execGetUIUserPremiumLevel);
    DECLARE_FUNCTION(execRequestEventCampaignHtml);
    DECLARE_FUNCTION(execRequestEventCampaignScoreInfo);
    DECLARE_FUNCTION(execRequestEventCampaignProgressInfo);
    DECLARE_FUNCTION(execGetEventContentInfo);
    DECLARE_FUNCTION(execIsActivedBRCampaignExist);
    DECLARE_FUNCTION(execConvertBRCashShopDayWeek);
    DECLARE_FUNCTION(execCallGFxFunction);
    DECLARE_FUNCTION(execSetAlwaysOnBack);
    DECLARE_FUNCTION(execAmILeader);
    DECLARE_FUNCTION(execIsActivedCampaignExist);
    DECLARE_FUNCTION(execIsActivedZoneQuestExist);
    DECLARE_FUNCTION(execRequestLeaveObservingCuriousHouse);
    DECLARE_FUNCTION(execRequestObservingCuriousHouse);
    DECLARE_FUNCTION(execRequestObservingListCuriousHouse);
    DECLARE_FUNCTION(execRequestCuriousHouseHtml);
    DECLARE_FUNCTION(execRequestLeaveCuriousHouse);
    DECLARE_FUNCTION(execRequestCancelCuriousHouse);
    DECLARE_FUNCTION(execRequestJoinCuriousHouse);
    DECLARE_FUNCTION(execToLower);
    DECLARE_FUNCTION(execToUpper);
    DECLARE_FUNCTION(execIsNative);
    DECLARE_FUNCTION(execRequestInzoneWaitingTime);
    DECLARE_FUNCTION(execHasStackableItemInInventory);
    DECLARE_FUNCTION(execHasStackableItemInWareHouse);
    DECLARE_FUNCTION(execSetClosingOnESC);
    DECLARE_FUNCTION(execRequestChangeAttributeCancel);
    DECLARE_FUNCTION(execRequestChangeAttributeItem);
    DECLARE_FUNCTION(execSelectChangeAttributeItem);
    DECLARE_FUNCTION(execSetEnableGodRay);
    DECLARE_FUNCTION(execSetTestGodRayOption);
    DECLARE_FUNCTION(execSetTestBeastLightMapIntensity);
    DECLARE_FUNCTION(execSetEnvTime);
    DECLARE_FUNCTION(execSetEnableLightMapIntensity);
    DECLARE_FUNCTION(execSetEnableGammaCorrection);
    DECLARE_FUNCTION(execSetEnableWindowDefaultGamma);
    DECLARE_FUNCTION(execSetEnableGammaSetting);
    DECLARE_FUNCTION(execSetEnableHsvTerrainLight);
    DECLARE_FUNCTION(execSetEnableHsvStaticMeshLight);
    DECLARE_FUNCTION(execSetEnableHsvActorLight);
    DECLARE_FUNCTION(execSetEnableSkyBspAmbient);
    DECLARE_FUNCTION(execSetEnableSkyBoxColor);
    DECLARE_FUNCTION(execSetEnableBspAmbient);
    DECLARE_FUNCTION(execSetEnableStaticMeshAmbient);
    DECLARE_FUNCTION(execSetEnableActorAmbient);
    DECLARE_FUNCTION(execSetEnableTerrainAmbient);
    DECLARE_FUNCTION(execSetTestGammaSetting);
    DECLARE_FUNCTION(execSetTestHsvTerrainLightColor);
    DECLARE_FUNCTION(execSetTestHsvStaticMeshLightColor);
    DECLARE_FUNCTION(execSetTestHsvActorLightColor);
    DECLARE_FUNCTION(execSetTestSkyBspAmbientColor);
    DECLARE_FUNCTION(execSetTestSkyBoxColor);
    DECLARE_FUNCTION(execSetTestBspAmbientColor);
    DECLARE_FUNCTION(execSetTestStaticMeshAmbientColor);
    DECLARE_FUNCTION(execSetTestActorAmbientColor);
    DECLARE_FUNCTION(execSetTestTerrainAmbientColor);
    DECLARE_FUNCTION(execEndCredit);
    DECLARE_FUNCTION(execStartCredit);
    DECLARE_FUNCTION(execGetChinaPkString);
    DECLARE_FUNCTION(execIsNewChinaLive);
    DECLARE_FUNCTION(execIsChinaClient);
    DECLARE_FUNCTION(execRequestCardKeyLoginCancel);
    DECLARE_FUNCTION(execRequestCardKeyLogin);
    DECLARE_FUNCTION(execRequestFlyMoveStart);
    DECLARE_FUNCTION(execFullScreenMovieEnd);
    DECLARE_FUNCTION(execFullScreenMovieStart);
    DECLARE_FUNCTION(execGetLastLoginID);
    DECLARE_FUNCTION(execSaveLastLoginID);
    DECLARE_FUNCTION(execAutoLogin);
    DECLARE_FUNCTION(execStopLogin);
    DECLARE_FUNCTION(execRefuseLogin);
    DECLARE_FUNCTION(execIsUseOTP);
    DECLARE_FUNCTION(execRequestSortedServerInfo);
    DECLARE_FUNCTION(execEulaAgree);
    DECLARE_FUNCTION(execRequestGoogleOtpLogin);
    DECLARE_FUNCTION(execRequestSecurityCardLogin);
    DECLARE_FUNCTION(execRequestLoginServer);
    DECLARE_FUNCTION(execRequestLogin);
    DECLARE_FUNCTION(execExpInt);
    DECLARE_FUNCTION(execExpFloat);
    DECLARE_FUNCTION(execGetMaxVitality);
    DECLARE_FUNCTION(execGetL2Path);
    DECLARE_FUNCTION(execGetDisplayWidth);
    DECLARE_FUNCTION(execGetDisplayHeight);
    DECLARE_FUNCTION(execOpenMovieCaptureDir);
    DECLARE_FUNCTION(execSetMovieCaptureLowQuality);
    DECLARE_FUNCTION(execSetMovieCaptureHighQuality);
    DECLARE_FUNCTION(execMovieCaptureToggle);
    DECLARE_FUNCTION(execSetMovieCaptureResolution);
    DECLARE_FUNCTION(execIsNowMovieCapturing);
    DECLARE_FUNCTION(execRequestAutoLogin);
    DECLARE_FUNCTION(execRequestTutorialMarkPressed);
    DECLARE_FUNCTION(execRequestTutorialQuestionMarkPressed);
    DECLARE_FUNCTION(execGetPawnLocFromServerID);
    DECLARE_FUNCTION(execGetPawnNameFromServerID);
    DECLARE_FUNCTION(execGetPawnType);
    DECLARE_FUNCTION(execGetSkillAvailability);
    DECLARE_FUNCTION(execRequestDynamicContentHtml);
    DECLARE_FUNCTION(execRequestDynamicQuestScoreInfo);
    DECLARE_FUNCTION(execRequestDynamicQuestProgressInfo);
    DECLARE_FUNCTION(execGetDynamicContentInfo);
    DECLARE_FUNCTION(execIsL2NetLoginState);
    DECLARE_FUNCTION(execRequestSurrenderPledgeWar);
    DECLARE_FUNCTION(execRequestPledgeWar);
    DECLARE_FUNCTION(execGetShortcutString);
    DECLARE_FUNCTION(execRequestCrystallizeEstimate);
    DECLARE_FUNCTION(execRequestCharacterNameCreatable);
    DECLARE_FUNCTION(execIsUseEMailAccount);
    DECLARE_FUNCTION(execIsUseSecondaryAuth);
    DECLARE_FUNCTION(execRequestSecondaryAuthModify);
    DECLARE_FUNCTION(execRequestSecondaryAuthVerify);
    DECLARE_FUNCTION(execRequestSecondaryAuthCreate);
    DECLARE_FUNCTION(execIsUseGoodsInvnentory);
    DECLARE_FUNCTION(execGetGoodsIconName);
    DECLARE_FUNCTION(execRequestUseGoodsInventoryItem);
    DECLARE_FUNCTION(execRequestGoodsInventoryItemDesc);
    DECLARE_FUNCTION(execRequestGoodsInventoryItemList);
    DECLARE_FUNCTION(execGetFormattedTimeStrMMHH);
    DECLARE_FUNCTION(execBR_GetDayType);
    DECLARE_FUNCTION(execBR_ConvertTimeToStr);
    DECLARE_FUNCTION(execBR_GetShowEventUI);
    DECLARE_FUNCTION(execIsUsingPrimeShop);
    DECLARE_FUNCTION(execShowCashChargeWebSite);
    DECLARE_FUNCTION(execRequestBR_MinigameInsertScore);
    DECLARE_FUNCTION(execRequestBR_MinigameLoadScores);
    DECLARE_FUNCTION(execIsBr_CashShopMainDisable);
    DECLARE_FUNCTION(execGetBr_CashShopCoinToMoneyValue);
    DECLARE_FUNCTION(execIsBr_CashShopCoinToMoney);
    DECLARE_FUNCTION(execIsBr_CashShopPresent);
    DECLARE_FUNCTION(execRequestBr_CashShopCateoryIndex);
    DECLARE_FUNCTION(execIsBr_CashShopCateory);
    DECLARE_FUNCTION(execRequestBR_PresentBuyProduct);
    DECLARE_FUNCTION(execRequestBR_DeleteBasketProductInfo);
    DECLARE_FUNCTION(execRequestBR_AddBasketProductInfo);
    DECLARE_FUNCTION(execRequestBR_RecentProductList);
    DECLARE_FUNCTION(execRequestBR_BuyProduct);
    DECLARE_FUNCTION(execRequestBR_ProductInfo);
    DECLARE_FUNCTION(execRequestBR_ProductList);
    DECLARE_FUNCTION(execRequestBR_GamePoint);
    DECLARE_FUNCTION(execRequestBR_CashShopNewICon);
    DECLARE_FUNCTION(execGetTexture);
    DECLARE_FUNCTION(execGetActivityUltimateSkillLevel);
    DECLARE_FUNCTION(execRequestNatureRenderBlendingRate);
    DECLARE_FUNCTION(execRequestNatureRenderDir);
    DECLARE_FUNCTION(execRequestNatureRenderTurbidity);
    DECLARE_FUNCTION(execRequestNatureRenderMie);
    DECLARE_FUNCTION(execRequestNatureRenderRayleigh);
    DECLARE_FUNCTION(execRequestNatureRenderIntensity);
    DECLARE_FUNCTION(execRequestNatureRenderTime);
    DECLARE_FUNCTION(execSetUseHDRRenderEffect);
    DECLARE_FUNCTION(execSetHDRRenderVal);
    DECLARE_FUNCTION(execRequestFinishNPCZoomCamera);
    DECLARE_FUNCTION(execToggleReplayRec);
    DECLARE_FUNCTION(execSetMotionBlurAlpha);
    DECLARE_FUNCTION(execSetMotionBlurUse);
    DECLARE_FUNCTION(execRequestMenteeWaitingList);
    DECLARE_FUNCTION(execRequestPartyMatchWaitList);
    DECLARE_FUNCTION(execRequestSetPostEffect);
    DECLARE_FUNCTION(execRequestSetColorGradingVal);
    DECLARE_FUNCTION(execRequestSetColorGradingEffect);
    DECLARE_FUNCTION(execRequestSetRGBVal);
    DECLARE_FUNCTION(execRequestSetRGBConversionEffect);
    DECLARE_FUNCTION(execRequestSetHSVVal);
    DECLARE_FUNCTION(execRequestSetHSVConversionEffect);
    DECLARE_FUNCTION(execRequestSetYCbCrVal);
    DECLARE_FUNCTION(execRequestSetYCbCrConversionEffect);
    DECLARE_FUNCTION(execOpenL2Home);
    DECLARE_FUNCTION(execOpenGivenURL);
    DECLARE_FUNCTION(execGetRadioButtonHandle);
    DECLARE_FUNCTION(execRequestAddExpandQuestAlarm);
    DECLARE_FUNCTION(execRequestAskMemberShip);
    DECLARE_FUNCTION(execRequestPartyLootingModifyAgreement);
    DECLARE_FUNCTION(execRequestPartyLootingModify);
    DECLARE_FUNCTION(execGetMyComputerPath);
    DECLARE_FUNCTION(execGetDesktopPath);
    DECLARE_FUNCTION(execGetMydocumentPath);
    DECLARE_FUNCTION(execAnswerCoupleAction);
    DECLARE_FUNCTION(execGetDrivesInfoList);
    DECLARE_FUNCTION(execGetFilesInfoList);
    DECLARE_FUNCTION(execRequestMoveToMerchant);
    DECLARE_FUNCTION(execRefreshPrivateMarketInfo);
    DECLARE_FUNCTION(execClearAllPrivateMarketInfo);
    DECLARE_FUNCTION(execRequestChangeDiamondMesh);
    DECLARE_FUNCTION(execRequestChangeParticleEmitter);
    DECLARE_FUNCTION(execRequestSetSnowMeshScale);
    DECLARE_FUNCTION(execRequestSetSnowSpeed);
    DECLARE_FUNCTION(execRequestSetSnowEmitterParticleNum);
    DECLARE_FUNCTION(execRequestSetSnowWeight);
    DECLARE_FUNCTION(execRequestDeleteSnowEffect);
    DECLARE_FUNCTION(execRequestCreateSnowEffect);
    DECLARE_FUNCTION(execRequestSetRainMeshScale);
    DECLARE_FUNCTION(execRequestSetRainSpeed);
    DECLARE_FUNCTION(execRequestSetRainEmitterParticleNum);
    DECLARE_FUNCTION(execRequestSetRainWeight);
    DECLARE_FUNCTION(execRequestSetWeatherEffect);
    DECLARE_FUNCTION(execRequestDeleteRainEffect);
    DECLARE_FUNCTION(execRequestCreateRainEffect);
    DECLARE_FUNCTION(execRequestBR_EventRankerList);
    DECLARE_FUNCTION(execGetGameStateName);
    DECLARE_FUNCTION(execRequestBuySellUIClose);
    DECLARE_FUNCTION(execRequestShowPetitionAsMethod);
    DECLARE_FUNCTION(execGetPetitionMethod);
    DECLARE_FUNCTION(execGetUseNewPetitionBool);
    DECLARE_FUNCTION(execRequestShowStepThree);
    DECLARE_FUNCTION(execRequestShowStepTwo);
    DECLARE_FUNCTION(execRequestShowNewUserPetition);
    DECLARE_FUNCTION(execRequestPostItemList);
    DECLARE_FUNCTION(execRequestCancelSentPost);
    DECLARE_FUNCTION(execRequestRequestSentPost);
    DECLARE_FUNCTION(execRequestDeleteSentPost);
    DECLARE_FUNCTION(execRequestRequestSentPostList);
    DECLARE_FUNCTION(execRequestRejectPost);
    DECLARE_FUNCTION(execRequestReceivePost);
    DECLARE_FUNCTION(execRequestRequestReceivedPost);
    DECLARE_FUNCTION(execRequestDeleteReceivedPost);
    DECLARE_FUNCTION(execRequestRequestReceivedPostList);
    DECLARE_FUNCTION(execRequestSendPost);
    DECLARE_FUNCTION(execRequestRefundItem);
    DECLARE_FUNCTION(execGetDominionFlagIconTex);
    DECLARE_FUNCTION(execRequestDominionInfo);
    DECLARE_FUNCTION(execRequestJoinDominionWar);
    DECLARE_FUNCTION(execRequestStopShowCrataeCubeRank);
    DECLARE_FUNCTION(execRequestStartShowCrataeCubeRank);
    DECLARE_FUNCTION(execRequestWithDrawPremiumItem);
    DECLARE_FUNCTION(execGetNicknameColorWithIndex);
    DECLARE_FUNCTION(execGetMaxNicknameColorIndexCnt);
    DECLARE_FUNCTION(execRequestChangeNicknameNColor);
    DECLARE_FUNCTION(execRequestPVPMatchRecord);
    DECLARE_FUNCTION(execRequestFortressMapInfo);
    DECLARE_FUNCTION(execRequestFortressSiegeInfo);
    DECLARE_FUNCTION(execRequestAllAgitInfo);
    DECLARE_FUNCTION(execRequestAllFortressInfo);
    DECLARE_FUNCTION(execRequestAllCastleInfo);
    DECLARE_FUNCTION(execCharacterCreateGetClassType);
    DECLARE_FUNCTION(execCheckValidName);
    DECLARE_FUNCTION(execCheckNameLength);
    DECLARE_FUNCTION(execDefaultCharacterStop);
    DECLARE_FUNCTION(execDefaultCharacterTurn);
    DECLARE_FUNCTION(execDefaultCharacterMouseTurn);
    DECLARE_FUNCTION(execSetCharacterColor);
    DECLARE_FUNCTION(execSetCharacterStyle);
    DECLARE_FUNCTION(execShowDefaultCharacter);
    DECLARE_FUNCTION(execGetClassInitialStatEx);
    DECLARE_FUNCTION(execGetClassInitialStat);
    DECLARE_FUNCTION(execGetClassDescription);
    DECLARE_FUNCTION(execExecLobbyNextEvent);
    DECLARE_FUNCTION(execExecLobbyEvent);
    DECLARE_FUNCTION(execClearDefaultCharacterInfo);
    DECLARE_FUNCTION(execSetDefaultCharacter);
    DECLARE_FUNCTION(execRequestPrevState);
    DECLARE_FUNCTION(execRequestCreateCharacter);
    DECLARE_FUNCTION(execIsActivateCharacter);
    DECLARE_FUNCTION(execGetTimeToLastLogoutCharacter);
    DECLARE_FUNCTION(execGetTimeToDisciplineCharacter);
    DECLARE_FUNCTION(execGetTimeToDeleteCharacter);
    DECLARE_FUNCTION(execSetSelectedCharacter);
    DECLARE_FUNCTION(execIsDisciplineCharacter);
    DECLARE_FUNCTION(execIsScheduledToDeleteCharacter);
    DECLARE_FUNCTION(execResetCharacterPosition);
    DECLARE_FUNCTION(execRequestDeleteCharacter);
    DECLARE_FUNCTION(execRequestRestoreCharacter);
    DECLARE_FUNCTION(execGetSelectedCharacterInfo);
    DECLARE_FUNCTION(execRequestCharacterSelect);
    DECLARE_FUNCTION(execStartGame);
    DECLARE_FUNCTION(execGotoServerList);
    DECLARE_FUNCTION(execGotoLogin);
    DECLARE_FUNCTION(execCreateNewCharacter);
    DECLARE_FUNCTION(execShowEnableTrackerBox);
    DECLARE_FUNCTION(execExecuteAlign);
    DECLARE_FUNCTION(execDeleteAttachedWindow);
    DECLARE_FUNCTION(execClearTracker);
    DECLARE_FUNCTION(execGetTrackerAttachedWindow);
    DECLARE_FUNCTION(execGetTrackerAttachedWindowList);
    DECLARE_FUNCTION(execShowExampleAnimation);
    DECLARE_FUNCTION(execShowVirtualWindowBackground);
    DECLARE_FUNCTION(execGetXMLControlIndex);
    DECLARE_FUNCTION(execGetXMLControlString);
    DECLARE_FUNCTION(execGetInterfaceDir);
    DECLARE_FUNCTION(execInitCreditState);
    DECLARE_FUNCTION(execShowMessageInLogin);
    DECLARE_FUNCTION(execGetQuestLocation);
    DECLARE_FUNCTION(execGetManorNameInManorList);
    DECLARE_FUNCTION(execGetManorIDInManorList);
    DECLARE_FUNCTION(execGetManorCount);
    DECLARE_FUNCTION(execRequestProcureCropList);
    DECLARE_FUNCTION(execGetWebBrowserHandle);
    DECLARE_FUNCTION(execGetSceneMusicCtrlHandle);
    DECLARE_FUNCTION(execGetSceneScreenCtrlHandle);
    DECLARE_FUNCTION(execGetScenePcCtrlHandle);
    DECLARE_FUNCTION(execGetSceneNpcCtrlHandle);
    DECLARE_FUNCTION(execGetSceneCameraCtrlHandle);
    DECLARE_FUNCTION(execGetCharacterViewportWindowHandle);
    DECLARE_FUNCTION(execGetEffectViewportWndHandle);
    DECLARE_FUNCTION(execGetWindowHandle);
    DECLARE_FUNCTION(execGetTreeHandle);
    DECLARE_FUNCTION(execGetTextureHandle);
    DECLARE_FUNCTION(execGetTextListBoxHandle);
    DECLARE_FUNCTION(execGetTextBoxHandle);
    DECLARE_FUNCTION(execGetTabHandle);
    DECLARE_FUNCTION(execGetStatusIconHandle);
    DECLARE_FUNCTION(execGetStatusRoundHandle);
    DECLARE_FUNCTION(execGetStatusBarHandle);
    DECLARE_FUNCTION(execGetSliderCtrlHandle);
    DECLARE_FUNCTION(execGetRadarMapCtrlHandle);
    DECLARE_FUNCTION(execGetPropertyControllerHandle);
    DECLARE_FUNCTION(execGetProgressCtrlHandle);
    DECLARE_FUNCTION(execGetNameCtrlHandle);
    DECLARE_FUNCTION(execGetMinimapCtrlHandle);
    DECLARE_FUNCTION(execGetRichListCtrlHandle);
    DECLARE_FUNCTION(execGetListCtrlHandle);
    DECLARE_FUNCTION(execGetListBoxHandle);
    DECLARE_FUNCTION(execGetItemWindowHandle);
    DECLARE_FUNCTION(execGetHtmlHandle);
    DECLARE_FUNCTION(execGetMultiEditBoxHandle);
    DECLARE_FUNCTION(execGetEditBoxHandle);
    DECLARE_FUNCTION(execGetDrawPanelHandle);
    DECLARE_FUNCTION(execGetComboBoxHandle);
    DECLARE_FUNCTION(execGetCheckBoxHandle);
    DECLARE_FUNCTION(execGetChatWindowHandle);
    DECLARE_FUNCTION(execGetButtonHandle);
    DECLARE_FUNCTION(execGetBarHandle);
    DECLARE_FUNCTION(execGetAnimTextureHandle);
    DECLARE_FUNCTION(execFindHandle);
    DECLARE_FUNCTION(execGetHandle);
    DECLARE_FUNCTION(execRequestObserverModeEnd);
    DECLARE_FUNCTION(execRequestExEnchantSkill);
    DECLARE_FUNCTION(execRequestExEnchantSkillInfoDetail);
    DECLARE_FUNCTION(execRequestExEnchantSkillInfo);
    DECLARE_FUNCTION(execRequestAcquireSkillSubClan);
    DECLARE_FUNCTION(execRequestAcquireSkill);
    DECLARE_FUNCTION(execRequestAcquireSkillInfo);
    DECLARE_FUNCTION(execBeginBenchMark);
    DECLARE_FUNCTION(execBeginPlay);
    DECLARE_FUNCTION(execEraseReplayFile);
    DECLARE_FUNCTION(execBeginReplay);
    DECLARE_FUNCTION(execGetDirList);
    DECLARE_FUNCTION(execGetFileList);
    DECLARE_FUNCTION(execGetSystemDir);
    DECLARE_FUNCTION(execGetCharacterSelectionActor);
    DECLARE_FUNCTION(execGetPlayerPosition);
    DECLARE_FUNCTION(execRequestHennaUnEquip);
    DECLARE_FUNCTION(execRequestHennaUnEquipList);
    DECLARE_FUNCTION(execRequestHennaUnEquipInfo);
    DECLARE_FUNCTION(execRequestHennaEquip);
    DECLARE_FUNCTION(execRequestHennaItemList);
    DECLARE_FUNCTION(execRequestHennaItemInfo);
    DECLARE_FUNCTION(execGetZoneNameWithLocation);
    DECLARE_FUNCTION(execGetInZoneNameWithZoneID);
    DECLARE_FUNCTION(execGetCurrentZoneID);
    DECLARE_FUNCTION(execGetCurrentZoneName);
    DECLARE_FUNCTION(execRequestOpenMinimap);
    DECLARE_FUNCTION(execStopSound);
    DECLARE_FUNCTION(execPlaySoundUntilEnd);
    DECLARE_FUNCTION(execPlaySound);
    DECLARE_FUNCTION(execRequestChangeToAwakenedClass);
    DECLARE_FUNCTION(execRequestCallToChangeClass);
    DECLARE_FUNCTION(execRequestShowVisionMovie);
    DECLARE_FUNCTION(execSetItemTextLink);
    DECLARE_FUNCTION(execReturnShowXMLDetailTooltip);
    DECLARE_FUNCTION(execGetItemTextSectionInfos);
    DECLARE_FUNCTION(execGetItemKeepSelectInfo);
    DECLARE_FUNCTION(execReturnTooltipInfo);
    DECLARE_FUNCTION(execGetVolumeScale);
    DECLARE_FUNCTION(execTutorialVoiceOn);
    DECLARE_FUNCTION(execTutorialVoiceOff);
    DECLARE_FUNCTION(execGetMusicVolume);
    DECLARE_FUNCTION(execSetSystemVoiceVolume);
    DECLARE_FUNCTION(execSetNpcVoiceVolume);
    DECLARE_FUNCTION(execSetMusicVolume);
    DECLARE_FUNCTION(execSetAmbientVolume);
    DECLARE_FUNCTION(execSetEffectVolume);
    DECLARE_FUNCTION(execSetSoundVolume);
    DECLARE_FUNCTION(execGetConstantFloat);
    DECLARE_FUNCTION(execGetConstantBool);
    DECLARE_FUNCTION(execGetConstantString);
    DECLARE_FUNCTION(execGetConstantInt);
    DECLARE_FUNCTION(execSaveINI);
    DECLARE_FUNCTION(execRemoveINI);
    DECLARE_FUNCTION(execSetINIString);
    DECLARE_FUNCTION(execSetINIFloat);
    DECLARE_FUNCTION(execSetINIInt);
    DECLARE_FUNCTION(execSetINIBool);
    DECLARE_FUNCTION(execGetINIString);
    DECLARE_FUNCTION(execGetINIFloat);
    DECLARE_FUNCTION(execGetINIInt);
    DECLARE_FUNCTION(execGetINIBool);
    DECLARE_FUNCTION(execRefreshINI);
    DECLARE_FUNCTION(execRequestSaveInventoryOrder);
    DECLARE_FUNCTION(execGetRaceTicketString);
    DECLARE_FUNCTION(execGetLottoString);
    DECLARE_FUNCTION(execIsSigilArmor);
    DECLARE_FUNCTION(execIsMagicalArmor);
    DECLARE_FUNCTION(execGetSpiritShotPower);
    DECLARE_FUNCTION(execGetSoulShotPower);
    DECLARE_FUNCTION(execGetAttackSpeedString);
    DECLARE_FUNCTION(execGetWeaponTypeString);
    DECLARE_FUNCTION(execGetSlotTypeString);
    DECLARE_FUNCTION(execGetInventoryItemCount);
    DECLARE_FUNCTION(execSendWindowsInfo);
    DECLARE_FUNCTION(execApplyOptionToDamageText);
    DECLARE_FUNCTION(execGetChatFilterBool);
    DECLARE_FUNCTION(execSetChatFilterBool);
    DECLARE_FUNCTION(execGetOptionString);
    DECLARE_FUNCTION(execGetOptionFloat);
    DECLARE_FUNCTION(execGetOptionInt);
    DECLARE_FUNCTION(execGetOptionBool);
    DECLARE_FUNCTION(execSetOptionString);
    DECLARE_FUNCTION(execSetOptionFloat);
    DECLARE_FUNCTION(execSetOptionInt);
    DECLARE_FUNCTION(execSetOptionBool);
    DECLARE_FUNCTION(execStopMacro);
    DECLARE_FUNCTION(execIsStackableItem);
    DECLARE_FUNCTION(execUseSkill);
    DECLARE_FUNCTION(execDoAction);
    DECLARE_FUNCTION(execExecuteCommandFromAction);
    DECLARE_FUNCTION(execExecuteCommand);
    DECLARE_FUNCTION(execGetLocalizedL2TextPathNameUC);
    DECLARE_FUNCTION(execChangeLanguage);
    DECLARE_FUNCTION(execCanUseSystemDPIScaling);
    DECLARE_FUNCTION(execSetOutline);
    DECLARE_FUNCTION(execSetFixedDefaultCamera);
    DECLARE_FUNCTION(execSetIgnoreFriendInviting);
    DECLARE_FUNCTION(execSetIgnorePartyInviting);
    DECLARE_FUNCTION(execSetRenderCharacterCount);
    DECLARE_FUNCTION(execSetShaderWaterEffect);
    DECLARE_FUNCTION(execSetDepthBufferShadow);
    DECLARE_FUNCTION(execSetYebisGlow);
    DECLARE_FUNCTION(execSetYebisDOF);
    DECLARE_FUNCTION(execSetDOF);
    DECLARE_FUNCTION(execSetL2Shader);
    DECLARE_FUNCTION(execSetWeatherEffect);
    DECLARE_FUNCTION(execSetHDR);
    DECLARE_FUNCTION(execSetYebisAntialiasing);
    DECLARE_FUNCTION(execSetAntialiasing);
    DECLARE_FUNCTION(execSetReflectionEffect);
    DECLARE_FUNCTION(execSetPawnClippingRange);
    DECLARE_FUNCTION(execSetTerrainClippingRange);
    DECLARE_FUNCTION(execSetBackgroundEffect);
    DECLARE_FUNCTION(execSetShadow);
    DECLARE_FUNCTION(execSetEffectDetail);
    DECLARE_FUNCTION(execSetMotionDetail);
    DECLARE_FUNCTION(execSetModelingDetail);
    DECLARE_FUNCTION(execSetTextureDetail);
    DECLARE_FUNCTION(execSetKeyCrypt);
    DECLARE_FUNCTION(execSetDefaultPosition);
    DECLARE_FUNCTION(execGetShaderVersion);
    DECLARE_FUNCTION(execGetResolutionIndex);
    DECLARE_FUNCTION(execGetMultiSample);
    DECLARE_FUNCTION(execSetResolution);
    DECLARE_FUNCTION(execGetRefreshRateList);
    DECLARE_FUNCTION(execGetResolutionList);
    DECLARE_FUNCTION(execGetLanguageCustom);
    DECLARE_FUNCTION(execGetLanguage);
    DECLARE_FUNCTION(execIsEnableKeyCrypt);
    DECLARE_FUNCTION(execIsCheckKeyCrypt);
    DECLARE_FUNCTION(execIsUseKeyCrypt);
    DECLARE_FUNCTION(execIsEnableEngSelection);
    DECLARE_FUNCTION(execCanUseHDR);
    DECLARE_FUNCTION(execCanUseJoystick);
    DECLARE_FUNCTION(execCanUseAudio);
    DECLARE_FUNCTION(execGetServerNo);
    DECLARE_FUNCTION(execGetServerAgeLimit);
    DECLARE_FUNCTION(execExecQuit);
    DECLARE_FUNCTION(execExecRestart);
    DECLARE_FUNCTION(execEndSystemMessageParam);
    DECLARE_FUNCTION(execAddSystemMessageParam);
    DECLARE_FUNCTION(execAddSystemMessageString);
    DECLARE_FUNCTION(execAddSystemMessage);
    DECLARE_FUNCTION(execGetPrivateShopMessage);
    DECLARE_FUNCTION(execSetPrivateShopMessage);
    DECLARE_FUNCTION(execGetMaxLevel);
    DECLARE_FUNCTION(execGetCurrentResolution);
    DECLARE_FUNCTION(execGetPcCafeItemIconPackageName);
    DECLARE_FUNCTION(execGetClickLocation);
    DECLARE_FUNCTION(execCheckItemLimit);
    DECLARE_FUNCTION(execIsTriggerSkill);
    DECLARE_FUNCTION(execIsIconHide);
    DECLARE_FUNCTION(execIsSongDance);
    DECLARE_FUNCTION(execGetIsMagic);
    DECLARE_FUNCTION(execGetDebuffType);
    DECLARE_FUNCTION(execGetRoutingString);
    DECLARE_FUNCTION(execGetUserRankString);
    DECLARE_FUNCTION(execRequestBypassToServer);
    DECLARE_FUNCTION(execGetAllianceCrestTexFromAllianceCrestID);
    DECLARE_FUNCTION(execGetPledgeCrestTexFromPledgeCrestID);
    DECLARE_FUNCTION(execGetCurrentIMELang);
    DECLARE_FUNCTION(execPlayConsoleSound);
    DECLARE_FUNCTION(execConvertTimeToString);
    DECLARE_FUNCTION(execCeilingNum);
    DECLARE_FUNCTION(execConvertNumToTextNoAdena);
    DECLARE_FUNCTION(execConvertNumToText);
    DECLARE_FUNCTION(execMakeCostString);
    DECLARE_FUNCTION(execMakeCostStringINT64);
    DECLARE_FUNCTION(execGetItemGradeTextureName);
    DECLARE_FUNCTION(execGetItemGradeString);
    DECLARE_FUNCTION(execMakeFullItemName);
    DECLARE_FUNCTION(execNextStringWithWidth);
    DECLARE_FUNCTION(execDivideStringWithWidth);
    DECLARE_FUNCTION(execGetTextSize);
    DECLARE_FUNCTION(execGetTextSizeDefault);
    DECLARE_FUNCTION(execMakeFullSystemMsg);
    DECLARE_FUNCTION(execGetScript);
    DECLARE_FUNCTION(execGetNpcString);
    DECLARE_FUNCTION(execGetSystemMessageWithParamNumber);
    DECLARE_FUNCTION(execGetSystemMsgInfo);
    DECLARE_FUNCTION(execGetSystemMessage);
    DECLARE_FUNCTION(execGetSystemString);
    DECLARE_FUNCTION(execIsKeyDown);
    DECLARE_FUNCTION(execDebug);
    DECLARE_FUNCTION(execConvertTimetoStr);
    DECLARE_FUNCTION(execGetTimeStructGMT);
    DECLARE_FUNCTION(execGetTimeStruct);
    DECLARE_FUNCTION(execGetAppMilliSeconds);
    DECLARE_FUNCTION(execGetAppSeconds);
    DECLARE_FUNCTION(execGetTimeString);
    DECLARE_FUNCTION(execMakeTimeStr);
    DECLARE_FUNCTION(execMakeToppingBuffTimeStr);
    DECLARE_FUNCTION(execMakeBuffTimeStr);
    DECLARE_FUNCTION(execGetPartyMemberSummonedInfo);
    DECLARE_FUNCTION(execGetPartyMemberPetInfo);
    DECLARE_FUNCTION(execGetPartyMemberInfo);
    DECLARE_FUNCTION(execGetTeleportFlagCount);
    DECLARE_FUNCTION(execGetTeleportBookMarkCount);
    DECLARE_FUNCTION(execGetAdenaStr);
    DECLARE_FUNCTION(execGetAdena);
    DECLARE_FUNCTION(execGetClanNameValue);
    DECLARE_FUNCTION(execGetClanName);
    DECLARE_FUNCTION(execGetArtifactIndex);
    DECLARE_FUNCTION(execIsPlayerStand);
    DECLARE_FUNCTION(execIsBuilderPC);
    DECLARE_FUNCTION(execGetClassStep);
    DECLARE_FUNCTION(execGetAgathionIndex);
    DECLARE_FUNCTION(execGetJewelIndex);
    DECLARE_FUNCTION(execGetDecoIndex);
    DECLARE_FUNCTION(execGetAccessoryItemID);
    DECLARE_FUNCTION(execGetSkillInfo_WRF);
    DECLARE_FUNCTION(execGetSkillInfo);
    DECLARE_FUNCTION(execGetSummonPoint);
    DECLARE_FUNCTION(execGetSummonInfo);
    DECLARE_FUNCTION(execGetPetInfo);
    DECLARE_FUNCTION(execGetUserInfo);
    DECLARE_FUNCTION(execGetTargetInfo);
    DECLARE_FUNCTION(execGetPlayerInfo);
    DECLARE_FUNCTION(execGetPlayerRealName);
    DECLARE_FUNCTION(execGetClassTransferDegree);
    DECLARE_FUNCTION(execGetClassRoleNameByRole);
    DECLARE_FUNCTION(execGetClassRoleName);
    DECLARE_FUNCTION(execGetClassRoleType);
    DECLARE_FUNCTION(execGetClassLevel);
    DECLARE_FUNCTION(execGetClassIndex);
    DECLARE_FUNCTION(execGetClassType);
    DECLARE_FUNCTION(execRequestInviteMpcc);
    DECLARE_FUNCTION(execRequestInviteParty);
    DECLARE_FUNCTION(execRequestInvitePartyByTargetID);
    DECLARE_FUNCTION(execHasClanEmblem);
    DECLARE_FUNCTION(execHasClanCrest);
    DECLARE_FUNCTION(execGetCastleLocationName);
    DECLARE_FUNCTION(execGetCastleRegionID);
    DECLARE_FUNCTION(execGetCastleName);
    DECLARE_FUNCTION(execRequestPCCafeCouponUse);
    DECLARE_FUNCTION(execRequestClanMemberAuth);
    DECLARE_FUNCTION(execRequestEditClanAuth);
    DECLARE_FUNCTION(execRequestClanAuth);
    DECLARE_FUNCTION(execRequestClanWarList);
    DECLARE_FUNCTION(execRequestClanChangeNickName);
    DECLARE_FUNCTION(execRequestAllianceRegisterCrestByFilePath);
    DECLARE_FUNCTION(execRequestClanUnregisterEmblem);
    DECLARE_FUNCTION(execRequestClanRegisterEmblem);
    DECLARE_FUNCTION(execRequestClanRegisterEmblemByFilePath);
    DECLARE_FUNCTION(execRequestClanUnregisterCrest);
    DECLARE_FUNCTION(execRequestClanRegisterCrest);
    DECLARE_FUNCTION(execRequestClanRegisterCrestByFilePath);
    DECLARE_FUNCTION(execRequestClanReorganizeMember);
    DECLARE_FUNCTION(execRequestClanWithdrawWarWithClanName);
    DECLARE_FUNCTION(execRequestClanWithdrawWar);
    DECLARE_FUNCTION(execRequestClanDeclareWarWithClanName);
    DECLARE_FUNCTION(execRequestClanDeclareWarWithUserID);
    DECLARE_FUNCTION(execRequestClanDeclareWar);
    DECLARE_FUNCTION(execRequestClanAskJoinByName);
    DECLARE_FUNCTION(execRequestClanAskJoin);
    DECLARE_FUNCTION(execRequestClanExpelMember);
    DECLARE_FUNCTION(execRequestClanLeave);
    DECLARE_FUNCTION(execRequestClanDeletePupil);
    DECLARE_FUNCTION(execRequestClanAssignPupil);
    DECLARE_FUNCTION(execRequestClanChangeGrade);
    DECLARE_FUNCTION(execRequestClanGradeList);
    DECLARE_FUNCTION(execRequestClanMemberInfo);
    DECLARE_FUNCTION(execGetPartyMemberLocationWithID);
    DECLARE_FUNCTION(execGetPartyMemberLocation);
    DECLARE_FUNCTION(execGetPartyMemberCount);
    DECLARE_FUNCTION(execSendPrivateShopList);
    DECLARE_FUNCTION(execRequestQuitPrivateShop);
    DECLARE_FUNCTION(execRequestDispel);
    DECLARE_FUNCTION(execRequestDuelSurrender);
    DECLARE_FUNCTION(execRequestDuelAnswerStart);
    DECLARE_FUNCTION(execRequestDuelStart);
    DECLARE_FUNCTION(execRequestItemList);
    DECLARE_FUNCTION(execRequestCrystallizeItemCancel);
    DECLARE_FUNCTION(execRequestCrystallizeItem);
    DECLARE_FUNCTION(execRequestUnequipItem);
    DECLARE_FUNCTION(execRequestDropItem);
    DECLARE_FUNCTION(execRequestDestroyItem);
    DECLARE_FUNCTION(execRequestUseItem);
    DECLARE_FUNCTION(execBR_RequestRestartPoint);
    DECLARE_FUNCTION(execRequestRestartPoint);
    DECLARE_FUNCTION(execRequestMultiSellChoose);
    DECLARE_FUNCTION(execRequestBBSBoard);
    DECLARE_FUNCTION(execRequestPreviewItem);
    DECLARE_FUNCTION(execRequestPackageSend);
    DECLARE_FUNCTION(execRequestPackageSendableItemList);
    DECLARE_FUNCTION(execRequestChangePetName);
    DECLARE_FUNCTION(execRequestWarehouseWithdraw);
    DECLARE_FUNCTION(execRequestWarehouseDeposit);
    DECLARE_FUNCTION(execRequestReTargetUser);
    DECLARE_FUNCTION(execRequestTargetUser);
    DECLARE_FUNCTION(execRequestAssist);
    DECLARE_FUNCTION(execRequestAction);
    DECLARE_FUNCTION(execRequestAttack);
    DECLARE_FUNCTION(execRequestSetCrop);
    DECLARE_FUNCTION(execRequestSetSeed);
    DECLARE_FUNCTION(execRequestBuySeed);
    DECLARE_FUNCTION(execNotifyFriendRejectState);
    DECLARE_FUNCTION(execRequestBuyItem);
    DECLARE_FUNCTION(execRequestSellItem);
    DECLARE_FUNCTION(execAnswerTradeRequest);
    DECLARE_FUNCTION(execRequestAddTradeItem);
    DECLARE_FUNCTION(execRequestStartTrade);
    DECLARE_FUNCTION(execRequestTradeDone);
    DECLARE_FUNCTION(execRequestRaidRecord);
    DECLARE_FUNCTION(execRequestSkillList);
    DECLARE_FUNCTION(execRequestTargetCancel);
    DECLARE_FUNCTION(execRequestSelfTarget);
    DECLARE_FUNCTION(execRequestAuthCardKeyLogin);
    DECLARE_FUNCTION(execRequestExit);
    DECLARE_FUNCTION(execIsFullScreen);
    DECLARE_FUNCTION(execIsPKMode);
    void eventOnModifyCurrentTickSliderCtrl(const FString& strID, INT iCurrentTick)
    {
        UUIScript_eventOnModifyCurrentTickSliderCtrl_Parms Parms;
        Parms.strID=strID;
        Parms.iCurrentTick=iCurrentTick;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnModifyCurrentTickSliderCtrl),&Parms);
    }
    void eventOnScrollMove(const FString& strID, INT Position)
    {
        UUIScript_eventOnScrollMove_Parms Parms;
        Parms.strID=strID;
        Parms.Position=Position;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnScrollMove),&Parms);
    }
    void eventOnCallUCFunction(const FString& functionName, const FString& param)
    {
        UUIScript_eventOnCallUCFunction_Parms Parms;
        Parms.functionName=functionName;
        Parms.param=param;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnCallUCFunction),&Parms);
    }
    void eventOnFlashCtrlMsg(class UFlashCtrlHandle* a_FlashCtrlHandle, const FString& a_Param)
    {
        UUIScript_eventOnFlashCtrlMsg_Parms Parms;
        Parms.a_FlashCtrlHandle=a_FlashCtrlHandle;
        Parms.a_Param=a_Param;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnFlashCtrlMsg),&Parms);
    }
    void eventOnHtmlMsgHideWindow(class UHtmlHandle* a_HtmlHandle)
    {
        UUIScript_eventOnHtmlMsgHideWindow_Parms Parms;
        Parms.a_HtmlHandle=a_HtmlHandle;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnHtmlMsgHideWindow),&Parms);
    }
    void eventOnPropertyControllerResize(class UPropertyControllerHandle* a_PropertyHandle, INT a_Height)
    {
        UUIScript_eventOnPropertyControllerResize_Parms Parms;
        Parms.a_PropertyHandle=a_PropertyHandle;
        Parms.a_Height=a_Height;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnPropertyControllerResize),&Parms);
    }
    void eventOnTextureAnimEnd(class UAnimTextureHandle* a_AnimTextureHandle)
    {
        UUIScript_eventOnTextureAnimEnd_Parms Parms;
        Parms.a_AnimTextureHandle=a_AnimTextureHandle;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnTextureAnimEnd),&Parms);
    }
    void eventOnComboBoxItemSelected(const FString& strID, INT Index)
    {
        UUIScript_eventOnComboBoxItemSelected_Parms Parms;
        Parms.strID=strID;
        Parms.Index=Index;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnComboBoxItemSelected),&Parms);
    }
    void eventOnProgressTimeUp(const FString& strID)
    {
        UUIScript_eventOnProgressTimeUp_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnProgressTimeUp),&Parms);
    }
    void eventOnSelectItemWithHandle(class UItemWindowHandle* a_hItemWindow, INT a_Index)
    {
        UUIScript_eventOnSelectItemWithHandle_Parms Parms;
        Parms.a_hItemWindow=a_hItemWindow;
        Parms.a_Index=a_Index;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnSelectItemWithHandle),&Parms);
    }
    void eventOnDBClickItemWithHandle(class UItemWindowHandle* a_hItemWindow, INT a_Index)
    {
        UUIScript_eventOnDBClickItemWithHandle_Parms Parms;
        Parms.a_hItemWindow=a_hItemWindow;
        Parms.a_Index=a_Index;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDBClickItemWithHandle),&Parms);
    }
    void eventOnRClickItemWithHandle(class UItemWindowHandle* a_hItemWindow, INT a_Index)
    {
        UUIScript_eventOnRClickItemWithHandle_Parms Parms;
        Parms.a_hItemWindow=a_hItemWindow;
        Parms.a_Index=a_Index;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRClickItemWithHandle),&Parms);
    }
    void eventOnRDBClickItem(const FString& strID, INT Index)
    {
        UUIScript_eventOnRDBClickItem_Parms Parms;
        Parms.strID=strID;
        Parms.Index=Index;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRDBClickItem),&Parms);
    }
    void eventOnRClickItem(const FString& strID, INT Index)
    {
        UUIScript_eventOnRClickItem_Parms Parms;
        Parms.strID=strID;
        Parms.Index=Index;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRClickItem),&Parms);
    }
    void eventOnDBClickItem(const FString& strID, INT Index)
    {
        UUIScript_eventOnDBClickItem_Parms Parms;
        Parms.strID=strID;
        Parms.Index=Index;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDBClickItem),&Parms);
    }
    void eventOnClickItem(const FString& strID, INT Index)
    {
        UUIScript_eventOnClickItem_Parms Parms;
        Parms.strID=strID;
        Parms.Index=Index;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnClickItem),&Parms);
    }
    void eventOnCilckCheckBoxWithHandle(class UCheckBoxHandle* a_CheckBoxHandle)
    {
        UUIScript_eventOnCilckCheckBoxWithHandle_Parms Parms;
        Parms.a_CheckBoxHandle=a_CheckBoxHandle;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnCilckCheckBoxWithHandle),&Parms);
    }
    void eventOnClickCheckBox(const FString& strID)
    {
        UUIScript_eventOnClickCheckBox_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnClickCheckBox),&Parms);
    }
    void eventOnDBClickListBoxItem(const FString& strID, INT SelectedIndex)
    {
        UUIScript_eventOnDBClickListBoxItem_Parms Parms;
        Parms.strID=strID;
        Parms.SelectedIndex=SelectedIndex;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDBClickListBoxItem),&Parms);
    }
    void eventOnRButtonClickListBoxItem(const FString& strID, INT SelectedIndex)
    {
        UUIScript_eventOnRButtonClickListBoxItem_Parms Parms;
        Parms.strID=strID;
        Parms.SelectedIndex=SelectedIndex;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRButtonClickListBoxItem),&Parms);
    }
    void eventOnLButtonClickListBoxItem(const FString& strID, INT SelectedIndex)
    {
        UUIScript_eventOnLButtonClickListBoxItem_Parms Parms;
        Parms.strID=strID;
        Parms.SelectedIndex=SelectedIndex;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnLButtonClickListBoxItem),&Parms);
    }
    void eventOnClickHeaderCtrl(const FString& strID, INT Index)
    {
        UUIScript_eventOnClickHeaderCtrl_Parms Parms;
        Parms.strID=strID;
        Parms.Index=Index;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnClickHeaderCtrl),&Parms);
    }
    void eventOnClickRichListButton(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnClickRichListButton_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnClickRichListButton),&Parms);
    }
    void eventOnRollOverListCtrlRecord(const FString& strID, INT Index)
    {
        UUIScript_eventOnRollOverListCtrlRecord_Parms Parms;
        Parms.strID=strID;
        Parms.Index=Index;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRollOverListCtrlRecord),&Parms);
    }
    void eventOnRClickListCtrlRecord(const FString& strID)
    {
        UUIScript_eventOnRClickListCtrlRecord_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRClickListCtrlRecord),&Parms);
    }
    void eventOnDBClickListCtrlRecord(const FString& strID)
    {
        UUIScript_eventOnDBClickListCtrlRecord_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDBClickListCtrlRecord),&Parms);
    }
    void eventOnClickListCtrlRecord(const FString& strID)
    {
        UUIScript_eventOnClickListCtrlRecord_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnClickListCtrlRecord),&Parms);
    }
    void eventOnChatMarkedEditBox(const FString& strID)
    {
        UUIScript_eventOnChatMarkedEditBox_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnChatMarkedEditBox),&Parms);
    }
    void eventOnChangeEditBox(const FString& strID)
    {
        UUIScript_eventOnChangeEditBox_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnChangeEditBox),&Parms);
    }
    void eventOnCompleteEditBox(const FString& strID)
    {
        UUIScript_eventOnCompleteEditBox_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnCompleteEditBox),&Parms);
    }
    void eventOnTabMerge(const FString& sName)
    {
        UUIScript_eventOnTabMerge_Parms Parms;
        Parms.sName=sName;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnTabMerge),&Parms);
    }
    void eventOnTabSplit(const FString& sName)
    {
        UUIScript_eventOnTabSplit_Parms Parms;
        Parms.sName=sName;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnTabSplit),&Parms);
    }
    void eventOnButtonTimer(BITFIELD bExpired)
    {
        UUIScript_eventOnButtonTimer_Parms Parms;
        Parms.bExpired=bExpired;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnButtonTimer),&Parms);
    }
    void eventOnRClickButtonWithHandle(class UButtonHandle* a_ButtonHandle)
    {
        UUIScript_eventOnRClickButtonWithHandle_Parms Parms;
        Parms.a_ButtonHandle=a_ButtonHandle;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRClickButtonWithHandle),&Parms);
    }
    void eventOnRClickButton(const FString& strID)
    {
        UUIScript_eventOnRClickButton_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRClickButton),&Parms);
    }
    void eventOnClickButtonWithHandle(class UButtonHandle* a_ButtonHandle)
    {
        UUIScript_eventOnClickButtonWithHandle_Parms Parms;
        Parms.a_ButtonHandle=a_ButtonHandle;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnClickButtonWithHandle),&Parms);
    }
    void eventOnClickButton(const FString& strID)
    {
        UUIScript_eventOnClickButton_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnClickButton),&Parms);
    }
    void eventOnDropWnd(class UWindowHandle* hTarget, class UWindowHandle* hDropWnd, INT X, INT Y)
    {
        UUIScript_eventOnDropWnd_Parms Parms;
        Parms.hTarget=hTarget;
        Parms.hDropWnd=hDropWnd;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDropWnd),&Parms);
    }
    void eventOnDropItemWithHandle(class UWindowHandle* hTarget, FItemInfo infItem, INT X, INT Y)
    {
        UUIScript_eventOnDropItemWithHandle_Parms Parms;
        Parms.hTarget=hTarget;
        Parms.infItem=infItem;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDropItemWithHandle),&Parms);
    }
    void eventOnDropItemSource(const FString& strTarget, FItemInfo infItem)
    {
        UUIScript_eventOnDropItemSource_Parms Parms;
        Parms.strTarget=strTarget;
        Parms.infItem=infItem;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDropItemSource),&Parms);
    }
    void eventOnDragItemStartTiny(const FString& strID, FItemInfo infItem)
    {
        UUIScript_eventOnDragItemStartTiny_Parms Parms;
        Parms.strID=strID;
        Parms.infItem=infItem;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDragItemStartTiny),&Parms);
    }
    void eventOnDragItemEnd(const FString& strID)
    {
        UUIScript_eventOnDragItemEnd_Parms Parms;
        Parms.strID=strID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDragItemEnd),&Parms);
    }
    void eventOnDragItemStart(const FString& strID, FItemInfo infItem)
    {
        UUIScript_eventOnDragItemStart_Parms Parms;
        Parms.strID=strID;
        Parms.infItem=infItem;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDragItemStart),&Parms);
    }
    void eventOnDropItem(const FString& strID, FItemInfo infItem, INT X, INT Y)
    {
        UUIScript_eventOnDropItem_Parms Parms;
        Parms.strID=strID;
        Parms.infItem=infItem;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDropItem),&Parms);
    }
    void eventOnMouseMove(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnMouseMove_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnMouseMove),&Parms);
    }
    void eventOnMouseOut(class UWindowHandle* a_WindowHandle)
    {
        UUIScript_eventOnMouseOut_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnMouseOut),&Parms);
    }
    void eventOnMouseOver(class UWindowHandle* a_WindowHandle)
    {
        UUIScript_eventOnMouseOver_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnMouseOver),&Parms);
    }
    void eventOnMButtonUp(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnMButtonUp_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnMButtonUp),&Parms);
    }
    void eventOnMButtonDown(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnMButtonDown_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnMButtonDown),&Parms);
    }
    void eventOnRButtonDblClick(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnRButtonDblClick_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRButtonDblClick),&Parms);
    }
    void eventOnRButtonUp(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnRButtonUp_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRButtonUp),&Parms);
    }
    void eventOnRButtonDown(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnRButtonDown_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRButtonDown),&Parms);
    }
    void eventOnLButtonDblClick(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnLButtonDblClick_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnLButtonDblClick),&Parms);
    }
    void eventOnLButtonUp(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnLButtonUp_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnLButtonUp),&Parms);
    }
    void eventOnLButtonDown(class UWindowHandle* a_WindowHandle, INT X, INT Y)
    {
        UUIScript_eventOnLButtonDown_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.X=X;
        Parms.Y=Y;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnLButtonDown),&Parms);
    }
    void eventOnReceivedCloseUI()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnReceivedCloseUI),NULL);
    }
    void eventOnKeyUp(class UWindowHandle* a_WindowHandle, BYTE Key)
    {
        UUIScript_eventOnKeyUp_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.Key=Key;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnKeyUp),&Parms);
    }
    void eventOnKeyDown(class UWindowHandle* a_WindowHandle, BYTE Key)
    {
        UUIScript_eventOnKeyDown_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.Key=Key;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnKeyDown),&Parms);
    }
    void eventOnSetFocus(class UWindowHandle* a_WindowHandle, BITFIELD bFocused)
    {
        UUIScript_eventOnSetFocus_Parms Parms;
        Parms.a_WindowHandle=a_WindowHandle;
        Parms.bFocused=bFocused;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnSetFocus),&Parms);
    }
    void eventOnRegisterEvent()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnRegisterEvent),NULL);
    }
    void eventOnDrawerHideFinished()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDrawerHideFinished),NULL);
    }
    void eventOnDrawerShowFinished()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDrawerShowFinished),NULL);
    }
    void eventOnDefaultPosition()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnDefaultPosition),NULL);
    }
    void eventOnSendPacketWhenHiding()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnSendPacketWhenHiding),NULL);
    }
    void eventOnExitState(FName a_NextStateName)
    {
        UUIScript_eventOnExitState_Parms Parms;
        Parms.a_NextStateName=a_NextStateName;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnExitState),&Parms);
    }
    void eventOnEnterState(FName a_PreStateName)
    {
        UUIScript_eventOnEnterState_Parms Parms;
        Parms.a_PreStateName=a_PreStateName;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnEnterState),&Parms);
    }
    void eventOnMinimize()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnMinimize),NULL);
    }
    void eventOnTimer(INT TimerID)
    {
        UUIScript_eventOnTimer_Parms Parms;
        Parms.TimerID=TimerID;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnTimer),&Parms);
    }
    void eventOnEventWithParamMap(INT a_EventID, FParamMap a_ParamMap)
    {
        UUIScript_eventOnEventWithParamMap_Parms Parms;
        Parms.a_EventID=a_EventID;
        Parms.a_ParamMap=a_ParamMap;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnEventWithParamMap),&Parms);
    }
    void eventOnEvent(INT a_EventID, const FString& a_Param)
    {
        UUIScript_eventOnEvent_Parms Parms;
        Parms.a_EventID=a_EventID;
        Parms.a_Param=a_Param;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnEvent),&Parms);
    }
    void eventOnHide()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnHide),NULL);
    }
    void eventOnShow()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnShow),NULL);
    }
    void eventOnTick()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnTick),NULL);
    }
    void eventOnLoad()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnLoad),NULL);
    }
    DECLARE_CLASS(UUIScript,UUIEventManager,0,NWindow)
	#include "UIScript.h"
};

enum EDelegateHandlerType
{
    EDHandler_Default       =0,
    EDHandler_OlympiadArenaList=1,
    EDHandler_UseSkill      =2,
    EDHandler_Container     =3,
    EDHandler_DamageText    =4,
    EDHandler_Statistic     =5,
    EDHandler_NotifyUSMEnd  =6,
    EDHandler_ClanUnionAction=7,
    EDHandler_EventKalieWnd =8,
    EDHandler_Option        =9,
    EDHandler_ShortcutAPI   =10,
    EDHandler_InputAPI      =11,
    EDHandler_BeautyshopWnd =12,
    EDHandler_ChatWnd       =13,
    EDHandler_PledgeRecruit =14,
    EDHandler_EventChristmasWnd=15,
    EDHandler_EventCardWnd  =16,
    EDHandler_AdenaDistributionWnd=17,
    EDHandler_GFxDebug      =18,
    EDHandler_LuckyGameWnd  =19,
    EDHandler_TrainingRoomWnd=20,
    EDHandler_Event10thAnniversary=21,
    EDHandler_RadarMap      =22,
    EDHandler_AlchemyAPI    =23,
    EDHandler_FishWnd       =24,
    EDHandler_VipSystem     =25,
    EDHandler_Arena         =26,
    EDHandler_FactionWnd    =27,
    EDHandler_Minimap       =28,
    EDHandler_UpgradeSystemWnd=29,
    EDHandler_GameData      =30,
    EDHandler_OBS           =31,
    EDHandler_CardUpdownGame=32,
    EDHandler_PledgeWnd     =33,
    EDHandler_ElementalSpirit=34,
    EDHandler_Costume       =35,
    EDHandler_ClassChange   =36,
    EDHandler_TeleportList  =37,
    EDHandler_MAX           =38,
};
enum EExternalFunctionType
{
    EFunc_None              =0,
    EFunc_SysStringTranslator=1,
    EFunc_MAX               =2,
};
enum EFlashImageLoaderType
{
    EImgLoader_None         =0,
    EImgLoader_Pledge       =1,
    EImgLoader_PackageTexture=2,
    EImgLoader_MAX          =3,
};

struct UGFxUIScript_eventOnFocus_Parms
{
    BITFIELD bFocused;
    BITFIELD bTransparencyMode;
};
struct UGFxUIScript_eventOnFlashLoaded_Parms
{
};
struct UGFxUIScript_eventOnCallUCLogic_Parms
{
    INT logicID;
    FString param;
};
class NWINDOW_API UGFxUIScript : public UUIScript
{
public:
    class UObject* m_pTargetWnd;
    DECLARE_FUNCTION(execSetCanBeShownDuringScene);
    DECLARE_FUNCTION(execKillTimer);
    DECLARE_FUNCTION(execSetTimer);
    DECLARE_FUNCTION(execGetUserPremiumLevel);
    DECLARE_FUNCTION(execSetEulaText);
    DECLARE_FUNCTION(execSendCommandToServer);
    DECLARE_FUNCTION(execForceToMoveMousePos);
    DECLARE_FUNCTION(execSetHUD);
    DECLARE_FUNCTION(execSetClosingOnESC);
    DECLARE_FUNCTION(execGetAnchorPointFromWindow);
    DECLARE_FUNCTION(execSetGFxFromSavedInfo);
    DECLARE_FUNCTION(execIsSavedInfo);
    DECLARE_FUNCTION(execUnsetRotateCursor);
    DECLARE_FUNCTION(execSetRotateCursor);
    DECLARE_FUNCTION(execSetAlwaysOnTop);
    DECLARE_FUNCTION(execSetModal);
    DECLARE_FUNCTION(execSetNextFocus);
    DECLARE_FUNCTION(execSetHasGFxTextField);
    DECLARE_FUNCTION(execHasTextField);
    DECLARE_FUNCTION(execSetStateChangeNotification);
    DECLARE_FUNCTION(execSetContainer);
    DECLARE_FUNCTION(execSetRestartableFlash);
    DECLARE_FUNCTION(execSetSaveWnd);
    DECLARE_FUNCTION(execApplyFixedPositionRate);
    DECLARE_FUNCTION(execSetFixedPositionRate);
    DECLARE_FUNCTION(execSetAnchor);
    DECLARE_FUNCTION(execFlashMoviePlayEnd);
    DECLARE_FUNCTION(execFlashMoviePlayStart);
    DECLARE_FUNCTION(execSetHavingFocus);
    DECLARE_FUNCTION(execIgnoreUIEvent);
    DECLARE_FUNCTION(execMakeRenderToTexture);
    DECLARE_FUNCTION(execBringToFront);
    DECLARE_FUNCTION(execBringToFrontOf);
    DECLARE_FUNCTION(execSetFocus);
    DECLARE_FUNCTION(execIsShowWindow);
    DECLARE_FUNCTION(execHideWindow);
    DECLARE_FUNCTION(execShowWindow);
    DECLARE_FUNCTION(execSetDefaultShow);
    DECLARE_FUNCTION(execSetRenderOnTop);
    DECLARE_FUNCTION(execSetAlwaysFullAlpha);
    DECLARE_FUNCTION(execSetMsgPassThrough);
    DECLARE_FUNCTION(execGetFunction);
    DECLARE_FUNCTION(execGetVariable);
    DECLARE_FUNCTION(execRegisterDelegateHandler);
    DECLARE_FUNCTION(execDeallocGFxValue);
    DECLARE_FUNCTION(execAllocGFxValue);
    DECLARE_FUNCTION(execDeallocGFxValues);
    DECLARE_FUNCTION(execAllocGFxValues);
    DECLARE_FUNCTION(execInvoke);
    DECLARE_FUNCTION(execCreateArray);
    DECLARE_FUNCTION(execCreateObject);
    DECLARE_FUNCTION(execShowFlashFromFilePath);
    DECLARE_FUNCTION(execRegisterState);
    DECLARE_FUNCTION(execRegisterGFxEvent);
    DECLARE_FUNCTION(execRegisterGFxEventForLoaded);
    DECLARE_FUNCTION(execRegisterEvent);
    void eventOnFocus(BITFIELD bFocused, BITFIELD bTransparencyMode)
    {
        UGFxUIScript_eventOnFocus_Parms Parms;
        Parms.bFocused=bFocused;
        Parms.bTransparencyMode=bTransparencyMode;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnFocus),&Parms);
    }
    void eventOnFlashLoaded()
    {
        ProcessEvent(FindFunctionChecked(NWINDOW_OnFlashLoaded),NULL);
    }
    void eventOnCallUCLogic(INT logicID, const FString& param)
    {
        UGFxUIScript_eventOnCallUCLogic_Parms Parms;
        Parms.logicID=logicID;
        Parms.param=param;
        ProcessEvent(FindFunctionChecked(NWINDOW_OnCallUCLogic),&Parms);
    }
    DECLARE_CLASS(UGFxUIScript,UUIScript,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UGFxUIScript)
};


class NWINDOW_API UGMAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestSnoopEnd);
    DECLARE_FUNCTION(execGetObservingUserInfo);
    DECLARE_FUNCTION(execRequestGMCommand);
    DECLARE_FUNCTION(execBeginGMChangeServer);
    DECLARE_CLASS(UGMAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UGMAPI)
};


class NWINDOW_API UHairshopAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execApplyHairType);
    DECLARE_FUNCTION(execApplyCharHairInfo);
    DECLARE_FUNCTION(execUpdateCharHairInfo);
    DECLARE_CLASS(UHairshopAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UHairshopAPI)
};


class NWINDOW_API UHeroBookAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execGetHeroBookItemListFromInven);
    DECLARE_FUNCTION(execGetAllHeroBookListData);
    DECLARE_FUNCTION(execGetHeroBookMaxPoint);
    DECLARE_FUNCTION(execGetHeroBookData);
    DECLARE_CLASS(UHeroBookAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UHeroBookAPI)
};


class NWINDOW_API UHomunculusAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execGetHomunculusSlotActivateCost);
    DECLARE_FUNCTION(execGetHomunculusGatchaList);
    DECLARE_FUNCTION(execGetMaxHomunculusNpcLevelData);
    DECLARE_FUNCTION(execGetHomunculusNpcLevelData);
    DECLARE_FUNCTION(execGetHomunculusNpcData);
    DECLARE_FUNCTION(execGetHomunculusDatas);
    DECLARE_FUNCTION(execGetBonusResetItem);
    DECLARE_FUNCTION(execGetPointResetItem);
    DECLARE_FUNCTION(execGetHomunEnchantData);
    DECLARE_FUNCTION(execGetRemainBirthSeconds);
    DECLARE_FUNCTION(execGetHomunCreateData);
    DECLARE_FUNCTION(execIsHomunReady);
    DECLARE_CLASS(UHomunculusAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UHomunculusAPI)
};


class NWINDOW_API UInputAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execGetInputKey);
    DECLARE_FUNCTION(execGetKeyString);
    DECLARE_FUNCTION(execIsAltPressed);
    DECLARE_FUNCTION(execIsCtrlPressed);
    DECLARE_FUNCTION(execIsShiftPressed);
    DECLARE_CLASS(UInputAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UInputAPI)
};


class NWINDOW_API UItemLookChangeAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestExCancelItemLookChange);
    DECLARE_FUNCTION(execRequestExTryToPut_Shape_Shifting_EnchantSupportItem);
    DECLARE_FUNCTION(execRequestExTryToPut_Shape_Shifting_TargetItem);
    DECLARE_FUNCTION(execRequestItemLookChange);
    DECLARE_CLASS(UItemLookChangeAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UItemLookChangeAPI)
};

enum EMacroErrorType
{
    MERR_NONE               =0,
    MERR_INVALID            =1,
    MERR_LIMIT_WORLDCHAT    =2,
    MERR_MAX                =3,
};

class NWINDOW_API UMacroAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestMakeMacro);
    DECLARE_FUNCTION(execRequestDeleteMacro);
    DECLARE_FUNCTION(execRequestUseMacro);
    DECLARE_FUNCTION(execRequestMacroList);
    DECLARE_CLASS(UMacroAPI,UUIEventManager,0,NWindow)
	EMacroErrorType CheckMacroCommand(TArray<FString> &CommandList);
	VOID SaveMacroFromCommandList(L2ParamStack* param, TArray<FString> &CommandList);
};


class NWINDOW_API UNewEnchantAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execGetCombinationItemData);
    DECLARE_FUNCTION(execGetEnchantCandidateMaterialList);
    DECLARE_FUNCTION(execIsNoFailResultEffectType);
    DECLARE_FUNCTION(execGetResultItemForEnchant);
    DECLARE_FUNCTION(execGetMaterialItemForEnchantFromEquip);
    DECLARE_FUNCTION(execGetMaterialItemForEnchantFromInven);
    DECLARE_FUNCTION(execRequestEnchantRetryPutItems);
    DECLARE_FUNCTION(execRequestClose);
    DECLARE_FUNCTION(execRequestTryEnchant);
    DECLARE_FUNCTION(execRequestRemoveTwo);
    DECLARE_FUNCTION(execRequestRemoveOne);
    DECLARE_FUNCTION(execRequestPushTwo);
    DECLARE_FUNCTION(execRequestPushOne);
    DECLARE_CLASS(UNewEnchantAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UNewEnchantAPI)
};


class NWINDOW_API UUIDataManager : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execGetFireAbilityComboEffectData);
    DECLARE_FUNCTION(execGetFireAbilityData);
    DECLARE_FUNCTION(execGetDethroneShopDataList);
    DECLARE_FUNCTION(execGetAbilityItem);
    DECLARE_FUNCTION(execGetOlympiadGroupServerList);
    DECLARE_FUNCTION(execGetRootClassID);
    DECLARE_FUNCTION(execGetServerList);
    DECLARE_FUNCTION(execGetServerInfo);
    DECLARE_FUNCTION(execGetMaxServerCount);
    DECLARE_FUNCTION(execGetSystemMsgMaxCount);
    DECLARE_FUNCTION(execGetSysStringMaxCount);
    DECLARE_FUNCTION(execGetClassTypeMaxCount);
    DECLARE_FUNCTION(execGetEnableClassIndexList);
    DECLARE_FUNCTION(execGetClassnameSysstringIndexByClassIndex);
    DECLARE_CLASS(UUIDataManager,UUIEventManager,0,NWindow)
	#include "UIDataManager.h"
};


class NWINDOW_API UPersonalConnectionAPI : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetPvpbookMaxCount);
    DECLARE_FUNCTION(execGetPvpbookRequiredItem);
    DECLARE_FUNCTION(execRequestPvpbookTeleportToKiller);
    DECLARE_FUNCTION(execRequestPvpbookKillerLocation);
    DECLARE_FUNCTION(execRequestPvpbookList);
    DECLARE_FUNCTION(execRequestMentorCancel);
    DECLARE_FUNCTION(execRequestMentorList);
    DECLARE_FUNCTION(execConfirmMenteeAdd);
    DECLARE_FUNCTION(execRequestMenteeAdd);
    DECLARE_FUNCTION(execRequestFriendChat);
    DECLARE_FUNCTION(execGetFriendServerID);
    DECLARE_FUNCTION(execRequestPledgeMemberList);
    DECLARE_FUNCTION(execRequestInzonePartyInfoHistory);
    DECLARE_FUNCTION(execRequestUpdateBlockMemo);
    DECLARE_FUNCTION(execRequestBlockDetailInfo);
    DECLARE_FUNCTION(execRequestBlockInfoList);
    DECLARE_FUNCTION(execRequestRemoveBlock);
    DECLARE_FUNCTION(execRequestAddBlock);
    DECLARE_FUNCTION(execRequestUpdateFriendMemo);
    DECLARE_FUNCTION(execRequestFriendDetailInfo);
    DECLARE_FUNCTION(execRequestFriendInfoList);
    DECLARE_FUNCTION(execRequestRemoveFriend);
    DECLARE_FUNCTION(execRequestAddFriend);
    DECLARE_CLASS(UPersonalConnectionAPI,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UPersonalConnectionAPI)
};


class NWINDOW_API UStatisticAPI : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execRequestUserStatistics);
    DECLARE_FUNCTION(execRequestWorldStatistics);
    DECLARE_FUNCTION(execRequestHotLinkStatistics);
    DECLARE_FUNCTION(execGetTableOfContent);
    DECLARE_FUNCTION(execGetContentInfo);
    DECLARE_FUNCTION(execGetTitleNameOfStatistic);
    DECLARE_CLASS(UStatisticAPI,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UStatisticAPI)
};


class NWINDOW_API UUIDATA_AGIT : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execRequestCheckAvailability);
    DECLARE_FUNCTION(execRequestOpenDecoNPC);
    DECLARE_FUNCTION(execGetDecoNPCInfo);
    DECLARE_FUNCTION(execGetAllDecoNPCInfo);
    DECLARE_CLASS(UUIDATA_AGIT,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_AGIT)
};


class NWINDOW_API UUIDATA_API : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execChangeToPrevState);
    DECLARE_FUNCTION(execSetState);
    DECLARE_CLASS(UUIDATA_API,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_API)
};


class NWINDOW_API UUIDATA_ARTIFACT : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execFindArtifactData);
    DECLARE_FUNCTION(execGetAllArtifactData);
    DECLARE_FUNCTION(execGetArtifactEnchantCondition);
    DECLARE_FUNCTION(execGetArtifactMaterialGroupList);
    DECLARE_FUNCTION(execGetArtifactMinEnchantMaterial);
    DECLARE_CLASS(UUIDATA_ARTIFACT,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_ARTIFACT)
};


class NWINDOW_API UUIDATA_CLAN : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execRequestOpenUnionWnd);
    DECLARE_FUNCTION(execRequestUnionInfo);
    DECLARE_FUNCTION(execGetSubClanSkillLevel);
    DECLARE_FUNCTION(execGetSkillLevel);
    DECLARE_FUNCTION(execRequestSubClanSkillList);
    DECLARE_FUNCTION(execRequestClanSkillList);
    DECLARE_FUNCTION(execRequestClanInfo);
    DECLARE_FUNCTION(execGetNameValue);
    DECLARE_FUNCTION(execGetAllianceCrestTexture);
    DECLARE_FUNCTION(execGetEmblemTexture);
    DECLARE_FUNCTION(execGetCrestTexture);
    DECLARE_FUNCTION(execGetAllianceName);
    DECLARE_FUNCTION(execGetName);
    DECLARE_CLASS(UUIDATA_CLAN,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_CLAN)
};


class NWINDOW_API UUIDATA_ENSOUL : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetEnsoulExtractionFeeInfoByItemId);
    DECLARE_FUNCTION(execGetEnsoulFeeInfoByItemId);
    DECLARE_FUNCTION(execGetEnsoulStoneInfo);
    DECLARE_FUNCTION(execGetEnsoulOptionInfo);
    DECLARE_FUNCTION(execGetEnsoulSlotCount);
    DECLARE_CLASS(UUIDATA_ENSOUL,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_ENSOUL)
};


class NWINDOW_API UUIDATA_GAMETIP : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetDataByIndex);
    DECLARE_FUNCTION(execGetDataCount);
    DECLARE_CLASS(UUIDATA_GAMETIP,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_GAMETIP)
};


class NWINDOW_API UUIDATA_HENNA : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetDyePotentialSlotFeeUIData);
    DECLARE_FUNCTION(execGetDyePotentialFeeDataBySlot);
    DECLARE_FUNCTION(execGetHennaEmblemTex);
    DECLARE_FUNCTION(execGetDyeCombinationData);
    DECLARE_FUNCTION(execGetDyePotentialFeeData);
    DECLARE_FUNCTION(execGetDyePotentialExpDataList);
    DECLARE_FUNCTION(execGetDyePotentialDataList);
    DECLARE_FUNCTION(execGetDyePotentialData);
    DECLARE_FUNCTION(execGetHennaDyeItemClassID);
    DECLARE_FUNCTION(execGetHennaDyeItemLevel);
    DECLARE_FUNCTION(execGetMaxDyeChargeAmount);
    DECLARE_FUNCTION(execGetDyeEffectSkillInfo);
    DECLARE_FUNCTION(execGetIconTex);
    DECLARE_FUNCTION(execGetDescription);
    DECLARE_FUNCTION(execGetItemName);
    DECLARE_FUNCTION(execGetAddtionNameS);
    DECLARE_FUNCTION(execGetIconTexS);
    DECLARE_FUNCTION(execGetDescriptionS);
    DECLARE_FUNCTION(execGetItemNameS);
    DECLARE_FUNCTION(execGetItemCheck);
    DECLARE_CLASS(UUIDATA_HENNA,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_HENNA)
};


class NWINDOW_API UUIDATA_HUNTINGZONE : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetHuntingZoneData);
    DECLARE_FUNCTION(execGetHuntingDescription);
    DECLARE_FUNCTION(execGetHuntingZone);
    DECLARE_FUNCTION(execGetHuntingZoneLoc);
    DECLARE_FUNCTION(execGetMaxLevel);
    DECLARE_FUNCTION(execGetMinLevel);
    DECLARE_FUNCTION(execGetHuntingZoneType);
    DECLARE_FUNCTION(execGetHuntingZoneName);
    DECLARE_FUNCTION(execIsValidData);
    DECLARE_CLASS(UUIDATA_HUNTINGZONE,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_HUNTINGZONE)
};


class NWINDOW_API UUIDATA_INVENTORY : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetAllDefaultActionPeelItem);
    DECLARE_FUNCTION(execGetAllEnchantableInvenItem);
    DECLARE_FUNCTION(execGetItemByScriptFilter);
    DECLARE_FUNCTION(execGetAllArtifactItem);
    DECLARE_FUNCTION(execGetAllQuestItem);
    DECLARE_FUNCTION(execGetAllInvenItem);
    DECLARE_FUNCTION(execGetAllEquipItem);
    DECLARE_FUNCTION(execGetAllItem);
    DECLARE_FUNCTION(execIsQuestItemByClassID);
    DECLARE_FUNCTION(execIsQuestItem);
    DECLARE_FUNCTION(execIsEquipItemByClassID);
    DECLARE_FUNCTION(execIsEquipItem);
    DECLARE_FUNCTION(execFindItemByClassID);
    DECLARE_FUNCTION(execFindItem);
    DECLARE_FUNCTION(execHasItemByClassID);
    DECLARE_FUNCTION(execHasItem);
    DECLARE_CLASS(UUIDATA_INVENTORY,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_INVENTORY)
};


class NWINDOW_API UUIDATA_ITEM : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execIsDualInventorySlot);
    DECLARE_FUNCTION(execGetStringMatchingItemList);
    DECLARE_FUNCTION(execIsDefaultActionPeel);
    DECLARE_FUNCTION(execGetItemCreateInfo);
    DECLARE_FUNCTION(execGetEnchantChallengePointData);
    DECLARE_FUNCTION(execGetEnchantChallengePointSettingData);
    DECLARE_FUNCTION(execGetChallengePointGroupID);
    DECLARE_FUNCTION(execGetEnchantScrollSetData);
    DECLARE_FUNCTION(execGetEnchantValidateValue);
    DECLARE_FUNCTION(execGetDBDeleteRemainTimeString);
    DECLARE_FUNCTION(execGetDBDeleteDateString);
    DECLARE_FUNCTION(execGetEnchantBlessScrollData);
    DECLARE_FUNCTION(execGetBlessedItemName);
    DECLARE_FUNCTION(execGetBlessOptionData);
    DECLARE_FUNCTION(execGetEnchantedItemSkillDesc);
    DECLARE_FUNCTION(execGetAutomaticUseItemType);
    DECLARE_FUNCTION(execGetExMeshName);
    DECLARE_FUNCTION(execGetExTextureName);
    DECLARE_FUNCTION(execGetMeshName);
    DECLARE_FUNCTION(execGetTextureName);
    DECLARE_FUNCTION(execGetInventoryType);
    DECLARE_FUNCTION(execGetItemNameClass);
    DECLARE_FUNCTION(execGetSetItemPeaceEffectDescription);
    DECLARE_FUNCTION(execGetSetItemPeaceEffectNum);
    DECLARE_FUNCTION(execGetEtcItemTextureName);
    DECLARE_FUNCTION(execGetSetItemEnchantEffectDescription);
    DECLARE_FUNCTION(execGetSetItemEnchantConditionalValue);
    DECLARE_FUNCTION(execGetItemSetEnchantEffectNum);
    DECLARE_FUNCTION(execGetSetItemID);
    DECLARE_FUNCTION(execGetSetItemFirstID);
    DECLARE_FUNCTION(execIsExistSetItem);
    DECLARE_FUNCTION(execGetSetItemNum);
    DECLARE_FUNCTION(execGetRefineryItemName);
    DECLARE_FUNCTION(execIsMagicWeapon);
    DECLARE_FUNCTION(execIsCrystallizable);
    DECLARE_FUNCTION(execGetItemInfoString);
    DECLARE_FUNCTION(execGetItemInfo);
    DECLARE_FUNCTION(execGetItemCrystalType);
    DECLARE_FUNCTION(execGetItemDataType);
    DECLARE_FUNCTION(execGetItemWeight);
    DECLARE_FUNCTION(execGetItemDescription);
    DECLARE_FUNCTION(execGetItemTextureName);
    DECLARE_FUNCTION(execGetItemAdditionalName);
    DECLARE_FUNCTION(execGetItemName);
    DECLARE_FUNCTION(execGetDataCount);
    DECLARE_FUNCTION(execFindNextID);
    DECLARE_FUNCTION(execGetNextID);
    DECLARE_FUNCTION(execGetFirstID);
    DECLARE_CLASS(UUIDATA_ITEM,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_ITEM)
};


class NWINDOW_API UUIDATA_MACRO : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetMacroPresetInfo);
    DECLARE_FUNCTION(execGetMacroPresetIDs);
    DECLARE_FUNCTION(execGetMacroSkillIDList);
    DECLARE_FUNCTION(execGetMacroCommandList);
    DECLARE_FUNCTION(execGetUseSkillID);
    DECLARE_FUNCTION(execGetMacroCount);
    DECLARE_FUNCTION(execGetMacroInfo);
    DECLARE_CLASS(UUIDATA_MACRO,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_MACRO)
};


class NWINDOW_API UUIDATA_NPC : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetNPCClass);
    DECLARE_FUNCTION(execGetNPCTextureList);
    DECLARE_FUNCTION(execGetNPCMesh);
    DECLARE_FUNCTION(execGetMentoringNPCId);
    DECLARE_FUNCTION(execGetNPCIconName);
    DECLARE_FUNCTION(execGetSummonGrade);
    DECLARE_FUNCTION(execGetSummonMaxCount);
    DECLARE_FUNCTION(execGetSummonSort);
    DECLARE_FUNCTION(execGetNpcProperty);
    DECLARE_FUNCTION(execGetNPCNickName);
    DECLARE_FUNCTION(execGetNPCName);
    DECLARE_FUNCTION(execIsValidData);
    DECLARE_FUNCTION(execGetNextID);
    DECLARE_FUNCTION(execGetFirstID);
    DECLARE_CLASS(UUIDATA_NPC,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_NPC)
};


class NWINDOW_API UUIDATA_PARTY : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetMemberTacticalSign);
    DECLARE_FUNCTION(execGetMemberVirtualName);
    DECLARE_FUNCTION(execMovePartyMember);
    DECLARE_FUNCTION(execGetMemberName);
    DECLARE_CLASS(UUIDATA_PARTY,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_PARTY)
};


class NWINDOW_API UUIDATA_PAWNVIEWER : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execShowSelectedBone);
    DECLARE_FUNCTION(execGetBoneNameList);
    DECLARE_FUNCTION(execEquipNPCItem);
    DECLARE_FUNCTION(execPlayNPCAnim);
    DECLARE_FUNCTION(execGetNPCAnimationList);
    DECLARE_FUNCTION(execSpawnActorAtMyLocation);
    DECLARE_FUNCTION(execApplyPawnSetting);
    DECLARE_FUNCTION(execSpawnNPC);
    DECLARE_FUNCTION(execApplyRightSheathingHide);
    DECLARE_FUNCTION(execApplyRightOffset);
    DECLARE_FUNCTION(execApplyRightRotation);
    DECLARE_FUNCTION(execApplyRightAttachBoneName);
    DECLARE_FUNCTION(execApplyLeftSheathingHide);
    DECLARE_FUNCTION(execApplyLeftOffset);
    DECLARE_FUNCTION(execApplyLeftRotation);
    DECLARE_FUNCTION(execApplyLeftAttachBoneName);
    DECLARE_FUNCTION(execGetSkillLevelListByID);
    DECLARE_FUNCTION(execIsProfilingEmitter);
    DECLARE_FUNCTION(execUpdateEmitterProfiling);
    DECLARE_FUNCTION(execStopEmitterProfiling);
    DECLARE_FUNCTION(execExecuteEmitterProfiling);
    DECLARE_FUNCTION(execSetGroundSkillCursor);
    DECLARE_FUNCTION(execSetSimpleEmitter);
    DECLARE_FUNCTION(execClearDummyPawn);
    DECLARE_FUNCTION(execSpawnDummyPawn);
    DECLARE_FUNCTION(execAddSkillByType);
    DECLARE_FUNCTION(execAddSkillByVisualEffect);
    DECLARE_FUNCTION(execAddSkillByID);
    DECLARE_FUNCTION(execAddSkillByName);
    DECLARE_FUNCTION(execExecuteSkill);
    DECLARE_FUNCTION(execStartSimulPawn);
    DECLARE_FUNCTION(execSetArrowRatio);
    DECLARE_FUNCTION(execSetSkillDeleteRatio);
    DECLARE_FUNCTION(execSetSkillCancelRatio);
    DECLARE_FUNCTION(execSetSkillUseRatio);
    DECLARE_FUNCTION(execSetPawnNum);
    DECLARE_FUNCTION(execSaveSimulMesh);
    DECLARE_FUNCTION(execResetSimulMesh);
    DECLARE_FUNCTION(execLoadSimulMesh);
    DECLARE_FUNCTION(execSetMantleOffset);
    DECLARE_FUNCTION(execGetMantleOffset);
    DECLARE_FUNCTION(execGetChestMesh);
    DECLARE_FUNCTION(execUpdateAnimForce);
    DECLARE_FUNCTION(execRemoveAnimForce);
    DECLARE_FUNCTION(execAddAnimForce);
    DECLARE_FUNCTION(execGetAnimForceInfo);
    DECLARE_FUNCTION(execGetAnimForceNumber);
    DECLARE_FUNCTION(execGetSimulAnimName);
    DECLARE_FUNCTION(execUpdateCollision);
    DECLARE_FUNCTION(execRemoveCollision);
    DECLARE_FUNCTION(execAddCollision);
    DECLARE_FUNCTION(execGetCollisionInfo);
    DECLARE_FUNCTION(execGetCollisionType);
    DECLARE_FUNCTION(execGetCollisionNumber);
    DECLARE_FUNCTION(execRemoveAnchorVertex);
    DECLARE_FUNCTION(execAddAnchorVertex);
    DECLARE_FUNCTION(execGetVertexNumber);
    DECLARE_FUNCTION(execGetSimulMeshName);
    DECLARE_FUNCTION(execGetAnimFrame);
    DECLARE_FUNCTION(execPlayPCComboAnim);
    DECLARE_FUNCTION(execPlayPCAnim);
    DECLARE_FUNCTION(execGetPCAnimationList);
    DECLARE_FUNCTION(execApplyItemEnchanted);
    DECLARE_FUNCTION(execApplyItemRefinery);
    DECLARE_FUNCTION(execEquipPCItem);
    DECLARE_FUNCTION(execGetHairAccOffset);
    DECLARE_FUNCTION(execAdjustHairAccOffset);
    DECLARE_FUNCTION(execGetBHairInfo);
    DECLARE_FUNCTION(execGetAHairInfo);
    DECLARE_FUNCTION(execGetFaceInfo);
    DECLARE_FUNCTION(execApplyHairColor);
    DECLARE_FUNCTION(execApplyHair);
    DECLARE_FUNCTION(execApplyFace);
    DECLARE_FUNCTION(execGetExceptionalHairColorList);
    DECLARE_FUNCTION(execGetExceptionallHairList);
    DECLARE_FUNCTION(execGetExceptionalFaceList);
    DECLARE_FUNCTION(execChangeMyPC);
    DECLARE_FUNCTION(execDuplicateCharacter);
    DECLARE_FUNCTION(execSpawnCharacter);
    DECLARE_FUNCTION(execGetClassNameList);
    DECLARE_CLASS(UUIDATA_PAWNVIEWER,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_PAWNVIEWER)
};


class NWINDOW_API UUIDATA_PET : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetPetEXPRate);
    DECLARE_FUNCTION(execGetSummonNum);
    DECLARE_FUNCTION(execIsHavePet);
    DECLARE_CLASS(UUIDATA_PET,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_PET)
};


class NWINDOW_API UUIDATA_PLAYER : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execSetAbilityPoint);
    DECLARE_FUNCTION(execIsInPrison);
    DECLARE_FUNCTION(execIsInDethrone);
    DECLARE_FUNCTION(execGetMeshType);
    DECLARE_FUNCTION(execGetInventoryCount);
    DECLARE_FUNCTION(execGetInventoryLimit);
    DECLARE_FUNCTION(execHasCrystallizeAbility);
    DECLARE_FUNCTION(execGetPlayerEnvironment);
    DECLARE_FUNCTION(execGetPlayerMoveType);
    DECLARE_FUNCTION(execGetPlayerEXPRate);
    DECLARE_FUNCTION(execGetRecipeShopMsg);
    DECLARE_FUNCTION(execGetPlayerID);
    DECLARE_FUNCTION(execIsLegend);
    DECLARE_FUNCTION(execIsHero);
    DECLARE_CLASS(UUIDATA_PLAYER,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_PLAYER)
};


class NWINDOW_API UUIDATA_QUEST : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execIsAcceptableQuest);
    DECLARE_FUNCTION(execGetQuestStatus);
    DECLARE_FUNCTION(execIsDoingQuest);
    DECLARE_FUNCTION(execIsClearedQuest);
    DECLARE_FUNCTION(execIsClassLimitContains);
    DECLARE_FUNCTION(execGetQuestPriority);
    DECLARE_FUNCTION(execGetQuestCategoryID);
    DECLARE_FUNCTION(execGetMarkType);
    DECLARE_FUNCTION(execGetQuestReward);
    DECLARE_FUNCTION(execGetQuestIscategory);
    DECLARE_FUNCTION(execIsShowableItemNumQuest);
    DECLARE_FUNCTION(execIsShowableJournalQuest);
    DECLARE_FUNCTION(execGetQuestZoneName);
    DECLARE_FUNCTION(execGetQuestZone);
    DECLARE_FUNCTION(execGetClearedQuest);
    DECLARE_FUNCTION(execGetQuestType);
    DECLARE_FUNCTION(execGetMaxLevel);
    DECLARE_FUNCTION(execGetMinLevel);
    DECLARE_FUNCTION(execGetIntro);
    DECLARE_FUNCTION(execGetRequirement);
    DECLARE_FUNCTION(execGetStartNPCID);
    DECLARE_FUNCTION(execGetStartNPCLoc);
    DECLARE_FUNCTION(execGetTargetName);
    DECLARE_FUNCTION(execGetTargetLoc);
    DECLARE_FUNCTION(execGetQuestItem);
    DECLARE_FUNCTION(execGetQuestDescription);
    DECLARE_FUNCTION(execGetQuestJournalNameSplit);
    DECLARE_FUNCTION(execGetQuestJournalNameLine);
    DECLARE_FUNCTION(execGetQuestJournalName);
    DECLARE_FUNCTION(execGetQuestName);
    DECLARE_FUNCTION(execIsMinimapOnly);
    DECLARE_FUNCTION(execIsValidData);
    DECLARE_FUNCTION(execGetNextID);
    DECLARE_FUNCTION(execGetFirstID);
    DECLARE_CLASS(UUIDATA_QUEST,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_QUEST)
};


class NWINDOW_API UUIDATA_RAID : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetRaidDataKeyList);
    DECLARE_FUNCTION(execGetRaidRecommendLevel);
    DECLARE_FUNCTION(execGetRaidLoc);
    DECLARE_FUNCTION(execGetRaidDescription);
    DECLARE_FUNCTION(execGetRaidMonsterZone);
    DECLARE_FUNCTION(execGetRaidMonsterLevel);
    DECLARE_FUNCTION(execGetRaidMonsterID);
    DECLARE_FUNCTION(execIsValidData);
    DECLARE_CLASS(UUIDATA_RAID,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_RAID)
};


class NWINDOW_API UUIDATA_RECIPE : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execIsOfferingItem);
    DECLARE_FUNCTION(execGetRecipeMaterialItem);
    DECLARE_FUNCTION(execGetRecipeIsMultipleProduct);
    DECLARE_FUNCTION(execGetRecipeSuccessRate);
    DECLARE_FUNCTION(execGetRecipeDescription);
    DECLARE_FUNCTION(execGetRecipeLevel);
    DECLARE_FUNCTION(execGetRecipeMpConsume);
    DECLARE_FUNCTION(execGetRecipeCrystalType);
    DECLARE_FUNCTION(execGetRecipeProductNum);
    DECLARE_FUNCTION(execGetRecipeProductID);
    DECLARE_FUNCTION(execGetRecipeIconName);
    DECLARE_FUNCTION(execGetRecipeItemID);
    DECLARE_CLASS(UUIDATA_RECIPE,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_RECIPE)
};


class NWINDOW_API UUIDATA_SKILL : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetMSCondWeapons);
    DECLARE_FUNCTION(execGetMSCondEquipType);
    DECLARE_FUNCTION(execGetMSCondItem);
    DECLARE_FUNCTION(execGetAutomaticUseSkillType);
    DECLARE_FUNCTION(execGetNextDefaultToppingSkillExtraInfo);
    DECLARE_FUNCTION(execGetFirstDefaultToppingSkillExtraInfo);
    DECLARE_FUNCTION(execGetToppingSkillExtraInfo);
    DECLARE_FUNCTION(execIsToppingSkill);
    DECLARE_FUNCTION(execGetCurrentSkillList);
    DECLARE_FUNCTION(execIsAvailableClass);
    DECLARE_FUNCTION(execSkillIsNewOrUp);
    DECLARE_FUNCTION(execGetUltimateSkillLevel);
    DECLARE_FUNCTION(execGetCastRange);
    DECLARE_FUNCTION(execGetMpConsume);
    DECLARE_FUNCTION(execGetHpConsume);
    DECLARE_FUNCTION(execIsAlchemySkill);
    DECLARE_FUNCTION(execGetOperateType);
    DECLARE_FUNCTION(execGetEnchantIcon);
    DECLARE_FUNCTION(execGetEnchantSkillLevel);
    DECLARE_FUNCTION(execGetEnchantName);
    DECLARE_FUNCTION(execGetDescription);
    DECLARE_FUNCTION(execGetName);
    DECLARE_FUNCTION(execGetIconPanel2);
    DECLARE_FUNCTION(execGetIconPanel);
    DECLARE_FUNCTION(execGetIconName);
    DECLARE_FUNCTION(execGetDataCount);
    DECLARE_FUNCTION(execGetNextID);
    DECLARE_FUNCTION(execGetFirstID);
    DECLARE_CLASS(UUIDATA_SKILL,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_SKILL)
};


class NWINDOW_API UUIDATA_STATICOBJECT : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetStaticObjectShowHP);
    DECLARE_FUNCTION(execGetStaticObjectName);
    DECLARE_FUNCTION(execGetServerObjectHP);
    DECLARE_FUNCTION(execGetServerObjectMaxHP);
    DECLARE_FUNCTION(execGetServerObjectType);
    DECLARE_FUNCTION(execGetServerObjectName);
    DECLARE_FUNCTION(execGetServerObjectNameID);
    DECLARE_CLASS(UUIDATA_STATICOBJECT,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_STATICOBJECT)
};


class NWINDOW_API UUIDATA_TARGET : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetTargetActor);
    DECLARE_FUNCTION(execIsVehicle);
    DECLARE_FUNCTION(execIsHPShowableNPC);
    DECLARE_FUNCTION(execIsCanBeAttacked);
    DECLARE_FUNCTION(execIsPet);
    DECLARE_FUNCTION(execIsNpc);
    DECLARE_FUNCTION(execIsServerObject);
    DECLARE_FUNCTION(execGetTargetClassID);
    DECLARE_FUNCTION(execGetTargetPledgeID);
    DECLARE_FUNCTION(execGetTargetNameColor);
    DECLARE_FUNCTION(execGetTargetName);
    DECLARE_FUNCTION(execGetTargetMP);
    DECLARE_FUNCTION(execGetTargetMaxMP);
    DECLARE_FUNCTION(execGetTargetHP);
    DECLARE_FUNCTION(execGetTargetMaxHP);
    DECLARE_FUNCTION(execGetTargetUserRank);
    DECLARE_FUNCTION(execGetTargetID);
    DECLARE_CLASS(UUIDATA_TARGET,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_TARGET)
};


class NWINDOW_API UUIDATA_TRANSFORM : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execGetNpcID);
    DECLARE_CLASS(UUIDATA_TRANSFORM,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_TRANSFORM)
};


class NWINDOW_API UUIDATA_TUTORIALLIST : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execCheckTutorial);
    DECLARE_CLASS(UUIDATA_TUTORIALLIST,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_TUTORIALLIST)
};


class NWINDOW_API UUIDATA_USER : public UUIDataManager
{
public:
    DECLARE_FUNCTION(execIsDethroneComrade);
    DECLARE_FUNCTION(execIsDethroneEnemy);
    DECLARE_FUNCTION(execIsPrologueGrowType);
    DECLARE_FUNCTION(execGetPrologueGrowType);
    DECLARE_FUNCTION(execGetClanType);
    DECLARE_FUNCTION(execGetUserName);
    DECLARE_CLASS(UUIDATA_USER,UUIDataManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_USER)
};


class NWINDOW_API UPetAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execGetPetRaceEmblemDataAll);
    DECLARE_FUNCTION(execGetPetRaceEmblemData);
    DECLARE_FUNCTION(execGetPetExtractInfo);
    DECLARE_FUNCTION(execGetPetAcquireSkillList);
    DECLARE_FUNCTION(execGetPetNameIDBySkill);
    DECLARE_FUNCTION(execGetPetEvolveNameInfo);
    DECLARE_FUNCTION(execGetPetEvolveLookInfo);
    DECLARE_FUNCTION(execGetPetEvolveCondition);
    DECLARE_FUNCTION(execRequestGetItemFromPet);
    DECLARE_FUNCTION(execRequestGiveItemToPet);
    DECLARE_FUNCTION(execRequestPetUseItem);
    DECLARE_FUNCTION(execRequestPetInventoryItemList);
    DECLARE_CLASS(UPetAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UPetAPI)
};


class NWINDOW_API UPostWndAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestPledgeMemberList);
    DECLARE_FUNCTION(execRequestPostFriendList);
    DECLARE_FUNCTION(execRequestDeletingPostFriend);
    DECLARE_FUNCTION(execRequestAddingPostFriend);
    DECLARE_FUNCTION(execRequestFriendList);
    DECLARE_CLASS(UPostWndAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UPostWndAPI)
};


class NWINDOW_API URandomCraftAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execGetMaxGaugeValue);
    DECLARE_FUNCTION(execGetItemAnnounceGrade);
    DECLARE_FUNCTION(execGetRewardItems);
    DECLARE_FUNCTION(execGetSlotsSuccessRate);
    DECLARE_FUNCTION(execGetMaxItemPoint);
    DECLARE_FUNCTION(execGetRestCosts);
    DECLARE_FUNCTION(execGetItemMakingCosts);
    DECLARE_FUNCTION(execGetItemLockCost);
    DECLARE_FUNCTION(execGetMaxItemLockCount);
    DECLARE_FUNCTION(execGetMaxSlotLockCount);
    DECLARE_CLASS(URandomCraftAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(URandomCraftAPI)
};


class NWINDOW_API URecipeAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestRecipeShopListSet);
    DECLARE_FUNCTION(execRequestRecipeShopMessageSet);
    DECLARE_FUNCTION(execRequestRecipeShopManageQuit);
    DECLARE_FUNCTION(execRequestRecipeItemDelete);
    DECLARE_FUNCTION(execRequestRecipeBookOpen);
    DECLARE_FUNCTION(execRequestRecipeItemMakeInfo);
    DECLARE_FUNCTION(execRequestRecipeItemMakeSelf);
    DECLARE_FUNCTION(execRequestRecipeShopMakeDo);
    DECLARE_FUNCTION(execRequestRecipeShopSellList);
    DECLARE_FUNCTION(execRequestRecipeShopMakeInfo);
    DECLARE_CLASS(URecipeAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(URecipeAPI)
};


class NWINDOW_API URefineryAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execGetOptionDescByOptionID);
    DECLARE_FUNCTION(execGetOptionProbability);
    DECLARE_FUNCTION(execGetOptionDesc);
    DECLARE_FUNCTION(execGetRefineryFee);
    DECLARE_FUNCTION(execGetTargetItemListFromInven);
    DECLARE_FUNCTION(execGetItemListFromInven);
    DECLARE_FUNCTION(execRequestRefineCancel);
    DECLARE_FUNCTION(execConfirmCancelItem);
    DECLARE_FUNCTION(execConfirmGemStone);
    DECLARE_FUNCTION(execConfirmRefinerItem);
    DECLARE_FUNCTION(execConfirmTargetItem);
    DECLARE_CLASS(URefineryAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(URefineryAPI)
};


class NWINDOW_API UShortcutAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execExecuteShortcutCommand);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execRestoreDefault);
    DECLARE_FUNCTION(execDeactivateAll);
    DECLARE_FUNCTION(execDeactivateGroup);
    DECLARE_FUNCTION(execActivateGroup);
    DECLARE_FUNCTION(execRequestShortcutScriptData);
    DECLARE_FUNCTION(execRequestList);
    DECLARE_FUNCTION(execSave);
    DECLARE_FUNCTION(execUnlockShortcut);
    DECLARE_FUNCTION(execLockShortcut);
    DECLARE_FUNCTION(execGetAssignedKeyFromCommand);
    DECLARE_FUNCTION(execGetActiveGroupList);
    DECLARE_FUNCTION(execGetGroupList);
    DECLARE_FUNCTION(execGetGroupCommandList);
    DECLARE_FUNCTION(execAssignCommand);
    DECLARE_FUNCTION(execAssignSpecialKey);
    DECLARE_CLASS(UShortcutAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UShortcutAPI)
};


class NWINDOW_API UShortcutWndAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execGetSkillListFromShortcutItems);
    DECLARE_FUNCTION(execRequestRegisterShortcut);
    DECLARE_FUNCTION(execSetAutoUseMacro);
    DECLARE_FUNCTION(execRequestAutomaticUseItemActivate);
    DECLARE_FUNCTION(execRequestAutomaticUseItemActivateAll);
    DECLARE_FUNCTION(execExecuteShortcutBySlot);
    DECLARE_FUNCTION(execSetShortcutPage);
    DECLARE_CLASS(UShortcutWndAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UShortcutWndAPI)
};


class NWINDOW_API UTeamMatchAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestExBlockGameVote);
    DECLARE_FUNCTION(execRequestExBlockGameEnter);
    DECLARE_FUNCTION(execRequestBlockGameAllData);
    DECLARE_FUNCTION(execRequestExCleftEnter);
    DECLARE_FUNCTION(execRequestCleftAllData);
    DECLARE_CLASS(UTeamMatchAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UTeamMatchAPI)
};


class NWINDOW_API UTeleportListAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestTeleportFavoritesList);
    DECLARE_FUNCTION(execRequestTeleport);
    DECLARE_FUNCTION(execGetDominionList);
    DECLARE_FUNCTION(execGetNextTeleportListData);
    DECLARE_FUNCTION(execGetFirstTeleportListData);
    DECLARE_FUNCTION(execModifyExceptionLocation);
    DECLARE_FUNCTION(execGetTeleportListaDataWithZoneKey);
    DECLARE_FUNCTION(execGetCurrentZoneKey);
    DECLARE_CLASS(UTeleportListAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UTeleportListAPI)
};


class NWINDOW_API UUIAPI_WINDOW : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execGetSelectedRadioButtonName);
    DECLARE_FUNCTION(execClearAnchor);
    DECLARE_FUNCTION(execSetAnchor);
    DECLARE_FUNCTION(execGetTooltipText);
    DECLARE_FUNCTION(execSetTooltipText);
    DECLARE_FUNCTION(execSetTooltipType);
    DECLARE_FUNCTION(execSetTabOrder);
    DECLARE_FUNCTION(execSetResizeFrameSize);
    DECLARE_FUNCTION(execSetFrameSize);
    DECLARE_FUNCTION(execSetWindowSizeRel43);
    DECLARE_FUNCTION(execSetWindowSizeRel);
    DECLARE_FUNCTION(execSetWindowSize);
    DECLARE_FUNCTION(execBringToFront);
    DECLARE_FUNCTION(execBringToFrontOf);
    DECLARE_FUNCTION(execIsFocused);
    DECLARE_FUNCTION(execSetFocus);
    DECLARE_FUNCTION(execNotifyAlarm);
    DECLARE_FUNCTION(execIconize);
    DECLARE_FUNCTION(execMoveShake);
    DECLARE_FUNCTION(execMoveEx);
    DECLARE_FUNCTION(execMoveTo);
    DECLARE_FUNCTION(execMove);
    DECLARE_FUNCTION(execSetAlpha);
    DECLARE_FUNCTION(execSetAlwaysOnTop);
    DECLARE_FUNCTION(execIsEnableWindow);
    DECLARE_FUNCTION(execDisableWindow);
    DECLARE_FUNCTION(execEnableWindow);
    DECLARE_FUNCTION(execSetWindowTitleByText);
    DECLARE_FUNCTION(execSetWindowTitle);
    DECLARE_FUNCTION(execKillUITimer);
    DECLARE_FUNCTION(execSetUITimer);
    DECLARE_FUNCTION(execGetRect);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execHideWindow);
    DECLARE_FUNCTION(execShowWindow);
    DECLARE_FUNCTION(execIsMinimizedWindow);
    DECLARE_FUNCTION(execIsShowWindow);
    DECLARE_CLASS(UUIAPI_WINDOW,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_WINDOW)
};


class NWINDOW_API UUIAPI_BUTTON : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execSetButtonName);
    DECLARE_CLASS(UUIAPI_BUTTON,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_BUTTON)
};


class NWINDOW_API UUIAPI_CHECKBOX : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execToggleDisable);
    DECLARE_FUNCTION(execSetDisable);
    DECLARE_FUNCTION(execIsDisable);
    DECLARE_FUNCTION(execIsChecked);
    DECLARE_FUNCTION(execSetCheck);
    DECLARE_FUNCTION(execSetTitle);
    DECLARE_CLASS(UUIAPI_CHECKBOX,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_CHECKBOX)
};


class NWINDOW_API UUIAPI_COMBOBOX : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execAddStringWithColor);
    DECLARE_FUNCTION(execGetNumOfItems);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execSetSelectedNum);
    DECLARE_FUNCTION(execGetSelectedNum);
    DECLARE_FUNCTION(execGetReserved);
    DECLARE_FUNCTION(execGetString);
    DECLARE_FUNCTION(execSYS_AddStringWithReserved);
    DECLARE_FUNCTION(execAddStringWithReserved);
    DECLARE_FUNCTION(execSYS_AddString);
    DECLARE_FUNCTION(execAddString);
    DECLARE_CLASS(UUIAPI_COMBOBOX,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_COMBOBOX)
};


class NWINDOW_API UUIAPI_EDITBOX : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execSetAlign);
    DECLARE_FUNCTION(execAllSelect);
    DECLARE_FUNCTION(execSetHighLight);
    DECLARE_FUNCTION(execSetEditType);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execSimulateBackspace);
    DECLARE_FUNCTION(execAddString);
    DECLARE_FUNCTION(execSetString);
    DECLARE_FUNCTION(execGetString);
    DECLARE_CLASS(UUIAPI_EDITBOX,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_EDITBOX)
};


class NWINDOW_API UUIAPI_EFFECTBUTTON : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execEndEffect);
    DECLARE_FUNCTION(execBeginEffect);
    DECLARE_CLASS(UUIAPI_EFFECTBUTTON,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_EFFECTBUTTON)
};


class NWINDOW_API UUIAPI_INVENWEIGHT : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execZeroWeight);
    DECLARE_FUNCTION(execReduceWeight);
    DECLARE_FUNCTION(execAddWeight);
    DECLARE_CLASS(UUIAPI_INVENWEIGHT,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_INVENWEIGHT)
};


class NWINDOW_API UUIAPI_ITEMWINDOW : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execSetIconIndex);
    DECLARE_FUNCTION(execSetToggleEffect);
    DECLARE_FUNCTION(execShowScrollBar);
    DECLARE_FUNCTION(execSetFaded);
    DECLARE_FUNCTION(execFindItemByClassID);
    DECLARE_FUNCTION(execFindItem);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execGetItem);
    DECLARE_FUNCTION(execGetSelectedItem);
    DECLARE_FUNCTION(execDeleteItem);
    DECLARE_FUNCTION(execSetItem);
    DECLARE_FUNCTION(execAddItem);
    DECLARE_FUNCTION(execClearSelect);
    DECLARE_FUNCTION(execGetItemNum);
    DECLARE_FUNCTION(execGetSelectedNum);
    DECLARE_CLASS(UUIAPI_ITEMWINDOW,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_ITEMWINDOW)
};


class NWINDOW_API UUIAPI_LISTCTRL : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execShowScrollBar);
    DECLARE_FUNCTION(execSetSelectedIndex);
    DECLARE_FUNCTION(execGetSelectedIndex);
    DECLARE_FUNCTION(execGetRecordCount);
    DECLARE_FUNCTION(execDeleteRecord);
    DECLARE_FUNCTION(execDeleteAllItem);
    DECLARE_FUNCTION(execModifyRecord);
    DECLARE_FUNCTION(execInsertRecord);
    DECLARE_CLASS(UUIAPI_LISTCTRL,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_LISTCTRL)
};


class NWINDOW_API UUIAPI_MINIMAPCTRL : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execResetMinimapData);
    DECLARE_FUNCTION(execShowCertainLayer);
    DECLARE_FUNCTION(execDeleteAllCursedWeaponIcon);
    DECLARE_FUNCTION(execIsOverlapped);
    DECLARE_FUNCTION(execRequestReduceBtn);
    DECLARE_FUNCTION(execDrawGridIcon);
    DECLARE_FUNCTION(execSetSSQStatus);
    DECLARE_FUNCTION(execSetDailyQuest);
    DECLARE_FUNCTION(execSetShowQuest);
    DECLARE_FUNCTION(execDeleteAllTarget);
    DECLARE_FUNCTION(execDeleteTarget);
    DECLARE_FUNCTION(execAddTarget);
    DECLARE_FUNCTION(execAdjustMapView);
    DECLARE_CLASS(UUIAPI_MINIMAPCTRL,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_MINIMAPCTRL)
};


class NWINDOW_API UUIAPI_MULTIEDITBOX : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execSetString);
    DECLARE_FUNCTION(execGetString);
    DECLARE_CLASS(UUIAPI_MULTIEDITBOX,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_MULTIEDITBOX)
};


class NWINDOW_API UUIAPI_MULTISELLITEMINFO : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execSetItemInfo);
    DECLARE_CLASS(UUIAPI_MULTISELLITEMINFO,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_MULTISELLITEMINFO)
};


class NWINDOW_API UUIAPI_MULTISELLNEEDEDITEM : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execAddData);
    DECLARE_CLASS(UUIAPI_MULTISELLNEEDEDITEM,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_MULTISELLNEEDEDITEM)
};


class NWINDOW_API UUIAPI_SHORTCUTITEMWINDOW : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execGetShortcutItem);
    DECLARE_FUNCTION(execAddShortcutItem);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execUpdateShortcut);
    DECLARE_CLASS(UUIAPI_SHORTCUTITEMWINDOW,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_SHORTCUTITEMWINDOW)
};


class NWINDOW_API UUIAPI_SLIDERCTRL : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execGetTotalTickCount);
    DECLARE_FUNCTION(execSetCurrentTick);
    DECLARE_FUNCTION(execGetCurrentTick);
    DECLARE_CLASS(UUIAPI_SLIDERCTRL,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_SLIDERCTRL)
};


class NWINDOW_API UUIAPI_STATUSBARCTRL : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execSetRegenInfo);
    DECLARE_FUNCTION(execSetPointExpPercentRate);
    DECLARE_FUNCTION(execSetPointPercent);
    DECLARE_FUNCTION(execSetPoint);
    DECLARE_CLASS(UUIAPI_STATUSBARCTRL,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_STATUSBARCTRL)
};


class NWINDOW_API UUIAPI_STATUSICONCTRL : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execAddCol);
    DECLARE_FUNCTION(execAddRow);
    DECLARE_CLASS(UUIAPI_STATUSICONCTRL,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_STATUSICONCTRL)
};


class NWINDOW_API UUIAPI_TEXTBOX : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execSetTooltipString);
    DECLARE_FUNCTION(execGetText);
    DECLARE_FUNCTION(execSetInt);
    DECLARE_FUNCTION(execSetAlign);
    DECLARE_FUNCTION(execSetText);
    DECLARE_FUNCTION(execSetTextColor);
    DECLARE_CLASS(UUIAPI_TEXTBOX,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_TEXTBOX)
};


class NWINDOW_API UUIAPI_TEXTLISTBOX : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execAddString);
    DECLARE_CLASS(UUIAPI_TEXTLISTBOX,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_TEXTLISTBOX)
};


class NWINDOW_API UUIAPI_TEXTURECTRL : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execGetTextureName);
    DECLARE_FUNCTION(execSetTextureWithObject);
    DECLARE_FUNCTION(execSetTextureWithClanCrest);
    DECLARE_FUNCTION(execSetTextureCtrlType);
    DECLARE_FUNCTION(execSetTexture);
    DECLARE_FUNCTION(execSetUV);
    DECLARE_CLASS(UUIAPI_TEXTURECTRL,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_TEXTURECTRL)
};


class NWINDOW_API UUIAPI_TREECTRL : public UUIAPI_WINDOW
{
public:
    DECLARE_FUNCTION(execSetNodeItemTexture);
    DECLARE_FUNCTION(execSetNodeItemText);
    DECLARE_FUNCTION(execShowScrollBar);
    DECLARE_FUNCTION(execGetParentNode);
    DECLARE_FUNCTION(execGetChildNode);
    DECLARE_FUNCTION(execIsExpandedNode);
    DECLARE_FUNCTION(execIsNodeNameExist);
    DECLARE_FUNCTION(execDeleteNode);
    DECLARE_FUNCTION(execGetExpandedNode);
    DECLARE_FUNCTION(execSetExpandedNode);
    DECLARE_FUNCTION(execClear);
    DECLARE_FUNCTION(execInsertNodeItem);
    DECLARE_FUNCTION(execInsertNode);
    DECLARE_CLASS(UUIAPI_TREECTRL,UUIAPI_WINDOW,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIAPI_TREECTRL)
};


class NWINDOW_API UUnionActionAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execRequestUnionStart);
    DECLARE_FUNCTION(execRequestUnionSummon);
    DECLARE_FUNCTION(execRequestUnionAdjust);
    DECLARE_FUNCTION(execRequestUnionRequest);
    DECLARE_FUNCTION(execRequestUnionWithdraw);
    DECLARE_FUNCTION(execRequestUnionChange);
    DECLARE_FUNCTION(execRequestUnionJoin);
    DECLARE_CLASS(UUnionActionAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUnionActionAPI)
};


class NWINDOW_API UVehicleAPI : public UUIEventManager
{
public:
    DECLARE_FUNCTION(execAirShipMoveDown);
    DECLARE_FUNCTION(execAirShipMoveUp);
    DECLARE_FUNCTION(execRequestExAirShipTeleport);
    DECLARE_FUNCTION(execGetVehicle);
    DECLARE_CLASS(UVehicleAPI,UUIEventManager,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UVehicleAPI)
};


class NWINDOW_API UGFxMovieView : public UInteractions
{
public:
    DECLARE_CLASS(UGFxMovieView,UInteractions,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UGFxMovieView)
};


class NWINDOW_API UArenaAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestMatchGroupChangeMaster);
    DECLARE_FUNCTION(execRequestMatchGroupOust);
    DECLARE_FUNCTION(execRequestMatchGroupWithdraw);
    DECLARE_FUNCTION(execRequestMatchGroupAnswer);
    DECLARE_FUNCTION(execRequestMatchGroupAsk);
    DECLARE_FUNCTION(execRequestMatchGroup);
    DECLARE_CLASS(UArenaAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UArenaAPI)
};


class NWINDOW_API UAuctionAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestInfoItemAuction);
    DECLARE_FUNCTION(execRequestBidItemAuction);
    DECLARE_CLASS(UAuctionAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UAuctionAPI)
};


class NWINDOW_API UAudioAPI : public UObject
{
public:
    DECLARE_FUNCTION(execPlayIndexedNotifySound);
    DECLARE_FUNCTION(execPlayNotifySound);
    DECLARE_FUNCTION(execPlayVoice);
    DECLARE_FUNCTION(execStopMusic);
    DECLARE_FUNCTION(execPlayMusic);
    DECLARE_FUNCTION(execPlaySound);
    DECLARE_CLASS(UAudioAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UAudioAPI)
};


class NWINDOW_API UCommandChannelAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestCommandChannelPartyMembersInfo);
    DECLARE_FUNCTION(execRequestCommandChannelWithdraw);
    DECLARE_FUNCTION(execRequestCommandChannelBanParty);
    DECLARE_FUNCTION(execRequestCommandChannelInfo);
    DECLARE_CLASS(UCommandChannelAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UCommandChannelAPI)
};


class NWINDOW_API UConsignmentSaleAPI : public UObject
{
public:
    DECLARE_FUNCTION(execGetCommissionSellerID);
    DECLARE_FUNCTION(execRequestCommissionRegisteredItem);
    DECLARE_FUNCTION(execRequestCommissionBuyItem);
    DECLARE_FUNCTION(execRequestCommissionBuyInfo);
    DECLARE_FUNCTION(execRequestCommissionList);
    DECLARE_FUNCTION(execRequestCommissionDelete);
    DECLARE_FUNCTION(execRequestCommissionCancel);
    DECLARE_FUNCTION(execRequestCommissionRegister);
    DECLARE_FUNCTION(execRequestCommissionSellingPremiumItemList);
    DECLARE_FUNCTION(execRequestCommissionRegistrableItemList);
    DECLARE_FUNCTION(execRequestCommissionInfo);
    DECLARE_CLASS(UConsignmentSaleAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UConsignmentSaleAPI)
};


class NWINDOW_API UGraphicAPI : public UObject
{
public:
    DECLARE_FUNCTION(execDoFResume);
    DECLARE_FUNCTION(execDoFPause);
    DECLARE_FUNCTION(execDoFSetEndDistance);
    DECLARE_FUNCTION(execDoFSetStartDistance);
    DECLARE_FUNCTION(execDoFSetFocusDistance);
    DECLARE_FUNCTION(execDoFSetFocusLocation);
    DECLARE_FUNCTION(execDoFSetFocusPlayer);
    DECLARE_FUNCTION(execDoFSetFocusActor);
    DECLARE_CLASS(UGraphicAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UGraphicAPI)
};


class NWINDOW_API UHennaAPI : public UObject
{
public:
    DECLARE_FUNCTION(execGetPremiumHennaPeriod);
    DECLARE_FUNCTION(execGetPremiumHennaInfo);
    DECLARE_FUNCTION(execGetHennaInfo);
    DECLARE_FUNCTION(execGetHennaInfoCount);
    DECLARE_CLASS(UHennaAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UHennaAPI)
};


class NWINDOW_API UHeroTowerAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestHeroMatchRecord);
    DECLARE_FUNCTION(execRequestWriteHeroWords);
    DECLARE_CLASS(UHeroTowerAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UHeroTowerAPI)
};


class NWINDOW_API UL2UIPacketBase : public UObject
{
public:
    DECLARE_FUNCTION(execRequestUIPacket);
    DECLARE_FUNCTION(execGetCurDecodePos);
    DECLARE_FUNCTION(execDecodeWString);
    DECLARE_FUNCTION(execDecodeString);
    DECLARE_FUNCTION(execDecodeDouble);
    DECLARE_FUNCTION(execDecodeFloat);
    DECLARE_FUNCTION(execDecodeInt64);
    DECLARE_FUNCTION(execDecodeUInt32);
    DECLARE_FUNCTION(execDecodeInt);
    DECLARE_FUNCTION(execDecodeUInt16);
    DECLARE_FUNCTION(execDecodeShort);
    DECLARE_FUNCTION(execDecodeWChar_t);
    DECLARE_FUNCTION(execDecodeChar);
    DECLARE_FUNCTION(execDecodeByte);
    DECLARE_FUNCTION(execDecodeBool);
    DECLARE_FUNCTION(execSetShort);
    DECLARE_FUNCTION(execEncodeWString);
    DECLARE_FUNCTION(execEncodeString);
    DECLARE_FUNCTION(execEncodeDouble);
    DECLARE_FUNCTION(execEncodeFloat);
    DECLARE_FUNCTION(execEncodeInt64);
    DECLARE_FUNCTION(execEncodeUInt32);
    DECLARE_FUNCTION(execEncodeInt);
    DECLARE_FUNCTION(execEncodeUInt16);
    DECLARE_FUNCTION(execEncodeShort);
    DECLARE_FUNCTION(execEncodeWChar_t);
    DECLARE_FUNCTION(execEncodeChar);
    DECLARE_FUNCTION(execEncodeByte);
    DECLARE_FUNCTION(execEncodeBool);
    DECLARE_CLASS(UL2UIPacketBase,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UL2UIPacketBase)
};


class NWINDOW_API UMiniMapAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestShowAgitSiegeInfo);
    DECLARE_FUNCTION(execRequestRaidServerInfo);
    DECLARE_FUNCTION(execRequestItemAuctionStatus);
    DECLARE_FUNCTION(execRequestRaidBossSpawnInfo);
    DECLARE_FUNCTION(execRequestSeedPhase);
    DECLARE_FUNCTION(execRequestTreasureBoxLocation);
    DECLARE_FUNCTION(execRequestCursedWeaponLocation);
    DECLARE_FUNCTION(execRequestCursedWeaponList);
    DECLARE_CLASS(UMiniMapAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UMiniMapAPI)
};


class NWINDOW_API UOlympiadAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestExOlympiadMatchMakingCancel);
    DECLARE_FUNCTION(execRequestExOlympiadMatchMaking);
    DECLARE_FUNCTION(execRequestExOlympiadWatchGame);
    DECLARE_FUNCTION(execRequestOlympiadMatchList);
    DECLARE_FUNCTION(execRequestOlympiadObserverEnd);
    DECLARE_CLASS(UOlympiadAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UOlympiadAPI)
};


class NWINDOW_API UPartyMatchAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestMpccPartymasterList);
    DECLARE_FUNCTION(execRequestWithdrawMpccRoom);
    DECLARE_FUNCTION(execRequestDismissMpccRoom);
    DECLARE_FUNCTION(execRequestOustFromMpccRoom);
    DECLARE_FUNCTION(execRequestJoinMpccRoom);
    DECLARE_FUNCTION(execRequestManageMpccRoom);
    DECLARE_FUNCTION(execRequestListMpccWaiting);
    DECLARE_FUNCTION(execRequestPartyMatchingHistory);
    DECLARE_FUNCTION(execRequestAskJoinPartyRoom);
    DECLARE_FUNCTION(execRequestExitPartyMatchingWaitingRoom);
    DECLARE_FUNCTION(execRequestPartyMatchWaitList);
    DECLARE_FUNCTION(execRequestBanFromPartyRoom);
    DECLARE_FUNCTION(execRequestWithdrawPartyRoom);
    DECLARE_FUNCTION(execRequestDismissPartyRoom);
    DECLARE_FUNCTION(execRequestManagePartyRoom);
    DECLARE_FUNCTION(execRequestJoinPartyRoomAuto);
    DECLARE_FUNCTION(execRequestJoinPartyRoom);
    DECLARE_FUNCTION(execRequestPartyRoomList);
    DECLARE_FUNCTION(execRequestOpenPartyMatch);
    DECLARE_CLASS(UPartyMatchAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UPartyMatchAPI)
};


class NWINDOW_API UPetitionAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestPetitionFeedBack);
    DECLARE_FUNCTION(execRequestPetition);
    DECLARE_FUNCTION(execRequestPetitionCancel);
    DECLARE_CLASS(UPetitionAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UPetitionAPI)
};


class NWINDOW_API UQuestAPI : public UObject
{
public:
    DECLARE_FUNCTION(execSetQuestTargetInfo);
    DECLARE_FUNCTION(execRequestDestroyQuest);
    DECLARE_FUNCTION(execRequestQuestList);
    DECLARE_CLASS(UQuestAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UQuestAPI)
};


class NWINDOW_API USceneEditorAPI : public UObject
{
public:
    DECLARE_FUNCTION(execSetSceneInfoAttribute);
    DECLARE_FUNCTION(execSaveCurSceneTimeAndDesc);
    DECLARE_FUNCTION(execGetCurScenePlayRate);
    DECLARE_FUNCTION(execGetCurSceneTimeAndDesc);
    DECLARE_FUNCTION(execSaveSceneData);
    DECLARE_FUNCTION(execLoadSceneData);
    DECLARE_FUNCTION(execReloadSceneData);
    DECLARE_FUNCTION(execIsReloadSceneData);
    DECLARE_FUNCTION(execCopyScene);
    DECLARE_FUNCTION(execDeleteScene);
    DECLARE_FUNCTION(execAddScene);
    DECLARE_FUNCTION(execPlayScene);
    DECLARE_FUNCTION(execInitSceneEditorData);
    DECLARE_CLASS(USceneEditorAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(USceneEditorAPI)
};


class NWINDOW_API USiegeAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestPledgeMercenaryMemberJoin);
    DECLARE_FUNCTION(execRequestPledgeMercenaryRecruitInfoSet);
    DECLARE_FUNCTION(execRequestPledgeMercenaryMemberList);
    DECLARE_FUNCTION(execRequestMCWCastleSiegeDefenderList);
    DECLARE_FUNCTION(execRequestMCWCastleSiegeAttackerList);
    DECLARE_FUNCTION(execRequestMCWCastleSiegeInfo);
    DECLARE_FUNCTION(execRequestMCWCastleInfo);
    DECLARE_FUNCTION(execRequestSetCastleSiegeTime);
    DECLARE_FUNCTION(execRequestConfirmCastleSiegeWaitingList);
    DECLARE_FUNCTION(execRequestJoinCastleSiege);
    DECLARE_FUNCTION(execRequestCastleSiegeDefenderList);
    DECLARE_FUNCTION(execRequestCastleSiegeAttackerList);
    DECLARE_CLASS(USiegeAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(USiegeAPI)
};


class NWINDOW_API USSAOAPI : public UObject
{
public:
    DECLARE_FUNCTION(execSSAO_BlurNormalDifference);
    DECLARE_FUNCTION(execSSAO_BlurDepthDifference);
    DECLARE_FUNCTION(execSSAO_BlurIntensity);
    DECLARE_FUNCTION(execSSAO_SampleDistance);
    DECLARE_FUNCTION(execSSAO_NoiseScale);
    DECLARE_FUNCTION(execSSAO_DepthDifference);
    DECLARE_FUNCTION(execSSAO_FadeFront);
    DECLARE_FUNCTION(execSSAO_MaxIntensity);
    DECLARE_FUNCTION(execSSAO_Strength);
    DECLARE_FUNCTION(execSSAO_Blend);
    DECLARE_FUNCTION(execSSAO_Level);
    DECLARE_CLASS(USSAOAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(USSAOAPI)
};


class NWINDOW_API USSQAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestSSQStatus);
    DECLARE_CLASS(USSQAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(USSQAPI)
};


class NWINDOW_API UTutorialAPI : public UObject
{
public:
    DECLARE_FUNCTION(execRequestExSetTutorial);
    DECLARE_CLASS(UTutorialAPI,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UTutorialAPI)
};


class NWINDOW_API UUIDATA_REFINERYOPTION : public UObject
{
public:
    DECLARE_FUNCTION(execGetOptionDescription);
    DECLARE_FUNCTION(execGetQuality);
    DECLARE_CLASS(UUIDATA_REFINERYOPTION,UObject,0,NWindow)
    NO_DEFAULT_CONSTRUCTOR(UUIDATA_REFINERYOPTION)
};

#endif

AUTOGENERATE_FUNCTION(UActionAPI,-1,execGetActionUIData);
AUTOGENERATE_FUNCTION(UActionAPI,-1,execGetActionAutomaticUseType);
AUTOGENERATE_FUNCTION(UActionAPI,-1,execGetActionNameBySocialIndex);
AUTOGENERATE_FUNCTION(UActionAPI,-1,execRequestSummonedAllSkillActionList);
AUTOGENERATE_FUNCTION(UActionAPI,-1,execRequestSummonedCommonActionList);
AUTOGENERATE_FUNCTION(UActionAPI,-1,execRequestPetActionList);
AUTOGENERATE_FUNCTION(UActionAPI,-1,execRequestActionList);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execGetUIState);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execSMessageBox);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execMessageBox);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execSetUIState);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execRegisterState);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execRegisterEvent);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execItemInfoToParam);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execParamToItemInfo);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execParseFloat);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execParseINT64);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execParseInt);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execParseString);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execParamAddINT64);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execParamAdd);
AUTOGENERATE_FUNCTION(UUIEventManager,-1,execExecuteEvent);
AUTOGENERATE_FUNCTION(UAnimTextureHandle,-1,execStop);
AUTOGENERATE_FUNCTION(UAnimTextureHandle,-1,execPause);
AUTOGENERATE_FUNCTION(UAnimTextureHandle,-1,execPlay);
AUTOGENERATE_FUNCTION(UAnimTextureHandle,-1,execSetTimes);
AUTOGENERATE_FUNCTION(UAnimTextureHandle,-1,execSetLoopCount);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execSetColorModify);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execGetColor);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execSetRotatingDirection);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execSetAutoRotateType);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execGetTextureName);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execSetTextureWithObject);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execSetTextureWithClanCrest);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execSetTextureCtrlType);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execSetTextureSize);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execSetUV);
AUTOGENERATE_FUNCTION(UTextureHandle,-1,execSetTexture);
AUTOGENERATE_FUNCTION(UArenaAPI,-1,execRequestMatchGroupChangeMaster);
AUTOGENERATE_FUNCTION(UArenaAPI,-1,execRequestMatchGroupOust);
AUTOGENERATE_FUNCTION(UArenaAPI,-1,execRequestMatchGroupWithdraw);
AUTOGENERATE_FUNCTION(UArenaAPI,-1,execRequestMatchGroupAnswer);
AUTOGENERATE_FUNCTION(UArenaAPI,-1,execRequestMatchGroupAsk);
AUTOGENERATE_FUNCTION(UArenaAPI,-1,execRequestMatchGroup);
AUTOGENERATE_FUNCTION(UAuctionAPI,-1,execRequestInfoItemAuction);
AUTOGENERATE_FUNCTION(UAuctionAPI,-1,execRequestBidItemAuction);
AUTOGENERATE_FUNCTION(UAudioAPI,-1,execPlayIndexedNotifySound);
AUTOGENERATE_FUNCTION(UAudioAPI,-1,execPlayNotifySound);
AUTOGENERATE_FUNCTION(UAudioAPI,-1,execPlayVoice);
AUTOGENERATE_FUNCTION(UAudioAPI,-1,execStopMusic);
AUTOGENERATE_FUNCTION(UAudioAPI,-1,execPlayMusic);
AUTOGENERATE_FUNCTION(UAudioAPI,-1,execPlaySound);
AUTOGENERATE_FUNCTION(UBarHandle,-1,execSetTexture);
AUTOGENERATE_FUNCTION(UBarHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UBarHandle,-1,execGetValue);
AUTOGENERATE_FUNCTION(UBarHandle,-1,execSetValue);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetResizeFrame);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetCurrentScalableSizeRate);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execScalingToCurrentSizeType);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execScalingToDefaultSizeType);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetUpScalableUIDefaultSetting);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetUnConditionalShow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetCanBeShownDuringScene);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetResizeFrameOffset);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execEnableDynamicAlpha);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetChildWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execInsertTooltipDrawItem);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetTooltipCalculateSize);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetShowAndHideAnimType);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsCurrentState);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execExitState);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execEnterState);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execChangeControlOrder);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execMakeBaseUC);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execConvertToEditable);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetXMLDocumentInfo);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetXMLDocumentInfo);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSaveXMLWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execLoadXMLWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetControlType);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsControlContainer);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetScript);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetBackTexture);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execDeleteChildWnd);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetClassName);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execAddChildWnd);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetEditable);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execInitRotation);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsFront);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execClearRotation);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execRotate);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetSettledWnd);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetScrollUnit);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetScrollHeight);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetScrollHeight);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetScrollPosition);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetScrollPosition);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetScrollBarPosition);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetResizeFrameSize);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetFrameSize);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execClearAllChildShortcutItemTooltip);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execClearTooltip);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetTooltipCustomType);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetTooltipCustomType);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetTooltipType);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetTooltipText);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetTooltipText);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execNotifyAlarm);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execKillTimer);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetTimer);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execBringToFront);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execBringToFrontOf);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execReleaseFocus);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsFocused);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetFocus);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsEnableWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execDisableWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execEnableWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetDragOverTexture);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetVirtualDrag);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsVirtualDrag);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetStuckable);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetDraggable);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsDraggable);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsAnchored);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execClearAnchor);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetAnchor);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execDisableTick);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execEnableTick);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execMoveShake);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execMoveExWithTime);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execMoveC);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execMoveEx);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execMoveTo);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execMove);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsRelativeSize);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetWindowSizeRel43);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetWindowSizeRel);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetWindowSizeRel);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetWindowSize);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetWindowSize);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execAddWindowSize);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetRect);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetModal);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetAlwaysFullAlpha);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetFontColor);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsAlwaysOnBack);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsAlwaysOnTop);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsVirtual);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetScriptName);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetScript);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetAlpha);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetAlpha);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetTopFrameWnd);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsChildOf);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetChildWindowList);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetParentWindowHandle);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execChangeParentWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetParentWindowName);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execGetWindowName);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsMinimizedWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execIsShowWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execHideWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execShowWindow);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetTitlePosOffset);
AUTOGENERATE_FUNCTION(UWindowHandle,-1,execSetWindowTitle);
AUTOGENERATE_FUNCTION(UBookMarkAPI,-1,execRequestGetBookMarkPos);
AUTOGENERATE_FUNCTION(UBookMarkAPI,-1,execRequestChangeBookMarkSlot);
AUTOGENERATE_FUNCTION(UBookMarkAPI,-1,execRequestTelePortBookMark);
AUTOGENERATE_FUNCTION(UBookMarkAPI,-1,execRequestDeleteBookMarkSlot);
AUTOGENERATE_FUNCTION(UBookMarkAPI,-1,execRequestModifyBookMarkSlot);
AUTOGENERATE_FUNCTION(UBookMarkAPI,-1,execRequestSaveBookMarkSlot);
AUTOGENERATE_FUNCTION(UBookMarkAPI,-1,execRequestShowBookMark);
AUTOGENERATE_FUNCTION(UBookMarkAPI,-1,execRequestBookMarkSlotInfo);
AUTOGENERATE_FUNCTION(UButtonHandle,-1,execSetDefaultTextDisableColor);
AUTOGENERATE_FUNCTION(UButtonHandle,-1,execSetDefaultTextEnableColor);
AUTOGENERATE_FUNCTION(UButtonHandle,-1,execSetEnable);
AUTOGENERATE_FUNCTION(UButtonHandle,-1,execSetButtonValue);
AUTOGENERATE_FUNCTION(UButtonHandle,-1,execGetButtonValue);
AUTOGENERATE_FUNCTION(UButtonHandle,-1,execIsMouseOver);
AUTOGENERATE_FUNCTION(UButtonHandle,-1,execSetTexture);
AUTOGENERATE_FUNCTION(UButtonHandle,-1,execSetNameText);
AUTOGENERATE_FUNCTION(UButtonHandle,-1,execSetButtonName);
AUTOGENERATE_FUNCTION(UButtonHandle,-1,execGetButtonName);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSetBackgroundTex);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execApplyPreviewCostumeItem);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSetNPCViewportData);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSetSpawnDuration);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSetCameraDistance);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSetCurrentRotation);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSetDragRotationRate);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSetNPCInfo);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execHideNPC);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execShowNPC);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execAutoAttacking);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execPlayAttackAnimation);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execPlayAnimation);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSetCharacterOffset);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSetCharacterOffsetZ);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSetUISound);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSpawnEffect);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSpawnNPC);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSetCharacterOffsetY);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSetCharacterOffsetX);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execSetCharacterScale);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execEndZoom);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execStartZoom);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execEndRotation);
AUTOGENERATE_FUNCTION(UCharacterViewportWindowHandle,-1,execStartRotation);
AUTOGENERATE_FUNCTION(UChatWindowHandle,-1,execISScrollable);
AUTOGENERATE_FUNCTION(UChatWindowHandle,-1,execEnableTexture);
AUTOGENERATE_FUNCTION(UTextListBoxHandle,-1,execSetFontIDByName);
AUTOGENERATE_FUNCTION(UTextListBoxHandle,-1,execSetTextListBoxScrollPosition);
AUTOGENERATE_FUNCTION(UTextListBoxHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UTextListBoxHandle,-1,execAddStringToChatWindow);
AUTOGENERATE_FUNCTION(UTextListBoxHandle,-1,execAddString);
AUTOGENERATE_FUNCTION(UCheckBoxHandle,-1,execToggleDisable);
AUTOGENERATE_FUNCTION(UCheckBoxHandle,-1,execSetDisable);
AUTOGENERATE_FUNCTION(UCheckBoxHandle,-1,execIsDisable);
AUTOGENERATE_FUNCTION(UCheckBoxHandle,-1,execIsChecked);
AUTOGENERATE_FUNCTION(UCheckBoxHandle,-1,execSetCheck);
AUTOGENERATE_FUNCTION(UCheckBoxHandle,-1,execSetTitle);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execGetAdditionalString);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execAddStringWithIconWithGapWithStr);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execAddStringWithIconWithStr);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execAddStringWithIconWithGap);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execAddStringWithIcon);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execAddStringWithFileExt);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execGetFileExtInfo);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execAddStringWithColor);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execGetNumOfItems);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execSetSelectedNum);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execGetSelectedNum);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execGetReserved);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execGetString);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execSYS_AddStringWithReserved);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execAddStringWithReserved);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execSYS_AddString);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execAddStringWithGap);
AUTOGENERATE_FUNCTION(UComboBoxHandle,-1,execAddString);
AUTOGENERATE_FUNCTION(UCommandChannelAPI,-1,execRequestCommandChannelPartyMembersInfo);
AUTOGENERATE_FUNCTION(UCommandChannelAPI,-1,execRequestCommandChannelWithdraw);
AUTOGENERATE_FUNCTION(UCommandChannelAPI,-1,execRequestCommandChannelBanParty);
AUTOGENERATE_FUNCTION(UCommandChannelAPI,-1,execRequestCommandChannelInfo);
AUTOGENERATE_FUNCTION(UConsignmentSaleAPI,-1,execGetCommissionSellerID);
AUTOGENERATE_FUNCTION(UConsignmentSaleAPI,-1,execRequestCommissionRegisteredItem);
AUTOGENERATE_FUNCTION(UConsignmentSaleAPI,-1,execRequestCommissionBuyItem);
AUTOGENERATE_FUNCTION(UConsignmentSaleAPI,-1,execRequestCommissionBuyInfo);
AUTOGENERATE_FUNCTION(UConsignmentSaleAPI,-1,execRequestCommissionList);
AUTOGENERATE_FUNCTION(UConsignmentSaleAPI,-1,execRequestCommissionDelete);
AUTOGENERATE_FUNCTION(UConsignmentSaleAPI,-1,execRequestCommissionCancel);
AUTOGENERATE_FUNCTION(UConsignmentSaleAPI,-1,execRequestCommissionRegister);
AUTOGENERATE_FUNCTION(UConsignmentSaleAPI,-1,execRequestCommissionSellingPremiumItemList);
AUTOGENERATE_FUNCTION(UConsignmentSaleAPI,-1,execRequestCommissionRegistrableItemList);
AUTOGENERATE_FUNCTION(UConsignmentSaleAPI,-1,execRequestCommissionInfo);
AUTOGENERATE_FUNCTION(UDrawPanelHandle,-1,execSetMiddleAlign);
AUTOGENERATE_FUNCTION(UDrawPanelHandle,-1,execPreCheckPanelSize);
AUTOGENERATE_FUNCTION(UDrawPanelHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UDrawPanelHandle,-1,execInsertDrawItem);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSetIME);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSetAsChatEditBox);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSetVAlign);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSetAlign);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execGetFormatString);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSetFormatString);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execAddEmojiIcon);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execIsEmpty);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSetUnFocusedBackTexture);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSetFocusedBackTexture);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execDeleteClipBoard);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execIsShowCandidateBox);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSetDownList);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execAddItemToAutoCompleteHistory);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execDeleteNameFromAdditionalSearchList);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execClearAdditionalSearchList);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execFillAdditionalSearchList);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execAddNameToAdditionalSearchList);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execAllSelect);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execClearHistory);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSetEnableTextLink);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execGetMaxLength);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSetMaxLength);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSetHighLight);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSetEditType);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSimulateBackspace);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execAddString);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execSetString);
AUTOGENERATE_FUNCTION(UEditBoxHandle,-1,execGetString);
AUTOGENERATE_FUNCTION(UEffectViewportWndHandle,-1,execSpawnEffect);
AUTOGENERATE_FUNCTION(UEffectViewportWndHandle,-1,execSetCameraYaw);
AUTOGENERATE_FUNCTION(UEffectViewportWndHandle,-1,execSetCameraPitch);
AUTOGENERATE_FUNCTION(UEffectViewportWndHandle,-1,execSetCameraDistance);
AUTOGENERATE_FUNCTION(UEffectViewportWndHandle,-1,execSetOffset);
AUTOGENERATE_FUNCTION(UEffectViewportWndHandle,-1,execSetScale);
AUTOGENERATE_FUNCTION(UEnchantAPI,-1,execRequestUnlockedItemCancel);
AUTOGENERATE_FUNCTION(UEnchantAPI,-1,execRequestUnlockedItem);
AUTOGENERATE_FUNCTION(UEnchantAPI,-1,execRequestLockedItemCancel);
AUTOGENERATE_FUNCTION(UEnchantAPI,-1,execRequestLockedItem);
AUTOGENERATE_FUNCTION(UEnchantAPI,-1,execRequestExCancelEnchantItem);
AUTOGENERATE_FUNCTION(UEnchantAPI,-1,execRequestExRemoveEnchantSupportItem);
AUTOGENERATE_FUNCTION(UEnchantAPI,-1,execRequestExAddEnchantScrollItem);
AUTOGENERATE_FUNCTION(UEnchantAPI,-1,execRequestExTryToPutEnchantSupportItem);
AUTOGENERATE_FUNCTION(UEnchantAPI,-1,execRequestExTryToPutEnchantTargetItem);
AUTOGENERATE_FUNCTION(UEnchantAPI,-1,execRequestRemoveAttribute);
AUTOGENERATE_FUNCTION(UEnchantAPI,-1,execRequestEnchantItemAttribute);
AUTOGENERATE_FUNCTION(UEnchantAPI,-1,execRequestEnchantItem);
AUTOGENERATE_FUNCTION(UEnsoulAPI,-1,execRequestItemExtraction);
AUTOGENERATE_FUNCTION(UEnsoulAPI,-1,execRequestItemEnsoul);
AUTOGENERATE_FUNCTION(UEventMatchAPI,-1,execRequestEventMatchObserverEnd);
AUTOGENERATE_FUNCTION(UEventMatchAPI,-1,execSetSelectedUser);
AUTOGENERATE_FUNCTION(UEventMatchAPI,-1,execGetUserData);
AUTOGENERATE_FUNCTION(UEventMatchAPI,-1,execGetPartyMemberCount);
AUTOGENERATE_FUNCTION(UEventMatchAPI,-1,execGetTeamName);
AUTOGENERATE_FUNCTION(UEventMatchAPI,-1,execGetScore);
AUTOGENERATE_FUNCTION(UEventMatchAPI,-1,execGetEventMatchData);
AUTOGENERATE_FUNCTION(UFileListAPI,-1,execShowFlash);
AUTOGENERATE_FUNCTION(UFileListAPI,-1,execGetDriveInfoList);
AUTOGENERATE_FUNCTION(UFileListAPI,-1,execGetFileInfoList);
AUTOGENERATE_FUNCTION(UFlashCtrlHandle,-1,execInvoke);
AUTOGENERATE_FUNCTION(UFlashCtrlHandle,-1,execSetFlashFile);
AUTOGENERATE_FUNCTION(UFlashCtrlHandle,-1,execGotoFrame);
AUTOGENERATE_FUNCTION(UFlashCtrlHandle,-1,execGetCurrentFrame);
AUTOGENERATE_FUNCTION(UFlashCtrlHandle,-1,execGetTotalFrameCnt);
AUTOGENERATE_FUNCTION(UFlashCtrlHandle,-1,execStop);
AUTOGENERATE_FUNCTION(UFlashCtrlHandle,-1,execPause);
AUTOGENERATE_FUNCTION(UFlashCtrlHandle,-1,execPlay);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetCanBeShownDuringScene);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execKillTimer);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetTimer);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execGetUserPremiumLevel);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetEulaText);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSendCommandToServer);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execForceToMoveMousePos);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetHUD);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetClosingOnESC);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execGetAnchorPointFromWindow);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetGFxFromSavedInfo);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execIsSavedInfo);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execUnsetRotateCursor);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetRotateCursor);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetAlwaysOnTop);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetModal);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetNextFocus);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetHasGFxTextField);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execHasTextField);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetStateChangeNotification);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetContainer);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetRestartableFlash);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetSaveWnd);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execApplyFixedPositionRate);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetFixedPositionRate);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetAnchor);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execFlashMoviePlayEnd);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execFlashMoviePlayStart);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetHavingFocus);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execIgnoreUIEvent);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execMakeRenderToTexture);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execBringToFront);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execBringToFrontOf);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetFocus);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execIsShowWindow);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execHideWindow);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execShowWindow);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetDefaultShow);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetRenderOnTop);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetAlwaysFullAlpha);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execSetMsgPassThrough);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execGetFunction);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execGetVariable);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execRegisterDelegateHandler);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execDeallocGFxValue);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execAllocGFxValue);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execDeallocGFxValues);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execAllocGFxValues);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execInvoke);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execCreateArray);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execCreateObject);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execShowFlashFromFilePath);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execRegisterState);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execRegisterGFxEvent);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execRegisterGFxEventForLoaded);
AUTOGENERATE_FUNCTION(UGFxUIScript,-1,execRegisterEvent);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSkillAcquireList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSkillSubLevelList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetEnchantExpItemListFromInven);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetNQuestNpcPortraitData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetNQuestDialogData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetNQuestData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClientCursorPos);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanUnregisterCrestByPledgeID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanRegisterCrestPreset);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPledgeCrestPresetData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetItemExchangeMultisellData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsPrivateStoreBypass);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetUniqueGachaCostInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetUniqueGachaGameTypeInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetUniqueGachaRewardItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetUniqueGachaShowItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetUniqueGachaVideo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetUniqueGachaVideo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execJapanPolicyCheck);
AUTOGENERATE_FUNCTION(UUIScript,-1,execOpenWebSite);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetRecoveryCouponData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPrisonDataList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPrisonData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSiegePointAlarms);
AUTOGENERATE_FUNCTION(UUIScript,-1,execConvertFloatToString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetServerPrivateStoreSearchItemSubType);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetWorldExchangeData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetBRWorldExchange);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMissionLevelData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetBalrogwarData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsInTimeRestrictField);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMagicLampAdvancedResultItemList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMagicLampNormalResultItemList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetEventHtmlString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetL2PassAdvanceInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetL2PassPremiumPassCost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetL2PassAdvanceFreeCount);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetL2PassLastItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetL2PassMaxCount);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetL2PassRewardStepMaxCount);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetL2PassHuntingMaxTime);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetL2PassRewardTotalList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetL2PassReward);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsPlayerOnOlympiad);
AUTOGENERATE_FUNCTION(UUIScript,-1,execAddPledgeInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetWorldCastleWarMapInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDisassembleItemInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetNickNameIconImage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetNickNameItemData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetServerMarkName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDethroneDistrictName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDethroneCategory);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDethroneDailyMissionData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDethroneChangeNameCost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDethroneConnectCost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPurchaseLimitCraftData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSubjugationList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetGeneralEffectName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCharacterAbilityData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCollectionOptionName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCompletePeriodCollection);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCollectionOption);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCollectionCount);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCollectionInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsCollectionRegistEnableItemWithReason);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsCollectionRegistEnableItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCollectionIdByItemId);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCollectionIdByItemName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCollectionMainData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCollectionData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSteadyBoxSlotInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSteadyBoxString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRankingFestivalBonus);
AUTOGENERATE_FUNCTION(UUIScript,-1,execLoginWaitState);
AUTOGENERATE_FUNCTION(UUIScript,-1,execStartLoginState);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPledgeLevelData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execConvertWorldIDToStr);
AUTOGENERATE_FUNCTION(UUIScript,-1,execConvertWorldStrToID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestEnemyPledgeRegister);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPledgeDonationData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMagicLampMaxCharge);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMaxElixir);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMableGameEventData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMableGameCellData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetMPlayerClientVar);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSharedPositionData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsAssassinClass);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsOrcRiderClass);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsDeathFighterClass);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsDeathKnightClass);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestMPlayerPush);
AUTOGENERATE_FUNCTION(UUIScript,-1,execUseContents);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetLevelUpItemMagicalDefenseBonus);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetLevelUpItemPhysicalDefenseBonus);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetLevelUpItemMagicalDamageBonus);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetLevelUpItemPhysicalDamageBonus);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetStatBonusResetData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetStatBonusNameData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetLetterCollectData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAuthLoginForTCLS);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsTencentLoginSystem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsFinalRelease);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestMyRankingHistory);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetRankingGrade);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetRankingRewardSkillID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRankingCharRankers);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRankingCharInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTimeRestrictFieldInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestEnterTimeRestrictField);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestTimeRestrictFieldList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestGachaShopGachaItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestGachaShopGachaGroup);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestGachaShopInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetGachaShopGroupDataAll);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetGachaShopGroupData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetGachaShopData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPledgeShopProductData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetLCoinShopBannerData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetLCoinShopProductData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execUpdateAutoplaySetting);
AUTOGENERATE_FUNCTION(UUIScript,-1,execResetCounterAttackList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSelectCounterAttackTarget);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPaybackGiveReward);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPaybackList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestMagicLampGameStart);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestMagicLampGameInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestOpenWndWithoutNPC);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestFestivalGame);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestFestivalInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsUseCostume);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetRewardCardTexName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSubTitle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPurchaseLimitShopItemBuy);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPurchaseLimitShopItemList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestEnchantArtifact);
AUTOGENERATE_FUNCTION(UUIScript,-1,execShowQuestInfoWindow);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestOlympiadRecord);
AUTOGENERATE_FUNCTION(UUIScript,-1,execFlashWindow);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetElementalSpiritExpData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestElementalSpiritInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPledgeMasteryName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPledgeItemBuy);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPledgeItemActivate);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPledgeItemInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPledgeItemList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCreatePledge);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPledgeMissionReward);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPledgeMissionInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPledgeMissionData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTutorialBody);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTutorialIndices);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSwapAgathionSlotItems);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetAgathionSubSkillList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetAgathionMainSkillList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCardUpdownGameQuit);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCardUpdownGameRetry);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCardUpdownGameRewardRequest);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCardUpdownGamePickNumber);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestUserBanInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCardReward);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestEntireCardRewardList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAccountAttendanceInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAccountAttendanceReward);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetEventAlarmDataByIndex);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetEventAlarmDataCount);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMinimapRegionIconData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBlockListForAD);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCancelWaitingQueueTicket);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsUsePledgeBonus);
AUTOGENERATE_FUNCTION(UUIScript,-1,execPledgeBonusRewardList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execPledgeBonusReward);
AUTOGENERATE_FUNCTION(UUIScript,-1,execPledgeBonusOpen);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCashShopCoinChargeForSteam);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsUseTokenLogin);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsUseSteam);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsUseAutoEquipSoulShot);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetAutoEquipShotList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSoulShotSlotClicked);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSoulShotSlotSelected);
AUTOGENERATE_FUNCTION(UUIScript,-1,execappFractional);
AUTOGENERATE_FUNCTION(UUIScript,-1,execappCeil);
AUTOGENERATE_FUNCTION(UUIScript,-1,execappFloor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execappRound);
AUTOGENERATE_FUNCTION(UUIScript,-1,execStringMatching);
AUTOGENERATE_FUNCTION(UUIScript,-1,execStringIntoArray);
AUTOGENERATE_FUNCTION(UUIScript,-1,execClipboardPaste);
AUTOGENERATE_FUNCTION(UUIScript,-1,execClipboardCopy);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMonsterBookData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMonsterBookIDs);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetFactionData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetUserFactionInfoList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestUserFactionInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCastleWarSeasonReward);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsUseToDoList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestTodoListOneDayReward);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestOneDayRewardPeriod);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestOneDayRewardDesc);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestOneDayRewardItemList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestOneDayRewardReceive);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestTodoListHTML);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestTodoListInzone);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestTodoListRecommand);
AUTOGENERATE_FUNCTION(UUIScript,-1,execQTRequestGetCurRoomInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execQTRequestEnterClanRoom);
AUTOGENERATE_FUNCTION(UUIScript,-1,execQTRequestBindClanRoom);
AUTOGENERATE_FUNCTION(UUIScript,-1,execQTRequestEnterPartyRoom);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCrossEnterEventRoom);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsUsePrivateStore);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCaptchaAnswer);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRefreshCaptchaImage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCaptchaImageTex);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsAttendanceSystemEnable);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAttendanceWndOpen);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAttendanceCheck);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRefreshRecipeOfferingRate);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsAdenServer);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsBloodyServer);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetServerType);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetAlchemySkillGradeType);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAlchemySkillList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsActivateUSMBackground);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetLoginMapType);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSwitchSingleMeshMode);
AUTOGENERATE_FUNCTION(UUIScript,-1,execProcessCommandInterPartyChatMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execProcessCommandChatMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execProcessPartyMatchChatMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execProcessPetitionChatMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsSameChatPrefix);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetChatPrefix);
AUTOGENERATE_FUNCTION(UUIScript,-1,execProcessChatMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetChatMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execChatNotificationFilter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetChatSubColorByType);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetChatColorByType);
AUTOGENERATE_FUNCTION(UUIScript,-1,execEnableChatWndResizing);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetReleaseMode);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsPlayerOnWorldRaidServer);
AUTOGENERATE_FUNCTION(UUIScript,-1,execMeasureTimeEnd);
AUTOGENERATE_FUNCTION(UUIScript,-1,execMeasureTimeStart);
AUTOGENERATE_FUNCTION(UUIScript,-1,execMeasureTimeOff);
AUTOGENERATE_FUNCTION(UUIScript,-1,execMeasureTimeOn);
AUTOGENERATE_FUNCTION(UUIScript,-1,execAddTimeData);
AUTOGENERATE_FUNCTION(UUIScript,-1,execResponsePetitionAlarm);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetUIUserPremiumLevel);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestEventCampaignHtml);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestEventCampaignScoreInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestEventCampaignProgressInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetEventContentInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsActivedBRCampaignExist);
AUTOGENERATE_FUNCTION(UUIScript,-1,execConvertBRCashShopDayWeek);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCallGFxFunction);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetAlwaysOnBack);
AUTOGENERATE_FUNCTION(UUIScript,-1,execAmILeader);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsActivedCampaignExist);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsActivedZoneQuestExist);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestLeaveObservingCuriousHouse);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestObservingCuriousHouse);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestObservingListCuriousHouse);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCuriousHouseHtml);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestLeaveCuriousHouse);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCancelCuriousHouse);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestJoinCuriousHouse);
AUTOGENERATE_FUNCTION(UUIScript,-1,execToLower);
AUTOGENERATE_FUNCTION(UUIScript,-1,execToUpper);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsNative);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestInzoneWaitingTime);
AUTOGENERATE_FUNCTION(UUIScript,-1,execHasStackableItemInInventory);
AUTOGENERATE_FUNCTION(UUIScript,-1,execHasStackableItemInWareHouse);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetClosingOnESC);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestChangeAttributeCancel);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestChangeAttributeItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSelectChangeAttributeItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetEnableGodRay);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetTestGodRayOption);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetTestBeastLightMapIntensity);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetEnvTime);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetEnableLightMapIntensity);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetEnableGammaCorrection);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetEnableWindowDefaultGamma);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetEnableGammaSetting);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetEnableHsvTerrainLight);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetEnableHsvStaticMeshLight);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetEnableHsvActorLight);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetEnableSkyBspAmbient);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetEnableSkyBoxColor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetEnableBspAmbient);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetEnableStaticMeshAmbient);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetEnableActorAmbient);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetEnableTerrainAmbient);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetTestGammaSetting);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetTestHsvTerrainLightColor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetTestHsvStaticMeshLightColor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetTestHsvActorLightColor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetTestSkyBspAmbientColor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetTestSkyBoxColor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetTestBspAmbientColor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetTestStaticMeshAmbientColor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetTestActorAmbientColor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetTestTerrainAmbientColor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execEndCredit);
AUTOGENERATE_FUNCTION(UUIScript,-1,execStartCredit);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetChinaPkString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsNewChinaLive);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsChinaClient);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCardKeyLoginCancel);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCardKeyLogin);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestFlyMoveStart);
AUTOGENERATE_FUNCTION(UUIScript,-1,execFullScreenMovieEnd);
AUTOGENERATE_FUNCTION(UUIScript,-1,execFullScreenMovieStart);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetLastLoginID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSaveLastLoginID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execAutoLogin);
AUTOGENERATE_FUNCTION(UUIScript,-1,execStopLogin);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRefuseLogin);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsUseOTP);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSortedServerInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execEulaAgree);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestGoogleOtpLogin);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSecurityCardLogin);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestLoginServer);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestLogin);
AUTOGENERATE_FUNCTION(UUIScript,-1,execExpInt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execExpFloat);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMaxVitality);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetL2Path);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDisplayWidth);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDisplayHeight);
AUTOGENERATE_FUNCTION(UUIScript,-1,execOpenMovieCaptureDir);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetMovieCaptureLowQuality);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetMovieCaptureHighQuality);
AUTOGENERATE_FUNCTION(UUIScript,-1,execMovieCaptureToggle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetMovieCaptureResolution);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsNowMovieCapturing);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAutoLogin);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestTutorialMarkPressed);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestTutorialQuestionMarkPressed);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPawnLocFromServerID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPawnNameFromServerID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPawnType);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSkillAvailability);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDynamicContentHtml);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDynamicQuestScoreInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDynamicQuestProgressInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDynamicContentInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsL2NetLoginState);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSurrenderPledgeWar);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPledgeWar);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetShortcutString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCrystallizeEstimate);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCharacterNameCreatable);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsUseEMailAccount);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsUseSecondaryAuth);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSecondaryAuthModify);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSecondaryAuthVerify);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSecondaryAuthCreate);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsUseGoodsInvnentory);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetGoodsIconName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestUseGoodsInventoryItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestGoodsInventoryItemDesc);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestGoodsInventoryItemList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetFormattedTimeStrMMHH);
AUTOGENERATE_FUNCTION(UUIScript,-1,execBR_GetDayType);
AUTOGENERATE_FUNCTION(UUIScript,-1,execBR_ConvertTimeToStr);
AUTOGENERATE_FUNCTION(UUIScript,-1,execBR_GetShowEventUI);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsUsingPrimeShop);
AUTOGENERATE_FUNCTION(UUIScript,-1,execShowCashChargeWebSite);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_MinigameInsertScore);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_MinigameLoadScores);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsBr_CashShopMainDisable);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetBr_CashShopCoinToMoneyValue);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsBr_CashShopCoinToMoney);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsBr_CashShopPresent);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBr_CashShopCateoryIndex);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsBr_CashShopCateory);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_PresentBuyProduct);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_DeleteBasketProductInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_AddBasketProductInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_RecentProductList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_BuyProduct);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_ProductInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_ProductList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_GamePoint);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_CashShopNewICon);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTexture);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetActivityUltimateSkillLevel);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestNatureRenderBlendingRate);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestNatureRenderDir);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestNatureRenderTurbidity);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestNatureRenderMie);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestNatureRenderRayleigh);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestNatureRenderIntensity);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestNatureRenderTime);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetUseHDRRenderEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetHDRRenderVal);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestFinishNPCZoomCamera);
AUTOGENERATE_FUNCTION(UUIScript,-1,execToggleReplayRec);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetMotionBlurAlpha);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetMotionBlurUse);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestMenteeWaitingList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPartyMatchWaitList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetPostEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetColorGradingVal);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetColorGradingEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetRGBVal);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetRGBConversionEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetHSVVal);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetHSVConversionEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetYCbCrVal);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetYCbCrConversionEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execOpenL2Home);
AUTOGENERATE_FUNCTION(UUIScript,-1,execOpenGivenURL);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetRadioButtonHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAddExpandQuestAlarm);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAskMemberShip);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPartyLootingModifyAgreement);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPartyLootingModify);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMyComputerPath);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDesktopPath);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMydocumentPath);
AUTOGENERATE_FUNCTION(UUIScript,-1,execAnswerCoupleAction);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDrivesInfoList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetFilesInfoList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestMoveToMerchant);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRefreshPrivateMarketInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execClearAllPrivateMarketInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestChangeDiamondMesh);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestChangeParticleEmitter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetSnowMeshScale);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetSnowSpeed);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetSnowEmitterParticleNum);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetSnowWeight);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDeleteSnowEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCreateSnowEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetRainMeshScale);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetRainSpeed);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetRainEmitterParticleNum);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetRainWeight);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetWeatherEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDeleteRainEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCreateRainEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBR_EventRankerList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetGameStateName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBuySellUIClose);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestShowPetitionAsMethod);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPetitionMethod);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetUseNewPetitionBool);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestShowStepThree);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestShowStepTwo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestShowNewUserPetition);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPostItemList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCancelSentPost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRequestSentPost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDeleteSentPost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRequestSentPostList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRejectPost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestReceivePost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRequestReceivedPost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDeleteReceivedPost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRequestReceivedPostList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSendPost);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRefundItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDominionFlagIconTex);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDominionInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestJoinDominionWar);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestStopShowCrataeCubeRank);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestStartShowCrataeCubeRank);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestWithDrawPremiumItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetNicknameColorWithIndex);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMaxNicknameColorIndexCnt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestChangeNicknameNColor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPVPMatchRecord);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestFortressMapInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestFortressSiegeInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAllAgitInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAllFortressInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAllCastleInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCharacterCreateGetClassType);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCheckValidName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCheckNameLength);
AUTOGENERATE_FUNCTION(UUIScript,-1,execDefaultCharacterStop);
AUTOGENERATE_FUNCTION(UUIScript,-1,execDefaultCharacterTurn);
AUTOGENERATE_FUNCTION(UUIScript,-1,execDefaultCharacterMouseTurn);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetCharacterColor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetCharacterStyle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execShowDefaultCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClassInitialStatEx);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClassInitialStat);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClassDescription);
AUTOGENERATE_FUNCTION(UUIScript,-1,execExecLobbyNextEvent);
AUTOGENERATE_FUNCTION(UUIScript,-1,execExecLobbyEvent);
AUTOGENERATE_FUNCTION(UUIScript,-1,execClearDefaultCharacterInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetDefaultCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPrevState);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCreateCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsActivateCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTimeToLastLogoutCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTimeToDisciplineCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTimeToDeleteCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetSelectedCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsDisciplineCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsScheduledToDeleteCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execResetCharacterPosition);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDeleteCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRestoreCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSelectedCharacterInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCharacterSelect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execStartGame);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGotoServerList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGotoLogin);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCreateNewCharacter);
AUTOGENERATE_FUNCTION(UUIScript,-1,execShowEnableTrackerBox);
AUTOGENERATE_FUNCTION(UUIScript,-1,execExecuteAlign);
AUTOGENERATE_FUNCTION(UUIScript,-1,execDeleteAttachedWindow);
AUTOGENERATE_FUNCTION(UUIScript,-1,execClearTracker);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTrackerAttachedWindow);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTrackerAttachedWindowList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execShowExampleAnimation);
AUTOGENERATE_FUNCTION(UUIScript,-1,execShowVirtualWindowBackground);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetXMLControlIndex);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetXMLControlString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetInterfaceDir);
AUTOGENERATE_FUNCTION(UUIScript,-1,execInitCreditState);
AUTOGENERATE_FUNCTION(UUIScript,-1,execShowMessageInLogin);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetQuestLocation);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetManorNameInManorList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetManorIDInManorList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetManorCount);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestProcureCropList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetWebBrowserHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSceneMusicCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSceneScreenCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetScenePcCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSceneNpcCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSceneCameraCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCharacterViewportWindowHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetEffectViewportWndHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetWindowHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTreeHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTextureHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTextListBoxHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTextBoxHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTabHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetStatusIconHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetStatusRoundHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetStatusBarHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSliderCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetRadarMapCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPropertyControllerHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetProgressCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetNameCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMinimapCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetRichListCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetListCtrlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetListBoxHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetItemWindowHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetHtmlHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMultiEditBoxHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetEditBoxHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDrawPanelHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetComboBoxHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCheckBoxHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetChatWindowHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetButtonHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetBarHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetAnimTextureHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execFindHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetHandle);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestObserverModeEnd);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestExEnchantSkill);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestExEnchantSkillInfoDetail);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestExEnchantSkillInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAcquireSkillSubClan);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAcquireSkill);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAcquireSkillInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execBeginBenchMark);
AUTOGENERATE_FUNCTION(UUIScript,-1,execBeginPlay);
AUTOGENERATE_FUNCTION(UUIScript,-1,execEraseReplayFile);
AUTOGENERATE_FUNCTION(UUIScript,-1,execBeginReplay);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDirList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetFileList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSystemDir);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCharacterSelectionActor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPlayerPosition);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestHennaUnEquip);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestHennaUnEquipList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestHennaUnEquipInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestHennaEquip);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestHennaItemList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestHennaItemInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetZoneNameWithLocation);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetInZoneNameWithZoneID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCurrentZoneID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCurrentZoneName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestOpenMinimap);
AUTOGENERATE_FUNCTION(UUIScript,-1,execStopSound);
AUTOGENERATE_FUNCTION(UUIScript,-1,execPlaySoundUntilEnd);
AUTOGENERATE_FUNCTION(UUIScript,-1,execPlaySound);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestChangeToAwakenedClass);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCallToChangeClass);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestShowVisionMovie);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetItemTextLink);
AUTOGENERATE_FUNCTION(UUIScript,-1,execReturnShowXMLDetailTooltip);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetItemTextSectionInfos);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetItemKeepSelectInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execReturnTooltipInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetVolumeScale);
AUTOGENERATE_FUNCTION(UUIScript,-1,execTutorialVoiceOn);
AUTOGENERATE_FUNCTION(UUIScript,-1,execTutorialVoiceOff);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMusicVolume);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetSystemVoiceVolume);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetNpcVoiceVolume);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetMusicVolume);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetAmbientVolume);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetEffectVolume);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetSoundVolume);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetConstantFloat);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetConstantBool);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetConstantString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetConstantInt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSaveINI);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRemoveINI);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetINIString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetINIFloat);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetINIInt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetINIBool);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetINIString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetINIFloat);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetINIInt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetINIBool);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRefreshINI);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSaveInventoryOrder);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetRaceTicketString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetLottoString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsSigilArmor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsMagicalArmor);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSpiritShotPower);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSoulShotPower);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetAttackSpeedString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetWeaponTypeString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSlotTypeString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetInventoryItemCount);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSendWindowsInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execApplyOptionToDamageText);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetChatFilterBool);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetChatFilterBool);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetOptionString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetOptionFloat);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetOptionInt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetOptionBool);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetOptionString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetOptionFloat);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetOptionInt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetOptionBool);
AUTOGENERATE_FUNCTION(UUIScript,-1,execStopMacro);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsStackableItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execUseSkill);
AUTOGENERATE_FUNCTION(UUIScript,-1,execDoAction);
AUTOGENERATE_FUNCTION(UUIScript,-1,execExecuteCommandFromAction);
AUTOGENERATE_FUNCTION(UUIScript,-1,execExecuteCommand);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetLocalizedL2TextPathNameUC);
AUTOGENERATE_FUNCTION(UUIScript,-1,execChangeLanguage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCanUseSystemDPIScaling);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetOutline);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetFixedDefaultCamera);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetIgnoreFriendInviting);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetIgnorePartyInviting);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetRenderCharacterCount);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetShaderWaterEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetDepthBufferShadow);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetYebisGlow);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetYebisDOF);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetDOF);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetL2Shader);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetWeatherEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetHDR);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetYebisAntialiasing);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetAntialiasing);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetReflectionEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetPawnClippingRange);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetTerrainClippingRange);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetBackgroundEffect);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetShadow);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetEffectDetail);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetMotionDetail);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetModelingDetail);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetTextureDetail);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetKeyCrypt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetDefaultPosition);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetShaderVersion);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetResolutionIndex);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMultiSample);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetResolution);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetRefreshRateList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetResolutionList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetLanguageCustom);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetLanguage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsEnableKeyCrypt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsCheckKeyCrypt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsUseKeyCrypt);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsEnableEngSelection);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCanUseHDR);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCanUseJoystick);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCanUseAudio);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetServerNo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetServerAgeLimit);
AUTOGENERATE_FUNCTION(UUIScript,-1,execExecQuit);
AUTOGENERATE_FUNCTION(UUIScript,-1,execExecRestart);
AUTOGENERATE_FUNCTION(UUIScript,-1,execEndSystemMessageParam);
AUTOGENERATE_FUNCTION(UUIScript,-1,execAddSystemMessageParam);
AUTOGENERATE_FUNCTION(UUIScript,-1,execAddSystemMessageString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execAddSystemMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPrivateShopMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSetPrivateShopMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetMaxLevel);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCurrentResolution);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPcCafeItemIconPackageName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClickLocation);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCheckItemLimit);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsTriggerSkill);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsIconHide);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsSongDance);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetIsMagic);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDebuffType);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetRoutingString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetUserRankString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBypassToServer);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetAllianceCrestTexFromAllianceCrestID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPledgeCrestTexFromPledgeCrestID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCurrentIMELang);
AUTOGENERATE_FUNCTION(UUIScript,-1,execPlayConsoleSound);
AUTOGENERATE_FUNCTION(UUIScript,-1,execConvertTimeToString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execCeilingNum);
AUTOGENERATE_FUNCTION(UUIScript,-1,execConvertNumToTextNoAdena);
AUTOGENERATE_FUNCTION(UUIScript,-1,execConvertNumToText);
AUTOGENERATE_FUNCTION(UUIScript,-1,execMakeCostString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execMakeCostStringINT64);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetItemGradeTextureName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetItemGradeString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execMakeFullItemName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execNextStringWithWidth);
AUTOGENERATE_FUNCTION(UUIScript,-1,execDivideStringWithWidth);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTextSize);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTextSizeDefault);
AUTOGENERATE_FUNCTION(UUIScript,-1,execMakeFullSystemMsg);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetScript);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetNpcString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSystemMessageWithParamNumber);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSystemMsgInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSystemMessage);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSystemString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsKeyDown);
AUTOGENERATE_FUNCTION(UUIScript,-1,execDebug);
AUTOGENERATE_FUNCTION(UUIScript,-1,execConvertTimetoStr);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTimeStructGMT);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTimeStruct);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetAppMilliSeconds);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetAppSeconds);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTimeString);
AUTOGENERATE_FUNCTION(UUIScript,-1,execMakeTimeStr);
AUTOGENERATE_FUNCTION(UUIScript,-1,execMakeToppingBuffTimeStr);
AUTOGENERATE_FUNCTION(UUIScript,-1,execMakeBuffTimeStr);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPartyMemberSummonedInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPartyMemberPetInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPartyMemberInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTeleportFlagCount);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTeleportBookMarkCount);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetAdenaStr);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetAdena);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClanNameValue);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClanName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetArtifactIndex);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsPlayerStand);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsBuilderPC);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClassStep);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetAgathionIndex);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetJewelIndex);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetDecoIndex);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetAccessoryItemID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSkillInfo_WRF);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSkillInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSummonPoint);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetSummonInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPetInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetUserInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetTargetInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPlayerInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPlayerRealName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClassTransferDegree);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClassRoleNameByRole);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClassRoleName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClassRoleType);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClassLevel);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClassIndex);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetClassType);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestInviteMpcc);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestInviteParty);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestInvitePartyByTargetID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execHasClanEmblem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execHasClanCrest);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCastleLocationName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCastleRegionID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetCastleName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPCCafeCouponUse);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanMemberAuth);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestEditClanAuth);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanAuth);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanWarList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanChangeNickName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAllianceRegisterCrestByFilePath);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanUnregisterEmblem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanRegisterEmblem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanRegisterEmblemByFilePath);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanUnregisterCrest);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanRegisterCrest);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanRegisterCrestByFilePath);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanReorganizeMember);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanWithdrawWarWithClanName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanWithdrawWar);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanDeclareWarWithClanName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanDeclareWarWithUserID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanDeclareWar);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanAskJoinByName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanAskJoin);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanExpelMember);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanLeave);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanDeletePupil);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanAssignPupil);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanChangeGrade);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanGradeList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestClanMemberInfo);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPartyMemberLocationWithID);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPartyMemberLocation);
AUTOGENERATE_FUNCTION(UUIScript,-1,execGetPartyMemberCount);
AUTOGENERATE_FUNCTION(UUIScript,-1,execSendPrivateShopList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestQuitPrivateShop);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDispel);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDuelSurrender);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDuelAnswerStart);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDuelStart);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestItemList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCrystallizeItemCancel);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestCrystallizeItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestUnequipItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDropItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestDestroyItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestUseItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execBR_RequestRestartPoint);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRestartPoint);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestMultiSellChoose);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBBSBoard);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPreviewItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPackageSend);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestPackageSendableItemList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestChangePetName);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestWarehouseWithdraw);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestWarehouseDeposit);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestReTargetUser);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestTargetUser);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAssist);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAction);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAttack);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetCrop);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSetSeed);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBuySeed);
AUTOGENERATE_FUNCTION(UUIScript,-1,execNotifyFriendRejectState);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestBuyItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSellItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execAnswerTradeRequest);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAddTradeItem);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestStartTrade);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestTradeDone);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestRaidRecord);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSkillList);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestTargetCancel);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestSelfTarget);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestAuthCardKeyLogin);
AUTOGENERATE_FUNCTION(UUIScript,-1,execRequestExit);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsFullScreen);
AUTOGENERATE_FUNCTION(UUIScript,-1,execIsPKMode);
AUTOGENERATE_FUNCTION(UGMAPI,-1,execRequestSnoopEnd);
AUTOGENERATE_FUNCTION(UGMAPI,-1,execGetObservingUserInfo);
AUTOGENERATE_FUNCTION(UGMAPI,-1,execRequestGMCommand);
AUTOGENERATE_FUNCTION(UGMAPI,-1,execBeginGMChangeServer);
AUTOGENERATE_FUNCTION(UGraphicAPI,-1,execDoFResume);
AUTOGENERATE_FUNCTION(UGraphicAPI,-1,execDoFPause);
AUTOGENERATE_FUNCTION(UGraphicAPI,-1,execDoFSetEndDistance);
AUTOGENERATE_FUNCTION(UGraphicAPI,-1,execDoFSetStartDistance);
AUTOGENERATE_FUNCTION(UGraphicAPI,-1,execDoFSetFocusDistance);
AUTOGENERATE_FUNCTION(UGraphicAPI,-1,execDoFSetFocusLocation);
AUTOGENERATE_FUNCTION(UGraphicAPI,-1,execDoFSetFocusPlayer);
AUTOGENERATE_FUNCTION(UGraphicAPI,-1,execDoFSetFocusActor);
AUTOGENERATE_FUNCTION(UHairshopAPI,-1,execApplyHairType);
AUTOGENERATE_FUNCTION(UHairshopAPI,-1,execApplyCharHairInfo);
AUTOGENERATE_FUNCTION(UHairshopAPI,-1,execUpdateCharHairInfo);
AUTOGENERATE_FUNCTION(UHennaAPI,-1,execGetPremiumHennaPeriod);
AUTOGENERATE_FUNCTION(UHennaAPI,-1,execGetPremiumHennaInfo);
AUTOGENERATE_FUNCTION(UHennaAPI,-1,execGetHennaInfo);
AUTOGENERATE_FUNCTION(UHennaAPI,-1,execGetHennaInfoCount);
AUTOGENERATE_FUNCTION(UHeroBookAPI,-1,execGetHeroBookItemListFromInven);
AUTOGENERATE_FUNCTION(UHeroBookAPI,-1,execGetAllHeroBookListData);
AUTOGENERATE_FUNCTION(UHeroBookAPI,-1,execGetHeroBookMaxPoint);
AUTOGENERATE_FUNCTION(UHeroBookAPI,-1,execGetHeroBookData);
AUTOGENERATE_FUNCTION(UHeroTowerAPI,-1,execRequestHeroMatchRecord);
AUTOGENERATE_FUNCTION(UHeroTowerAPI,-1,execRequestWriteHeroWords);
AUTOGENERATE_FUNCTION(UHomunculusAPI,-1,execGetHomunculusSlotActivateCost);
AUTOGENERATE_FUNCTION(UHomunculusAPI,-1,execGetHomunculusGatchaList);
AUTOGENERATE_FUNCTION(UHomunculusAPI,-1,execGetMaxHomunculusNpcLevelData);
AUTOGENERATE_FUNCTION(UHomunculusAPI,-1,execGetHomunculusNpcLevelData);
AUTOGENERATE_FUNCTION(UHomunculusAPI,-1,execGetHomunculusNpcData);
AUTOGENERATE_FUNCTION(UHomunculusAPI,-1,execGetHomunculusDatas);
AUTOGENERATE_FUNCTION(UHomunculusAPI,-1,execGetBonusResetItem);
AUTOGENERATE_FUNCTION(UHomunculusAPI,-1,execGetPointResetItem);
AUTOGENERATE_FUNCTION(UHomunculusAPI,-1,execGetHomunEnchantData);
AUTOGENERATE_FUNCTION(UHomunculusAPI,-1,execGetRemainBirthSeconds);
AUTOGENERATE_FUNCTION(UHomunculusAPI,-1,execGetHomunCreateData);
AUTOGENERATE_FUNCTION(UHomunculusAPI,-1,execIsHomunReady);
AUTOGENERATE_FUNCTION(UHtmlHandle,-1,execIsPageLock);
AUTOGENERATE_FUNCTION(UHtmlHandle,-1,execSetPageLock);
AUTOGENERATE_FUNCTION(UHtmlHandle,-1,execSetHtmlBuffData);
AUTOGENERATE_FUNCTION(UHtmlHandle,-1,execControllerExecution);
AUTOGENERATE_FUNCTION(UHtmlHandle,-1,execGetFrameMaxHeight);
AUTOGENERATE_FUNCTION(UHtmlHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UHtmlHandle,-1,execLoadHtmlFromString);
AUTOGENERATE_FUNCTION(UHtmlHandle,-1,execLoadHtml);
AUTOGENERATE_FUNCTION(UInputAPI,-1,execGetInputKey);
AUTOGENERATE_FUNCTION(UInputAPI,-1,execGetKeyString);
AUTOGENERATE_FUNCTION(UInputAPI,-1,execIsAltPressed);
AUTOGENERATE_FUNCTION(UInputAPI,-1,execIsCtrlPressed);
AUTOGENERATE_FUNCTION(UInputAPI,-1,execIsShiftPressed);
AUTOGENERATE_FUNCTION(UItemLookChangeAPI,-1,execRequestExCancelItemLookChange);
AUTOGENERATE_FUNCTION(UItemLookChangeAPI,-1,execRequestExTryToPut_Shape_Shifting_EnchantSupportItem);
AUTOGENERATE_FUNCTION(UItemLookChangeAPI,-1,execRequestExTryToPut_Shape_Shifting_TargetItem);
AUTOGENERATE_FUNCTION(UItemLookChangeAPI,-1,execRequestItemLookChange);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetDualSlotBitType);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetNoItemDrag);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetButtonClick);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execClearItemTooltip);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execClearNewlyAcquired);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetNewlyAcquired);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetIconDrawType);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetIconIndex);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetToggleEffect);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execResizeScrollBar);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetSelectedNum);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execPushSideTypeNextBtn);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execPushSideTypePrevBtn);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execGetSideTypeCurPage);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execGetSideTypePageNum);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execFindItemByClassID);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetItemUsability);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetExpandItemNum);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetCol);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetRow);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetDisableTex);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execGetIndexAt);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSwapItems);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execShowScrollBar);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetFaded);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execFindItemWithReserved);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execFindItemWithAllProperty);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execFindItem);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetBlessPanelDrawType);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetItemSkillDisabled);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execGetItemSkillDisabled);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execGetItemIdLevel);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execGetItem);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execGetSelectedItem);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execDeleteItem);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execSetItem);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execAddItemWithFaded);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execAddItem);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execClearSelect);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execGetItemNum);
AUTOGENERATE_FUNCTION(UItemWindowHandle,-1,execGetSelectedNum);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execRequestUIPacket);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execGetCurDecodePos);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execDecodeWString);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execDecodeString);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execDecodeDouble);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execDecodeFloat);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execDecodeInt64);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execDecodeUInt32);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execDecodeInt);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execDecodeUInt16);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execDecodeShort);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execDecodeWChar_t);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execDecodeChar);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execDecodeByte);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execDecodeBool);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execSetShort);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execEncodeWString);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execEncodeString);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execEncodeDouble);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execEncodeFloat);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execEncodeInt64);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execEncodeUInt32);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execEncodeInt);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execEncodeUInt16);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execEncodeShort);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execEncodeWChar_t);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execEncodeChar);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execEncodeByte);
AUTOGENERATE_FUNCTION(UL2UIPacketBase,-1,execEncodeBool);
AUTOGENERATE_FUNCTION(UListBoxHandle,-1,execSetMaxRow);
AUTOGENERATE_FUNCTION(UListBoxHandle,-1,execSetDrawOffset);
AUTOGENERATE_FUNCTION(UListBoxHandle,-1,execSetListBoxScrollPosition);
AUTOGENERATE_FUNCTION(UListBoxHandle,-1,execGetSelectedItemData);
AUTOGENERATE_FUNCTION(UListBoxHandle,-1,execGetSelectedString);
AUTOGENERATE_FUNCTION(UListBoxHandle,-1,execAddStringWithData);
AUTOGENERATE_FUNCTION(UListBoxHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UListBoxHandle,-1,execAddString);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execIsAscending);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execSetAscend);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execHideSortIcon);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execShowSortIcon);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execSetSortable);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execGetShowRow);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execSetUseHorizontalScrollBar);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execSetColumnMinimumWidth);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execSetColumnString);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execSetAppearTooltipAtMouseX);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execSetSelectedSelTooltip);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execEnablePageBrowser);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execSetColumnWidth);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execSetResizable);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execSetHeaderTextOffset);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execSetHeaderAlignment);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execAdjustColumnWidth);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execInitListCtrl);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execGetRec);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execGetSelectedRec);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execModifyRecord);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execShowScrollBar);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execSetSelectedIndex);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execGetSelectedIndex);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execGetRecordCount);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execDeleteRecord);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execDeleteAllItem);
AUTOGENERATE_FUNCTION(UListCtrlHandle,-1,execInsertRecord);
AUTOGENERATE_FUNCTION(UMacroAPI,-1,execRequestMakeMacro);
AUTOGENERATE_FUNCTION(UMacroAPI,-1,execRequestDeleteMacro);
AUTOGENERATE_FUNCTION(UMacroAPI,-1,execRequestUseMacro);
AUTOGENERATE_FUNCTION(UMacroAPI,-1,execRequestMacroList);
AUTOGENERATE_FUNCTION(UMiniMapAPI,-1,execRequestShowAgitSiegeInfo);
AUTOGENERATE_FUNCTION(UMiniMapAPI,-1,execRequestRaidServerInfo);
AUTOGENERATE_FUNCTION(UMiniMapAPI,-1,execRequestItemAuctionStatus);
AUTOGENERATE_FUNCTION(UMiniMapAPI,-1,execRequestRaidBossSpawnInfo);
AUTOGENERATE_FUNCTION(UMiniMapAPI,-1,execRequestSeedPhase);
AUTOGENERATE_FUNCTION(UMiniMapAPI,-1,execRequestTreasureBoxLocation);
AUTOGENERATE_FUNCTION(UMiniMapAPI,-1,execRequestCursedWeaponLocation);
AUTOGENERATE_FUNCTION(UMiniMapAPI,-1,execRequestCursedWeaponList);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execSetShowRegionInfoByType);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execEraseRegionInfoByType);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execEraseRegionInfoCtrl);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execUpdateRegionInfoCtrl);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execAddRegionInfoCtrl);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execDisableDirIcon);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execSetDirIconDest);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execSetDrawTeleportPath);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execEraseQuestIcon);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execRegisterQuestIcon);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execGetPlayerContinent);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execGetContinent);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execSetContinent);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execEraseRegionInfo);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execEraseAllRegionInfo);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execUpdateRegionInfo);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execAddRegionInfo);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execDeleteAllCursedWeaponIcon);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execIsOverlapped);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execRequestReduceBtn);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execDrawGridIcon);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execSetSSQStatus);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execSetShowQuest);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execDeleteAllTarget);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execDeleteTarget);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execAddTarget);
AUTOGENERATE_FUNCTION(UMinimapCtrlHandle,-1,execAdjustMapView);
AUTOGENERATE_FUNCTION(UMultiEditBoxHandle,-1,execGetTotalSizeOfText);
AUTOGENERATE_FUNCTION(UMultiEditBoxHandle,-1,execSetMaxSizeOfText);
AUTOGENERATE_FUNCTION(UMultiEditBoxHandle,-1,execSetString);
AUTOGENERATE_FUNCTION(UMultiEditBoxHandle,-1,execGetString);
AUTOGENERATE_FUNCTION(UNameCtrlHandle,-1,execSetNameUsingItem);
AUTOGENERATE_FUNCTION(UNameCtrlHandle,-1,execGetName);
AUTOGENERATE_FUNCTION(UNameCtrlHandle,-1,execSetNameWithColor);
AUTOGENERATE_FUNCTION(UNameCtrlHandle,-1,execSetName);
AUTOGENERATE_FUNCTION(UNewEnchantAPI,-1,execGetCombinationItemData);
AUTOGENERATE_FUNCTION(UNewEnchantAPI,-1,execGetEnchantCandidateMaterialList);
AUTOGENERATE_FUNCTION(UNewEnchantAPI,-1,execIsNoFailResultEffectType);
AUTOGENERATE_FUNCTION(UNewEnchantAPI,-1,execGetResultItemForEnchant);
AUTOGENERATE_FUNCTION(UNewEnchantAPI,-1,execGetMaterialItemForEnchantFromEquip);
AUTOGENERATE_FUNCTION(UNewEnchantAPI,-1,execGetMaterialItemForEnchantFromInven);
AUTOGENERATE_FUNCTION(UNewEnchantAPI,-1,execRequestEnchantRetryPutItems);
AUTOGENERATE_FUNCTION(UNewEnchantAPI,-1,execRequestClose);
AUTOGENERATE_FUNCTION(UNewEnchantAPI,-1,execRequestTryEnchant);
AUTOGENERATE_FUNCTION(UNewEnchantAPI,-1,execRequestRemoveTwo);
AUTOGENERATE_FUNCTION(UNewEnchantAPI,-1,execRequestRemoveOne);
AUTOGENERATE_FUNCTION(UNewEnchantAPI,-1,execRequestPushTwo);
AUTOGENERATE_FUNCTION(UNewEnchantAPI,-1,execRequestPushOne);
AUTOGENERATE_FUNCTION(UOlympiadAPI,-1,execRequestExOlympiadMatchMakingCancel);
AUTOGENERATE_FUNCTION(UOlympiadAPI,-1,execRequestExOlympiadMatchMaking);
AUTOGENERATE_FUNCTION(UOlympiadAPI,-1,execRequestExOlympiadWatchGame);
AUTOGENERATE_FUNCTION(UOlympiadAPI,-1,execRequestOlympiadMatchList);
AUTOGENERATE_FUNCTION(UOlympiadAPI,-1,execRequestOlympiadObserverEnd);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestMpccPartymasterList);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestWithdrawMpccRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestDismissMpccRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestOustFromMpccRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestJoinMpccRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestManageMpccRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestListMpccWaiting);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestPartyMatchingHistory);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestAskJoinPartyRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestExitPartyMatchingWaitingRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestPartyMatchWaitList);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestBanFromPartyRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestWithdrawPartyRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestDismissPartyRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestManagePartyRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestJoinPartyRoomAuto);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestJoinPartyRoom);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestPartyRoomList);
AUTOGENERATE_FUNCTION(UPartyMatchAPI,-1,execRequestOpenPartyMatch);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execGetPvpbookMaxCount);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execGetPvpbookRequiredItem);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestPvpbookTeleportToKiller);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestPvpbookKillerLocation);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestPvpbookList);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestMentorCancel);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestMentorList);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execConfirmMenteeAdd);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestMenteeAdd);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestFriendChat);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execGetFriendServerID);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestPledgeMemberList);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestInzonePartyInfoHistory);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestUpdateBlockMemo);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestBlockDetailInfo);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestBlockInfoList);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestRemoveBlock);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestAddBlock);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestUpdateFriendMemo);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestFriendDetailInfo);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestFriendInfoList);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestRemoveFriend);
AUTOGENERATE_FUNCTION(UPersonalConnectionAPI,-1,execRequestAddFriend);
AUTOGENERATE_FUNCTION(UUIDataManager,-1,execGetFireAbilityComboEffectData);
AUTOGENERATE_FUNCTION(UUIDataManager,-1,execGetFireAbilityData);
AUTOGENERATE_FUNCTION(UUIDataManager,-1,execGetDethroneShopDataList);
AUTOGENERATE_FUNCTION(UUIDataManager,-1,execGetAbilityItem);
AUTOGENERATE_FUNCTION(UUIDataManager,-1,execGetOlympiadGroupServerList);
AUTOGENERATE_FUNCTION(UUIDataManager,-1,execGetRootClassID);
AUTOGENERATE_FUNCTION(UUIDataManager,-1,execGetServerList);
AUTOGENERATE_FUNCTION(UUIDataManager,-1,execGetServerInfo);
AUTOGENERATE_FUNCTION(UUIDataManager,-1,execGetMaxServerCount);
AUTOGENERATE_FUNCTION(UUIDataManager,-1,execGetSystemMsgMaxCount);
AUTOGENERATE_FUNCTION(UUIDataManager,-1,execGetSysStringMaxCount);
AUTOGENERATE_FUNCTION(UUIDataManager,-1,execGetClassTypeMaxCount);
AUTOGENERATE_FUNCTION(UUIDataManager,-1,execGetEnableClassIndexList);
AUTOGENERATE_FUNCTION(UUIDataManager,-1,execGetClassnameSysstringIndexByClassIndex);
AUTOGENERATE_FUNCTION(UPetAPI,-1,execGetPetRaceEmblemDataAll);
AUTOGENERATE_FUNCTION(UPetAPI,-1,execGetPetRaceEmblemData);
AUTOGENERATE_FUNCTION(UPetAPI,-1,execGetPetExtractInfo);
AUTOGENERATE_FUNCTION(UPetAPI,-1,execGetPetAcquireSkillList);
AUTOGENERATE_FUNCTION(UPetAPI,-1,execGetPetNameIDBySkill);
AUTOGENERATE_FUNCTION(UPetAPI,-1,execGetPetEvolveNameInfo);
AUTOGENERATE_FUNCTION(UPetAPI,-1,execGetPetEvolveLookInfo);
AUTOGENERATE_FUNCTION(UPetAPI,-1,execGetPetEvolveCondition);
AUTOGENERATE_FUNCTION(UPetAPI,-1,execRequestGetItemFromPet);
AUTOGENERATE_FUNCTION(UPetAPI,-1,execRequestGiveItemToPet);
AUTOGENERATE_FUNCTION(UPetAPI,-1,execRequestPetUseItem);
AUTOGENERATE_FUNCTION(UPetAPI,-1,execRequestPetInventoryItemList);
AUTOGENERATE_FUNCTION(UPetitionAPI,-1,execRequestPetitionFeedBack);
AUTOGENERATE_FUNCTION(UPetitionAPI,-1,execRequestPetition);
AUTOGENERATE_FUNCTION(UPetitionAPI,-1,execRequestPetitionCancel);
AUTOGENERATE_FUNCTION(UPostWndAPI,-1,execRequestPledgeMemberList);
AUTOGENERATE_FUNCTION(UPostWndAPI,-1,execRequestPostFriendList);
AUTOGENERATE_FUNCTION(UPostWndAPI,-1,execRequestDeletingPostFriend);
AUTOGENERATE_FUNCTION(UPostWndAPI,-1,execRequestAddingPostFriend);
AUTOGENERATE_FUNCTION(UPostWndAPI,-1,execRequestFriendList);
AUTOGENERATE_FUNCTION(UProgressCtrlHandle,-1,execSetBarTex);
AUTOGENERATE_FUNCTION(UProgressCtrlHandle,-1,execSetBackTex);
AUTOGENERATE_FUNCTION(UProgressCtrlHandle,-1,execStart);
AUTOGENERATE_FUNCTION(UProgressCtrlHandle,-1,execResume);
AUTOGENERATE_FUNCTION(UProgressCtrlHandle,-1,execStop);
AUTOGENERATE_FUNCTION(UProgressCtrlHandle,-1,execReset);
AUTOGENERATE_FUNCTION(UProgressCtrlHandle,-1,execSetPos);
AUTOGENERATE_FUNCTION(UProgressCtrlHandle,-1,execSetProgressTime);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execGetItemStringValue);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execGetItemIntegerValue);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execGetItemBooleanValue);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execSetItemStringValue);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execSetItemIntegerValue);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execSetItemBooleanValue);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execGetItemType);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execSetGroupVisible);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execSetGroupExpandState);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execAddGroup);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execDeleteGroup);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execGetGroupCheck);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execSetGroupCheck);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execGetGroupType);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execUpdatePropertyGroup);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execGetPropertyHeight);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execClearValue);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UPropertyControllerHandle,-1,execSetProperty);
AUTOGENERATE_FUNCTION(UQuestAPI,-1,execSetQuestTargetInfo);
AUTOGENERATE_FUNCTION(UQuestAPI,-1,execRequestDestroyQuest);
AUTOGENERATE_FUNCTION(UQuestAPI,-1,execRequestQuestList);
AUTOGENERATE_FUNCTION(URadarMapCtrlHandle,-1,execSwitchSingleMeshMode);
AUTOGENERATE_FUNCTION(URadarMapCtrlHandle,-1,execSetMapInvisible);
AUTOGENERATE_FUNCTION(URadarMapCtrlHandle,-1,execSetEnableRotation);
AUTOGENERATE_FUNCTION(URadarMapCtrlHandle,-1,execSetMagnification);
AUTOGENERATE_FUNCTION(URadarMapCtrlHandle,-1,execRequestObjectAround);
AUTOGENERATE_FUNCTION(URadarMapCtrlHandle,-1,execUpdateObject);
AUTOGENERATE_FUNCTION(URadarMapCtrlHandle,-1,execDeleteObject);
AUTOGENERATE_FUNCTION(URadarMapCtrlHandle,-1,execAddObject);
AUTOGENERATE_FUNCTION(URadioButtonHandle,-1,execIsChecked);
AUTOGENERATE_FUNCTION(URandomCraftAPI,-1,execGetMaxGaugeValue);
AUTOGENERATE_FUNCTION(URandomCraftAPI,-1,execGetItemAnnounceGrade);
AUTOGENERATE_FUNCTION(URandomCraftAPI,-1,execGetRewardItems);
AUTOGENERATE_FUNCTION(URandomCraftAPI,-1,execGetSlotsSuccessRate);
AUTOGENERATE_FUNCTION(URandomCraftAPI,-1,execGetMaxItemPoint);
AUTOGENERATE_FUNCTION(URandomCraftAPI,-1,execGetRestCosts);
AUTOGENERATE_FUNCTION(URandomCraftAPI,-1,execGetItemMakingCosts);
AUTOGENERATE_FUNCTION(URandomCraftAPI,-1,execGetItemLockCost);
AUTOGENERATE_FUNCTION(URandomCraftAPI,-1,execGetMaxItemLockCount);
AUTOGENERATE_FUNCTION(URandomCraftAPI,-1,execGetMaxSlotLockCount);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeShopListSet);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeShopMessageSet);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeShopManageQuit);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeItemDelete);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeBookOpen);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeItemMakeInfo);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeItemMakeSelf);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeShopMakeDo);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeShopSellList);
AUTOGENERATE_FUNCTION(URecipeAPI,-1,execRequestRecipeShopMakeInfo);
AUTOGENERATE_FUNCTION(URefineryAPI,-1,execGetOptionDescByOptionID);
AUTOGENERATE_FUNCTION(URefineryAPI,-1,execGetOptionProbability);
AUTOGENERATE_FUNCTION(URefineryAPI,-1,execGetOptionDesc);
AUTOGENERATE_FUNCTION(URefineryAPI,-1,execGetRefineryFee);
AUTOGENERATE_FUNCTION(URefineryAPI,-1,execGetTargetItemListFromInven);
AUTOGENERATE_FUNCTION(URefineryAPI,-1,execGetItemListFromInven);
AUTOGENERATE_FUNCTION(URefineryAPI,-1,execRequestRefineCancel);
AUTOGENERATE_FUNCTION(URefineryAPI,-1,execConfirmCancelItem);
AUTOGENERATE_FUNCTION(URefineryAPI,-1,execConfirmGemStone);
AUTOGENERATE_FUNCTION(URefineryAPI,-1,execConfirmRefinerItem);
AUTOGENERATE_FUNCTION(URefineryAPI,-1,execConfirmTargetItem);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execGetPointedRec);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetEnableInteractionPass);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execGetStartRow);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execDecreaseStartRow);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execIncreaseStartRow);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execAdjustShowRow);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execIsAscending);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetAscend);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execHideSortIcon);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execShowSortIcon);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetSortable);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execGetShowRow);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetEnableItemRecordDrag);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetStartRow);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetSelectable);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetUseStripeBackTexture);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetStatusBarTexture);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetUseHorizontalScrollBar);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetColumnMinimumWidth);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetColumnString);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetAppearTooltipAtMouseX);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetSelectedSelTooltip);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetContentsHeight);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execEnablePageBrowser);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetColumnWidth);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetResizable);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetHeaderTextOffset);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetHeaderAlignment);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execAdjustColumnWidth);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execInitListCtrl);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execGetRec);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execGetSelectedRec);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execModifyRecord);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execShowScrollBar);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execSetSelectedIndex);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execGetSelectedIndex);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execGetRecordCount);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execDeleteRecord);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execDeleteAllItem);
AUTOGENERATE_FUNCTION(URichListCtrlHandle,-1,execInsertRecord);
AUTOGENERATE_FUNCTION(USceneCameraCtrlHandle,-1,execSaveCameraData);
AUTOGENERATE_FUNCTION(USceneCameraCtrlHandle,-1,execUpdateCameraData);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execSetSceneInfoAttribute);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execSaveCurSceneTimeAndDesc);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execGetCurScenePlayRate);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execGetCurSceneTimeAndDesc);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execSaveSceneData);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execLoadSceneData);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execReloadSceneData);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execIsReloadSceneData);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execCopyScene);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execDeleteScene);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execAddScene);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execPlayScene);
AUTOGENERATE_FUNCTION(USceneEditorAPI,-1,execInitSceneEditorData);
AUTOGENERATE_FUNCTION(USceneMusicCtrlHandle,-1,execSaveMusicData);
AUTOGENERATE_FUNCTION(USceneMusicCtrlHandle,-1,execUpdateMusicData);
AUTOGENERATE_FUNCTION(USceneNpcCtrlHandle,-1,execSaveNpcData);
AUTOGENERATE_FUNCTION(USceneNpcCtrlHandle,-1,execUpdateNpcData);
AUTOGENERATE_FUNCTION(UScenePcCtrlHandle,-1,execSavePcData);
AUTOGENERATE_FUNCTION(UScenePcCtrlHandle,-1,execUpdatePcData);
AUTOGENERATE_FUNCTION(USceneScreenCtrlHandle,-1,execSaveScreenData);
AUTOGENERATE_FUNCTION(USceneScreenCtrlHandle,-1,execUpdateScreenData);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execExecuteShortcutCommand);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execClear);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execRestoreDefault);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execDeactivateAll);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execDeactivateGroup);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execActivateGroup);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execRequestShortcutScriptData);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execRequestList);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execSave);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execUnlockShortcut);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execLockShortcut);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execGetAssignedKeyFromCommand);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execGetActiveGroupList);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execGetGroupList);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execGetGroupCommandList);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execAssignCommand);
AUTOGENERATE_FUNCTION(UShortcutAPI,-1,execAssignSpecialKey);
AUTOGENERATE_FUNCTION(UShortcutWndAPI,-1,execGetSkillListFromShortcutItems);
AUTOGENERATE_FUNCTION(UShortcutWndAPI,-1,execRequestRegisterShortcut);
AUTOGENERATE_FUNCTION(UShortcutWndAPI,-1,execSetAutoUseMacro);
AUTOGENERATE_FUNCTION(UShortcutWndAPI,-1,execRequestAutomaticUseItemActivate);
AUTOGENERATE_FUNCTION(UShortcutWndAPI,-1,execRequestAutomaticUseItemActivateAll);
AUTOGENERATE_FUNCTION(UShortcutWndAPI,-1,execExecuteShortcutBySlot);
AUTOGENERATE_FUNCTION(UShortcutWndAPI,-1,execSetShortcutPage);
AUTOGENERATE_FUNCTION(USiegeAPI,-1,execRequestPledgeMercenaryMemberJoin);
AUTOGENERATE_FUNCTION(USiegeAPI,-1,execRequestPledgeMercenaryRecruitInfoSet);
AUTOGENERATE_FUNCTION(USiegeAPI,-1,execRequestPledgeMercenaryMemberList);
AUTOGENERATE_FUNCTION(USiegeAPI,-1,execRequestMCWCastleSiegeDefenderList);
AUTOGENERATE_FUNCTION(USiegeAPI,-1,execRequestMCWCastleSiegeAttackerList);
AUTOGENERATE_FUNCTION(USiegeAPI,-1,execRequestMCWCastleSiegeInfo);
AUTOGENERATE_FUNCTION(USiegeAPI,-1,execRequestMCWCastleInfo);
AUTOGENERATE_FUNCTION(USiegeAPI,-1,execRequestSetCastleSiegeTime);
AUTOGENERATE_FUNCTION(USiegeAPI,-1,execRequestConfirmCastleSiegeWaitingList);
AUTOGENERATE_FUNCTION(USiegeAPI,-1,execRequestJoinCastleSiege);
AUTOGENERATE_FUNCTION(USiegeAPI,-1,execRequestCastleSiegeDefenderList);
AUTOGENERATE_FUNCTION(USiegeAPI,-1,execRequestCastleSiegeAttackerList);
AUTOGENERATE_FUNCTION(USliderCtrlHandle,-1,execIsMouseScrolling);
AUTOGENERATE_FUNCTION(USliderCtrlHandle,-1,execSetTotalTickCount);
AUTOGENERATE_FUNCTION(USliderCtrlHandle,-1,execGetTotalTickCount);
AUTOGENERATE_FUNCTION(USliderCtrlHandle,-1,execSetCurrentTick);
AUTOGENERATE_FUNCTION(USliderCtrlHandle,-1,execGetCurrentTick);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_BlurNormalDifference);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_BlurDepthDifference);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_BlurIntensity);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_SampleDistance);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_NoiseScale);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_DepthDifference);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_FadeFront);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_MaxIntensity);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_Strength);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_Blend);
AUTOGENERATE_FUNCTION(USSAOAPI,-1,execSSAO_Level);
AUTOGENERATE_FUNCTION(USSQAPI,-1,execRequestSSQStatus);
AUTOGENERATE_FUNCTION(UStatisticAPI,-1,execRequestUserStatistics);
AUTOGENERATE_FUNCTION(UStatisticAPI,-1,execRequestWorldStatistics);
AUTOGENERATE_FUNCTION(UStatisticAPI,-1,execRequestHotLinkStatistics);
AUTOGENERATE_FUNCTION(UStatisticAPI,-1,execGetTableOfContent);
AUTOGENERATE_FUNCTION(UStatisticAPI,-1,execGetContentInfo);
AUTOGENERATE_FUNCTION(UStatisticAPI,-1,execGetTitleNameOfStatistic);
AUTOGENERATE_FUNCTION(UStatusBarHandle,-1,execSetDrawPoint);
AUTOGENERATE_FUNCTION(UStatusBarHandle,-1,execSetDecimalPlace);
AUTOGENERATE_FUNCTION(UStatusBaseHandle,-1,execSetRegenInfo);
AUTOGENERATE_FUNCTION(UStatusBaseHandle,-1,execSetPointExpPercentRate);
AUTOGENERATE_FUNCTION(UStatusBaseHandle,-1,execSetPointPercent);
AUTOGENERATE_FUNCTION(UStatusBaseHandle,-1,execSetPoint);
AUTOGENERATE_FUNCTION(UStatusBaseHandle,-1,execClearPoint);
AUTOGENERATE_FUNCTION(UStatusBaseHandle,-1,execGetPoint);
AUTOGENERATE_FUNCTION(UStatusBaseHandle,-1,execSetGaugeColor);
AUTOGENERATE_FUNCTION(UStatusBaseHandle,-1,execGetGaugeColor);
AUTOGENERATE_FUNCTION(UStatusBaseHandle,-1,execSetGaugeTexture);
AUTOGENERATE_FUNCTION(UStatusBaseHandle,-1,execGetGaugeTexture);
AUTOGENERATE_FUNCTION(UStatusBaseHandle,-1,execGetSelfScript);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execSetIconSize);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execDelItem);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execSetItem);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execGetItem);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execGetColCount);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execGetRowCount);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execInsertCol);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execInsertRow);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execAddCol);
AUTOGENERATE_FUNCTION(UStatusIconHandle,-1,execAddRow);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execSetButtonTooltip);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execSetTabControlTexture);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execRemoveTabControl);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execSetButtonDisableTexture);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execSetButtonBlink);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execSetButtonOffsetTex);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execSetButtonSizeTex);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execSetButtonName);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execMergeTab);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execSetDisable);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execGetTopIndex);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execSetTopOrder);
AUTOGENERATE_FUNCTION(UTabHandle,-1,execInitTabCtrl);
AUTOGENERATE_FUNCTION(UTeamMatchAPI,-1,execRequestExBlockGameVote);
AUTOGENERATE_FUNCTION(UTeamMatchAPI,-1,execRequestExBlockGameEnter);
AUTOGENERATE_FUNCTION(UTeamMatchAPI,-1,execRequestBlockGameAllData);
AUTOGENERATE_FUNCTION(UTeamMatchAPI,-1,execRequestExCleftEnter);
AUTOGENERATE_FUNCTION(UTeamMatchAPI,-1,execRequestCleftAllData);
AUTOGENERATE_FUNCTION(UTeleportListAPI,-1,execRequestTeleportFavoritesList);
AUTOGENERATE_FUNCTION(UTeleportListAPI,-1,execRequestTeleport);
AUTOGENERATE_FUNCTION(UTeleportListAPI,-1,execGetDominionList);
AUTOGENERATE_FUNCTION(UTeleportListAPI,-1,execGetNextTeleportListData);
AUTOGENERATE_FUNCTION(UTeleportListAPI,-1,execGetFirstTeleportListData);
AUTOGENERATE_FUNCTION(UTeleportListAPI,-1,execModifyExceptionLocation);
AUTOGENERATE_FUNCTION(UTeleportListAPI,-1,execGetTeleportListaDataWithZoneKey);
AUTOGENERATE_FUNCTION(UTeleportListAPI,-1,execGetCurrentZoneKey);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execSetFormatString);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execGetSizeY);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execGetSizeX);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execSetFontIDByName);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execSetTextEllipsisWidth);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execSetTooltipString);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execSetInt);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execSetAlign);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execGetTextColor);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execSetTextColor);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execSetText);
AUTOGENERATE_FUNCTION(UTextBoxHandle,-1,execGetText);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execSetNodeItemTexture);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execSetNodeItemText);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execShowScrollBar);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execGetParentNode);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execGetChildNode);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execIsExpandedNode);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execIsNodeNameExist);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execDeleteNode);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execGetExpandedNode);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execSetExpandedNode);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execClear);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execInsertNodeItem);
AUTOGENERATE_FUNCTION(UTreeHandle,-1,execInsertNode);
AUTOGENERATE_FUNCTION(UTutorialAPI,-1,execRequestExSetTutorial);
AUTOGENERATE_FUNCTION(UUIAPI_BUTTON,-1,execSetButtonName);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execGetSelectedRadioButtonName);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execClearAnchor);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetAnchor);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execGetTooltipText);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetTooltipText);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetTooltipType);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetTabOrder);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetResizeFrameSize);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetFrameSize);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetWindowSizeRel43);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetWindowSizeRel);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetWindowSize);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execBringToFront);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execBringToFrontOf);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execIsFocused);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetFocus);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execNotifyAlarm);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execIconize);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execMoveShake);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execMoveEx);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execMoveTo);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execMove);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetAlpha);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetAlwaysOnTop);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execIsEnableWindow);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execDisableWindow);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execEnableWindow);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetWindowTitleByText);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetWindowTitle);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execKillUITimer);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execSetUITimer);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execGetRect);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execHideWindow);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execShowWindow);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execIsMinimizedWindow);
AUTOGENERATE_FUNCTION(UUIAPI_WINDOW,-1,execIsShowWindow);
AUTOGENERATE_FUNCTION(UUIAPI_CHECKBOX,-1,execToggleDisable);
AUTOGENERATE_FUNCTION(UUIAPI_CHECKBOX,-1,execSetDisable);
AUTOGENERATE_FUNCTION(UUIAPI_CHECKBOX,-1,execIsDisable);
AUTOGENERATE_FUNCTION(UUIAPI_CHECKBOX,-1,execIsChecked);
AUTOGENERATE_FUNCTION(UUIAPI_CHECKBOX,-1,execSetCheck);
AUTOGENERATE_FUNCTION(UUIAPI_CHECKBOX,-1,execSetTitle);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execAddStringWithColor);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execGetNumOfItems);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execSetSelectedNum);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execGetSelectedNum);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execGetReserved);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execGetString);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execSYS_AddStringWithReserved);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execAddStringWithReserved);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execSYS_AddString);
AUTOGENERATE_FUNCTION(UUIAPI_COMBOBOX,-1,execAddString);
AUTOGENERATE_FUNCTION(UUIAPI_EDITBOX,-1,execSetAlign);
AUTOGENERATE_FUNCTION(UUIAPI_EDITBOX,-1,execAllSelect);
AUTOGENERATE_FUNCTION(UUIAPI_EDITBOX,-1,execSetHighLight);
AUTOGENERATE_FUNCTION(UUIAPI_EDITBOX,-1,execSetEditType);
AUTOGENERATE_FUNCTION(UUIAPI_EDITBOX,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_EDITBOX,-1,execSimulateBackspace);
AUTOGENERATE_FUNCTION(UUIAPI_EDITBOX,-1,execAddString);
AUTOGENERATE_FUNCTION(UUIAPI_EDITBOX,-1,execSetString);
AUTOGENERATE_FUNCTION(UUIAPI_EDITBOX,-1,execGetString);
AUTOGENERATE_FUNCTION(UUIAPI_EFFECTBUTTON,-1,execEndEffect);
AUTOGENERATE_FUNCTION(UUIAPI_EFFECTBUTTON,-1,execBeginEffect);
AUTOGENERATE_FUNCTION(UUIAPI_INVENWEIGHT,-1,execZeroWeight);
AUTOGENERATE_FUNCTION(UUIAPI_INVENWEIGHT,-1,execReduceWeight);
AUTOGENERATE_FUNCTION(UUIAPI_INVENWEIGHT,-1,execAddWeight);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execSetIconIndex);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execSetToggleEffect);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execShowScrollBar);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execSetFaded);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execFindItemByClassID);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execFindItem);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execGetItem);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execGetSelectedItem);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execDeleteItem);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execSetItem);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execAddItem);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execClearSelect);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execGetItemNum);
AUTOGENERATE_FUNCTION(UUIAPI_ITEMWINDOW,-1,execGetSelectedNum);
AUTOGENERATE_FUNCTION(UUIAPI_LISTCTRL,-1,execShowScrollBar);
AUTOGENERATE_FUNCTION(UUIAPI_LISTCTRL,-1,execSetSelectedIndex);
AUTOGENERATE_FUNCTION(UUIAPI_LISTCTRL,-1,execGetSelectedIndex);
AUTOGENERATE_FUNCTION(UUIAPI_LISTCTRL,-1,execGetRecordCount);
AUTOGENERATE_FUNCTION(UUIAPI_LISTCTRL,-1,execDeleteRecord);
AUTOGENERATE_FUNCTION(UUIAPI_LISTCTRL,-1,execDeleteAllItem);
AUTOGENERATE_FUNCTION(UUIAPI_LISTCTRL,-1,execModifyRecord);
AUTOGENERATE_FUNCTION(UUIAPI_LISTCTRL,-1,execInsertRecord);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execResetMinimapData);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execShowCertainLayer);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execDeleteAllCursedWeaponIcon);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execIsOverlapped);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execRequestReduceBtn);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execDrawGridIcon);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execSetSSQStatus);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execSetDailyQuest);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execSetShowQuest);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execDeleteAllTarget);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execDeleteTarget);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execAddTarget);
AUTOGENERATE_FUNCTION(UUIAPI_MINIMAPCTRL,-1,execAdjustMapView);
AUTOGENERATE_FUNCTION(UUIAPI_MULTIEDITBOX,-1,execSetString);
AUTOGENERATE_FUNCTION(UUIAPI_MULTIEDITBOX,-1,execGetString);
AUTOGENERATE_FUNCTION(UUIAPI_MULTISELLITEMINFO,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_MULTISELLITEMINFO,-1,execSetItemInfo);
AUTOGENERATE_FUNCTION(UUIAPI_MULTISELLNEEDEDITEM,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_MULTISELLNEEDEDITEM,-1,execAddData);
AUTOGENERATE_FUNCTION(UUIAPI_SHORTCUTITEMWINDOW,-1,execGetShortcutItem);
AUTOGENERATE_FUNCTION(UUIAPI_SHORTCUTITEMWINDOW,-1,execAddShortcutItem);
AUTOGENERATE_FUNCTION(UUIAPI_SHORTCUTITEMWINDOW,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_SHORTCUTITEMWINDOW,-1,execUpdateShortcut);
AUTOGENERATE_FUNCTION(UUIAPI_SLIDERCTRL,-1,execGetTotalTickCount);
AUTOGENERATE_FUNCTION(UUIAPI_SLIDERCTRL,-1,execSetCurrentTick);
AUTOGENERATE_FUNCTION(UUIAPI_SLIDERCTRL,-1,execGetCurrentTick);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSBARCTRL,-1,execSetRegenInfo);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSBARCTRL,-1,execSetPointExpPercentRate);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSBARCTRL,-1,execSetPointPercent);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSBARCTRL,-1,execSetPoint);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSICONCTRL,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSICONCTRL,-1,execAddCol);
AUTOGENERATE_FUNCTION(UUIAPI_STATUSICONCTRL,-1,execAddRow);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTBOX,-1,execSetTooltipString);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTBOX,-1,execGetText);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTBOX,-1,execSetInt);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTBOX,-1,execSetAlign);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTBOX,-1,execSetText);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTBOX,-1,execSetTextColor);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTLISTBOX,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTLISTBOX,-1,execAddString);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTURECTRL,-1,execGetTextureName);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTURECTRL,-1,execSetTextureWithObject);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTURECTRL,-1,execSetTextureWithClanCrest);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTURECTRL,-1,execSetTextureCtrlType);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTURECTRL,-1,execSetTexture);
AUTOGENERATE_FUNCTION(UUIAPI_TEXTURECTRL,-1,execSetUV);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execSetNodeItemTexture);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execSetNodeItemText);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execShowScrollBar);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execGetParentNode);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execGetChildNode);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execIsExpandedNode);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execIsNodeNameExist);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execDeleteNode);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execGetExpandedNode);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execSetExpandedNode);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execClear);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execInsertNodeItem);
AUTOGENERATE_FUNCTION(UUIAPI_TREECTRL,-1,execInsertNode);
AUTOGENERATE_FUNCTION(UUIDATA_AGIT,-1,execRequestCheckAvailability);
AUTOGENERATE_FUNCTION(UUIDATA_AGIT,-1,execRequestOpenDecoNPC);
AUTOGENERATE_FUNCTION(UUIDATA_AGIT,-1,execGetDecoNPCInfo);
AUTOGENERATE_FUNCTION(UUIDATA_AGIT,-1,execGetAllDecoNPCInfo);
AUTOGENERATE_FUNCTION(UUIDATA_API,-1,execChangeToPrevState);
AUTOGENERATE_FUNCTION(UUIDATA_API,-1,execSetState);
AUTOGENERATE_FUNCTION(UUIDATA_ARTIFACT,-1,execFindArtifactData);
AUTOGENERATE_FUNCTION(UUIDATA_ARTIFACT,-1,execGetAllArtifactData);
AUTOGENERATE_FUNCTION(UUIDATA_ARTIFACT,-1,execGetArtifactEnchantCondition);
AUTOGENERATE_FUNCTION(UUIDATA_ARTIFACT,-1,execGetArtifactMaterialGroupList);
AUTOGENERATE_FUNCTION(UUIDATA_ARTIFACT,-1,execGetArtifactMinEnchantMaterial);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execRequestOpenUnionWnd);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execRequestUnionInfo);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execGetSubClanSkillLevel);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execGetSkillLevel);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execRequestSubClanSkillList);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execRequestClanSkillList);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execRequestClanInfo);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execGetNameValue);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execGetAllianceCrestTexture);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execGetEmblemTexture);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execGetCrestTexture);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execGetAllianceName);
AUTOGENERATE_FUNCTION(UUIDATA_CLAN,-1,execGetName);
AUTOGENERATE_FUNCTION(UUIDATA_ENSOUL,-1,execGetEnsoulExtractionFeeInfoByItemId);
AUTOGENERATE_FUNCTION(UUIDATA_ENSOUL,-1,execGetEnsoulFeeInfoByItemId);
AUTOGENERATE_FUNCTION(UUIDATA_ENSOUL,-1,execGetEnsoulStoneInfo);
AUTOGENERATE_FUNCTION(UUIDATA_ENSOUL,-1,execGetEnsoulOptionInfo);
AUTOGENERATE_FUNCTION(UUIDATA_ENSOUL,-1,execGetEnsoulSlotCount);
AUTOGENERATE_FUNCTION(UUIDATA_GAMETIP,-1,execGetDataByIndex);
AUTOGENERATE_FUNCTION(UUIDATA_GAMETIP,-1,execGetDataCount);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetDyePotentialSlotFeeUIData);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetDyePotentialFeeDataBySlot);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetHennaEmblemTex);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetDyeCombinationData);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetDyePotentialFeeData);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetDyePotentialExpDataList);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetDyePotentialDataList);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetDyePotentialData);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetHennaDyeItemClassID);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetHennaDyeItemLevel);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetMaxDyeChargeAmount);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetDyeEffectSkillInfo);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetIconTex);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetDescription);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetItemName);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetAddtionNameS);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetIconTexS);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetDescriptionS);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetItemNameS);
AUTOGENERATE_FUNCTION(UUIDATA_HENNA,-1,execGetItemCheck);
AUTOGENERATE_FUNCTION(UUIDATA_HUNTINGZONE,-1,execGetHuntingZoneData);
AUTOGENERATE_FUNCTION(UUIDATA_HUNTINGZONE,-1,execGetHuntingDescription);
AUTOGENERATE_FUNCTION(UUIDATA_HUNTINGZONE,-1,execGetHuntingZone);
AUTOGENERATE_FUNCTION(UUIDATA_HUNTINGZONE,-1,execGetHuntingZoneLoc);
AUTOGENERATE_FUNCTION(UUIDATA_HUNTINGZONE,-1,execGetMaxLevel);
AUTOGENERATE_FUNCTION(UUIDATA_HUNTINGZONE,-1,execGetMinLevel);
AUTOGENERATE_FUNCTION(UUIDATA_HUNTINGZONE,-1,execGetHuntingZoneType);
AUTOGENERATE_FUNCTION(UUIDATA_HUNTINGZONE,-1,execGetHuntingZoneName);
AUTOGENERATE_FUNCTION(UUIDATA_HUNTINGZONE,-1,execIsValidData);
AUTOGENERATE_FUNCTION(UUIDATA_INVENTORY,-1,execGetAllDefaultActionPeelItem);
AUTOGENERATE_FUNCTION(UUIDATA_INVENTORY,-1,execGetAllEnchantableInvenItem);
AUTOGENERATE_FUNCTION(UUIDATA_INVENTORY,-1,execGetItemByScriptFilter);
AUTOGENERATE_FUNCTION(UUIDATA_INVENTORY,-1,execGetAllArtifactItem);
AUTOGENERATE_FUNCTION(UUIDATA_INVENTORY,-1,execGetAllQuestItem);
AUTOGENERATE_FUNCTION(UUIDATA_INVENTORY,-1,execGetAllInvenItem);
AUTOGENERATE_FUNCTION(UUIDATA_INVENTORY,-1,execGetAllEquipItem);
AUTOGENERATE_FUNCTION(UUIDATA_INVENTORY,-1,execGetAllItem);
AUTOGENERATE_FUNCTION(UUIDATA_INVENTORY,-1,execIsQuestItemByClassID);
AUTOGENERATE_FUNCTION(UUIDATA_INVENTORY,-1,execIsQuestItem);
AUTOGENERATE_FUNCTION(UUIDATA_INVENTORY,-1,execIsEquipItemByClassID);
AUTOGENERATE_FUNCTION(UUIDATA_INVENTORY,-1,execIsEquipItem);
AUTOGENERATE_FUNCTION(UUIDATA_INVENTORY,-1,execFindItemByClassID);
AUTOGENERATE_FUNCTION(UUIDATA_INVENTORY,-1,execFindItem);
AUTOGENERATE_FUNCTION(UUIDATA_INVENTORY,-1,execHasItemByClassID);
AUTOGENERATE_FUNCTION(UUIDATA_INVENTORY,-1,execHasItem);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execIsDualInventorySlot);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetStringMatchingItemList);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execIsDefaultActionPeel);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemCreateInfo);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetEnchantChallengePointData);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetEnchantChallengePointSettingData);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetChallengePointGroupID);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetEnchantScrollSetData);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetEnchantValidateValue);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetDBDeleteRemainTimeString);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetDBDeleteDateString);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetEnchantBlessScrollData);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetBlessedItemName);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetBlessOptionData);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetEnchantedItemSkillDesc);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetAutomaticUseItemType);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetExMeshName);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetExTextureName);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetMeshName);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetTextureName);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetInventoryType);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemNameClass);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetSetItemPeaceEffectDescription);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetSetItemPeaceEffectNum);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetEtcItemTextureName);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetSetItemEnchantEffectDescription);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetSetItemEnchantConditionalValue);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemSetEnchantEffectNum);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetSetItemID);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetSetItemFirstID);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execIsExistSetItem);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetSetItemNum);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetRefineryItemName);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execIsMagicWeapon);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execIsCrystallizable);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemInfoString);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemInfo);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemCrystalType);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemDataType);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemWeight);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemDescription);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemTextureName);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemAdditionalName);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetItemName);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetDataCount);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execFindNextID);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetNextID);
AUTOGENERATE_FUNCTION(UUIDATA_ITEM,-1,execGetFirstID);
AUTOGENERATE_FUNCTION(UUIDATA_MACRO,-1,execGetMacroPresetInfo);
AUTOGENERATE_FUNCTION(UUIDATA_MACRO,-1,execGetMacroPresetIDs);
AUTOGENERATE_FUNCTION(UUIDATA_MACRO,-1,execGetMacroSkillIDList);
AUTOGENERATE_FUNCTION(UUIDATA_MACRO,-1,execGetMacroCommandList);
AUTOGENERATE_FUNCTION(UUIDATA_MACRO,-1,execGetUseSkillID);
AUTOGENERATE_FUNCTION(UUIDATA_MACRO,-1,execGetMacroCount);
AUTOGENERATE_FUNCTION(UUIDATA_MACRO,-1,execGetMacroInfo);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execGetNPCClass);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execGetNPCTextureList);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execGetNPCMesh);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execGetMentoringNPCId);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execGetNPCIconName);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execGetSummonGrade);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execGetSummonMaxCount);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execGetSummonSort);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execGetNpcProperty);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execGetNPCNickName);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execGetNPCName);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execIsValidData);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execGetNextID);
AUTOGENERATE_FUNCTION(UUIDATA_NPC,-1,execGetFirstID);
AUTOGENERATE_FUNCTION(UUIDATA_PARTY,-1,execGetMemberTacticalSign);
AUTOGENERATE_FUNCTION(UUIDATA_PARTY,-1,execGetMemberVirtualName);
AUTOGENERATE_FUNCTION(UUIDATA_PARTY,-1,execMovePartyMember);
AUTOGENERATE_FUNCTION(UUIDATA_PARTY,-1,execGetMemberName);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execShowSelectedBone);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetBoneNameList);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execEquipNPCItem);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execPlayNPCAnim);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetNPCAnimationList);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execSpawnActorAtMyLocation);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execApplyPawnSetting);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execSpawnNPC);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execApplyRightSheathingHide);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execApplyRightOffset);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execApplyRightRotation);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execApplyRightAttachBoneName);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execApplyLeftSheathingHide);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execApplyLeftOffset);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execApplyLeftRotation);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execApplyLeftAttachBoneName);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetSkillLevelListByID);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execIsProfilingEmitter);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execUpdateEmitterProfiling);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execStopEmitterProfiling);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execExecuteEmitterProfiling);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execSetGroundSkillCursor);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execSetSimpleEmitter);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execClearDummyPawn);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execSpawnDummyPawn);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execAddSkillByType);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execAddSkillByVisualEffect);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execAddSkillByID);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execAddSkillByName);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execExecuteSkill);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execStartSimulPawn);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execSetArrowRatio);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execSetSkillDeleteRatio);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execSetSkillCancelRatio);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execSetSkillUseRatio);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execSetPawnNum);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execSaveSimulMesh);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execResetSimulMesh);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execLoadSimulMesh);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execSetMantleOffset);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetMantleOffset);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetChestMesh);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execUpdateAnimForce);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execRemoveAnimForce);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execAddAnimForce);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetAnimForceInfo);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetAnimForceNumber);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetSimulAnimName);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execUpdateCollision);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execRemoveCollision);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execAddCollision);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetCollisionInfo);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetCollisionType);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetCollisionNumber);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execRemoveAnchorVertex);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execAddAnchorVertex);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetVertexNumber);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetSimulMeshName);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetAnimFrame);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execPlayPCComboAnim);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execPlayPCAnim);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetPCAnimationList);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execApplyItemEnchanted);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execApplyItemRefinery);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execEquipPCItem);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetHairAccOffset);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execAdjustHairAccOffset);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetBHairInfo);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetAHairInfo);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetFaceInfo);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execApplyHairColor);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execApplyHair);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execApplyFace);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetExceptionalHairColorList);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetExceptionallHairList);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetExceptionalFaceList);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execChangeMyPC);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execDuplicateCharacter);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execSpawnCharacter);
AUTOGENERATE_FUNCTION(UUIDATA_PAWNVIEWER,-1,execGetClassNameList);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetPetEXPRate);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execGetSummonNum);
AUTOGENERATE_FUNCTION(UUIDATA_PET,-1,execIsHavePet);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execSetAbilityPoint);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execIsInPrison);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execIsInDethrone);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execGetMeshType);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execGetInventoryCount);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execGetInventoryLimit);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execHasCrystallizeAbility);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execGetPlayerEnvironment);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execGetPlayerMoveType);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execGetPlayerEXPRate);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execGetRecipeShopMsg);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execGetPlayerID);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execIsLegend);
AUTOGENERATE_FUNCTION(UUIDATA_PLAYER,-1,execIsHero);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execIsAcceptableQuest);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestStatus);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execIsDoingQuest);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execIsClearedQuest);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execIsClassLimitContains);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestPriority);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestCategoryID);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetMarkType);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestReward);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestIscategory);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execIsShowableItemNumQuest);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execIsShowableJournalQuest);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestZoneName);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestZone);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetClearedQuest);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestType);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetMaxLevel);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetMinLevel);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetIntro);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetRequirement);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetStartNPCID);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetStartNPCLoc);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetTargetName);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetTargetLoc);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestItem);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestDescription);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestJournalNameSplit);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestJournalNameLine);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestJournalName);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetQuestName);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execIsMinimapOnly);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execIsValidData);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetNextID);
AUTOGENERATE_FUNCTION(UUIDATA_QUEST,-1,execGetFirstID);
AUTOGENERATE_FUNCTION(UUIDATA_RAID,-1,execGetRaidDataKeyList);
AUTOGENERATE_FUNCTION(UUIDATA_RAID,-1,execGetRaidRecommendLevel);
AUTOGENERATE_FUNCTION(UUIDATA_RAID,-1,execGetRaidLoc);
AUTOGENERATE_FUNCTION(UUIDATA_RAID,-1,execGetRaidDescription);
AUTOGENERATE_FUNCTION(UUIDATA_RAID,-1,execGetRaidMonsterZone);
AUTOGENERATE_FUNCTION(UUIDATA_RAID,-1,execGetRaidMonsterLevel);
AUTOGENERATE_FUNCTION(UUIDATA_RAID,-1,execGetRaidMonsterID);
AUTOGENERATE_FUNCTION(UUIDATA_RAID,-1,execIsValidData);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execIsOfferingItem);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeMaterialItem);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeIsMultipleProduct);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeSuccessRate);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeDescription);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeLevel);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeMpConsume);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeCrystalType);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeProductNum);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeProductID);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeIconName);
AUTOGENERATE_FUNCTION(UUIDATA_RECIPE,-1,execGetRecipeItemID);
AUTOGENERATE_FUNCTION(UUIDATA_REFINERYOPTION,-1,execGetOptionDescription);
AUTOGENERATE_FUNCTION(UUIDATA_REFINERYOPTION,-1,execGetQuality);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetMSCondWeapons);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetMSCondEquipType);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetMSCondItem);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetAutomaticUseSkillType);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetNextDefaultToppingSkillExtraInfo);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetFirstDefaultToppingSkillExtraInfo);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetToppingSkillExtraInfo);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execIsToppingSkill);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetCurrentSkillList);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execIsAvailableClass);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execSkillIsNewOrUp);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetUltimateSkillLevel);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetCastRange);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetMpConsume);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetHpConsume);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execIsAlchemySkill);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetOperateType);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetEnchantIcon);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetEnchantSkillLevel);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetEnchantName);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetDescription);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetName);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetIconPanel2);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetIconPanel);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetIconName);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetDataCount);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetNextID);
AUTOGENERATE_FUNCTION(UUIDATA_SKILL,-1,execGetFirstID);
AUTOGENERATE_FUNCTION(UUIDATA_STATICOBJECT,-1,execGetStaticObjectShowHP);
AUTOGENERATE_FUNCTION(UUIDATA_STATICOBJECT,-1,execGetStaticObjectName);
AUTOGENERATE_FUNCTION(UUIDATA_STATICOBJECT,-1,execGetServerObjectHP);
AUTOGENERATE_FUNCTION(UUIDATA_STATICOBJECT,-1,execGetServerObjectMaxHP);
AUTOGENERATE_FUNCTION(UUIDATA_STATICOBJECT,-1,execGetServerObjectType);
AUTOGENERATE_FUNCTION(UUIDATA_STATICOBJECT,-1,execGetServerObjectName);
AUTOGENERATE_FUNCTION(UUIDATA_STATICOBJECT,-1,execGetServerObjectNameID);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetActor);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execIsVehicle);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execIsHPShowableNPC);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execIsCanBeAttacked);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execIsPet);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execIsNpc);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execIsServerObject);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetClassID);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetPledgeID);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetNameColor);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetName);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetMP);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetMaxMP);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetHP);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetMaxHP);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetUserRank);
AUTOGENERATE_FUNCTION(UUIDATA_TARGET,-1,execGetTargetID);
AUTOGENERATE_FUNCTION(UUIDATA_TRANSFORM,-1,execGetNpcID);
AUTOGENERATE_FUNCTION(UUIDATA_TUTORIALLIST,-1,execCheckTutorial);
AUTOGENERATE_FUNCTION(UUIDATA_USER,-1,execIsDethroneComrade);
AUTOGENERATE_FUNCTION(UUIDATA_USER,-1,execIsDethroneEnemy);
AUTOGENERATE_FUNCTION(UUIDATA_USER,-1,execIsPrologueGrowType);
AUTOGENERATE_FUNCTION(UUIDATA_USER,-1,execGetPrologueGrowType);
AUTOGENERATE_FUNCTION(UUIDATA_USER,-1,execGetClanType);
AUTOGENERATE_FUNCTION(UUIDATA_USER,-1,execGetUserName);
AUTOGENERATE_FUNCTION(UUnionActionAPI,-1,execRequestUnionStart);
AUTOGENERATE_FUNCTION(UUnionActionAPI,-1,execRequestUnionSummon);
AUTOGENERATE_FUNCTION(UUnionActionAPI,-1,execRequestUnionAdjust);
AUTOGENERATE_FUNCTION(UUnionActionAPI,-1,execRequestUnionRequest);
AUTOGENERATE_FUNCTION(UUnionActionAPI,-1,execRequestUnionWithdraw);
AUTOGENERATE_FUNCTION(UUnionActionAPI,-1,execRequestUnionChange);
AUTOGENERATE_FUNCTION(UUnionActionAPI,-1,execRequestUnionJoin);
AUTOGENERATE_FUNCTION(UVehicleAPI,-1,execAirShipMoveDown);
AUTOGENERATE_FUNCTION(UVehicleAPI,-1,execAirShipMoveUp);
AUTOGENERATE_FUNCTION(UVehicleAPI,-1,execRequestExAirShipTeleport);
AUTOGENERATE_FUNCTION(UVehicleAPI,-1,execGetVehicle);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execReloadCurPage);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execGoForwardPage);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execCanGoForwardPage);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execGoBackPage);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execCanGoBackPage);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execNavigate);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execSetCookie);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execGetCookie);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execExecuteJavaScript);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execGetUrl);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execGetURLEncodedAsUTF8);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execExecuteJavaScriptWithFloatResult);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execExecuteJavaScriptWithIntegerResult);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execExecuteJavaScriptWithStringResult);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execGoToHistoryOffset);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execNavigateAsGetJson);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execNavigateAsGet);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execNavigateAsPost);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execPushParam);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execBeginParam);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execWithoutWebSession);
AUTOGENERATE_FUNCTION(UWebBrowserHandle,-1,execWithWebSession);

#ifndef NAMES_ONLY
#undef AUTOGENERATE_NAME
#undef AUTOGENERATE_FUNCTION
#endif

#if SUPPORTS_PRAGMA_PACK
#pragma pack (pop)
#endif

#if __STATIC_LINK
#ifndef NWINDOW_NATIVE_DEFS
#define NWINDOW_NATIVE_DEFS

DECLARE_NATIVE_TYPE(NWindow,UActionAPI);
DECLARE_NATIVE_TYPE(NWindow,UUIEventManager);
DECLARE_NATIVE_TYPE(NWindow,UAnimTextureHandle);
DECLARE_NATIVE_TYPE(NWindow,UTextureHandle);
DECLARE_NATIVE_TYPE(NWindow,UArenaAPI);
DECLARE_NATIVE_TYPE(NWindow,UAuctionAPI);
DECLARE_NATIVE_TYPE(NWindow,UAudioAPI);
DECLARE_NATIVE_TYPE(NWindow,UBarHandle);
DECLARE_NATIVE_TYPE(NWindow,UWindowHandle);
DECLARE_NATIVE_TYPE(NWindow,UBookMarkAPI);
DECLARE_NATIVE_TYPE(NWindow,UButtonHandle);
DECLARE_NATIVE_TYPE(NWindow,UCharacterViewportWindowHandle);
DECLARE_NATIVE_TYPE(NWindow,UChatWindowHandle);
DECLARE_NATIVE_TYPE(NWindow,UTextListBoxHandle);
DECLARE_NATIVE_TYPE(NWindow,UCheckBoxHandle);
DECLARE_NATIVE_TYPE(NWindow,UComboBoxHandle);
DECLARE_NATIVE_TYPE(NWindow,UCommandChannelAPI);
DECLARE_NATIVE_TYPE(NWindow,UConsignmentSaleAPI);
DECLARE_NATIVE_TYPE(NWindow,UDrawPanelHandle);
DECLARE_NATIVE_TYPE(NWindow,UEditBoxHandle);
DECLARE_NATIVE_TYPE(NWindow,UEffectViewportWndHandle);
DECLARE_NATIVE_TYPE(NWindow,UEnchantAPI);
DECLARE_NATIVE_TYPE(NWindow,UEnsoulAPI);
DECLARE_NATIVE_TYPE(NWindow,UEventMatchAPI);
DECLARE_NATIVE_TYPE(NWindow,UFileListAPI);
DECLARE_NATIVE_TYPE(NWindow,UFlashCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,UGFxMovieView);
DECLARE_NATIVE_TYPE(NWindow,UGFxUIScript);
DECLARE_NATIVE_TYPE(NWindow,UUIScript);
DECLARE_NATIVE_TYPE(NWindow,UGFxValue);
DECLARE_NATIVE_TYPE(NWindow,UGMAPI);
DECLARE_NATIVE_TYPE(NWindow,UGraphicAPI);
DECLARE_NATIVE_TYPE(NWindow,UHairshopAPI);
DECLARE_NATIVE_TYPE(NWindow,UHennaAPI);
DECLARE_NATIVE_TYPE(NWindow,UHeroBookAPI);
DECLARE_NATIVE_TYPE(NWindow,UHeroTowerAPI);
DECLARE_NATIVE_TYPE(NWindow,UHomunculusAPI);
DECLARE_NATIVE_TYPE(NWindow,UHtmlHandle);
DECLARE_NATIVE_TYPE(NWindow,UInputAPI);
DECLARE_NATIVE_TYPE(NWindow,UItemLookChangeAPI);
DECLARE_NATIVE_TYPE(NWindow,UItemWindowHandle);
DECLARE_NATIVE_TYPE(NWindow,UL2UIPacketBase);
DECLARE_NATIVE_TYPE(NWindow,UListBoxHandle);
DECLARE_NATIVE_TYPE(NWindow,UListCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,UMacroAPI);
DECLARE_NATIVE_TYPE(NWindow,UMiniMapAPI);
DECLARE_NATIVE_TYPE(NWindow,UMinimapCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,UMultiEditBoxHandle);
DECLARE_NATIVE_TYPE(NWindow,UNameCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,UNewEnchantAPI);
DECLARE_NATIVE_TYPE(NWindow,UOlympiadAPI);
DECLARE_NATIVE_TYPE(NWindow,UPartyMatchAPI);
DECLARE_NATIVE_TYPE(NWindow,UPersonalConnectionAPI);
DECLARE_NATIVE_TYPE(NWindow,UUIDataManager);
DECLARE_NATIVE_TYPE(NWindow,UPetAPI);
DECLARE_NATIVE_TYPE(NWindow,UPetitionAPI);
DECLARE_NATIVE_TYPE(NWindow,UPostWndAPI);
DECLARE_NATIVE_TYPE(NWindow,UProgressCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,UPropertyControllerHandle);
DECLARE_NATIVE_TYPE(NWindow,UQuestAPI);
DECLARE_NATIVE_TYPE(NWindow,URadarMapCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,URadioButtonHandle);
DECLARE_NATIVE_TYPE(NWindow,URandomCraftAPI);
DECLARE_NATIVE_TYPE(NWindow,URecipeAPI);
DECLARE_NATIVE_TYPE(NWindow,URefineryAPI);
DECLARE_NATIVE_TYPE(NWindow,URichListCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,USceneCameraCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,USceneEditorAPI);
DECLARE_NATIVE_TYPE(NWindow,USceneMusicCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,USceneNpcCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,UScenePcCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,USceneScreenCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,UShortcutAPI);
DECLARE_NATIVE_TYPE(NWindow,UShortcutWndAPI);
DECLARE_NATIVE_TYPE(NWindow,USiegeAPI);
DECLARE_NATIVE_TYPE(NWindow,USliderCtrlHandle);
DECLARE_NATIVE_TYPE(NWindow,USSAOAPI);
DECLARE_NATIVE_TYPE(NWindow,USSQAPI);
DECLARE_NATIVE_TYPE(NWindow,UStatisticAPI);
DECLARE_NATIVE_TYPE(NWindow,UStatusBarHandle);
DECLARE_NATIVE_TYPE(NWindow,UStatusBaseHandle);
DECLARE_NATIVE_TYPE(NWindow,UStatusIconHandle);
DECLARE_NATIVE_TYPE(NWindow,UStatusRoundHandle);
DECLARE_NATIVE_TYPE(NWindow,UTabHandle);
DECLARE_NATIVE_TYPE(NWindow,UTeamMatchAPI);
DECLARE_NATIVE_TYPE(NWindow,UTeleportListAPI);
DECLARE_NATIVE_TYPE(NWindow,UTextBoxHandle);
DECLARE_NATIVE_TYPE(NWindow,UTreeHandle);
DECLARE_NATIVE_TYPE(NWindow,UTutorialAPI);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_BUTTON);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_WINDOW);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_CHECKBOX);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_COMBOBOX);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_EDITBOX);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_EFFECTBUTTON);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_INVENWEIGHT);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_ITEMWINDOW);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_LISTCTRL);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_MINIMAPCTRL);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_MULTIEDITBOX);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_MULTISELLITEMINFO);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_MULTISELLNEEDEDITEM);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_SHORTCUTITEMWINDOW);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_SLIDERCTRL);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_STATUSBARCTRL);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_STATUSICONCTRL);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_TEXTBOX);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_TEXTLISTBOX);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_TEXTURECTRL);
DECLARE_NATIVE_TYPE(NWindow,UUIAPI_TREECTRL);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_AGIT);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_API);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_ARTIFACT);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_CLAN);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_ENSOUL);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_GAMETIP);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_HENNA);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_HUNTINGZONE);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_INVENTORY);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_ITEM);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_MACRO);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_NPC);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_PARTY);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_PAWNVIEWER);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_PET);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_PLAYER);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_QUEST);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_RAID);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_RECIPE);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_REFINERYOPTION);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_SKILL);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_STATICOBJECT);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_TARGET);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_TRANSFORM);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_TUTORIALLIST);
DECLARE_NATIVE_TYPE(NWindow,UUIDATA_USER);
DECLARE_NATIVE_TYPE(NWindow,UUnionActionAPI);
DECLARE_NATIVE_TYPE(NWindow,UVehicleAPI);
DECLARE_NATIVE_TYPE(NWindow,UWebBrowserHandle);

#define AUTO_INITIALIZE_REGISTRANTS_NWINDOW \
	UActionAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUActionAPINative; \
	UUIEventManager::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIEventManagerNative; \
	UAnimTextureHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUAnimTextureHandleNative; \
	UTextureHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUTextureHandleNative; \
	UArenaAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUArenaAPINative; \
	UAuctionAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUAuctionAPINative; \
	UAudioAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUAudioAPINative; \
	UBarHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUBarHandleNative; \
	UWindowHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUWindowHandleNative; \
	UBookMarkAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUBookMarkAPINative; \
	UButtonHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUButtonHandleNative; \
	UCharacterViewportWindowHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUCharacterViewportWindowHandleNative; \
	UChatWindowHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUChatWindowHandleNative; \
	UTextListBoxHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUTextListBoxHandleNative; \
	UCheckBoxHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUCheckBoxHandleNative; \
	UComboBoxHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUComboBoxHandleNative; \
	UCommandChannelAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUCommandChannelAPINative; \
	UConsignmentSaleAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUConsignmentSaleAPINative; \
	UDrawPanelHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUDrawPanelHandleNative; \
	UEditBoxHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUEditBoxHandleNative; \
	UEffectViewportWndHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUEffectViewportWndHandleNative; \
	UEnchantAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUEnchantAPINative; \
	UEnsoulAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUEnsoulAPINative; \
	UEventMatchAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUEventMatchAPINative; \
	UFileListAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUFileListAPINative; \
	UFlashCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUFlashCtrlHandleNative; \
	UGFxMovieView::StaticClass(); \
	UGFxUIScript::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUGFxUIScriptNative; \
	UUIScript::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIScriptNative; \
	UGFxValue::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUGFxValueNative; \
	UGMAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUGMAPINative; \
	UGraphicAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUGraphicAPINative; \
	UHairshopAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUHairshopAPINative; \
	UHennaAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUHennaAPINative; \
	UHeroBookAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUHeroBookAPINative; \
	UHeroTowerAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUHeroTowerAPINative; \
	UHomunculusAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUHomunculusAPINative; \
	UHtmlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUHtmlHandleNative; \
	UInputAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUInputAPINative; \
	UItemLookChangeAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUItemLookChangeAPINative; \
	UItemWindowHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUItemWindowHandleNative; \
	UL2UIPacketBase::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUL2UIPacketBaseNative; \
	UListBoxHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUListBoxHandleNative; \
	UListCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUListCtrlHandleNative; \
	UMacroAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUMacroAPINative; \
	UMiniMapAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUMiniMapAPINative; \
	UMinimapCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUMinimapCtrlHandleNative; \
	UMultiEditBoxHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUMultiEditBoxHandleNative; \
	UNameCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUNameCtrlHandleNative; \
	UNewEnchantAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUNewEnchantAPINative; \
	UOlympiadAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUOlympiadAPINative; \
	UPartyMatchAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUPartyMatchAPINative; \
	UPersonalConnectionAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUPersonalConnectionAPINative; \
	UUIDataManager::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDataManagerNative; \
	UPetAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUPetAPINative; \
	UPetitionAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUPetitionAPINative; \
	UPostWndAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUPostWndAPINative; \
	UProgressCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUProgressCtrlHandleNative; \
	UPropertyControllerHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUPropertyControllerHandleNative; \
	UQuestAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUQuestAPINative; \
	URadarMapCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowURadarMapCtrlHandleNative; \
	URadioButtonHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowURadioButtonHandleNative; \
	URandomCraftAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowURandomCraftAPINative; \
	URecipeAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowURecipeAPINative; \
	URefineryAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowURefineryAPINative; \
	URichListCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowURichListCtrlHandleNative; \
	USceneCameraCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUSceneCameraCtrlHandleNative; \
	USceneEditorAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUSceneEditorAPINative; \
	USceneMusicCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUSceneMusicCtrlHandleNative; \
	USceneNpcCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUSceneNpcCtrlHandleNative; \
	UScenePcCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUScenePcCtrlHandleNative; \
	USceneScreenCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUSceneScreenCtrlHandleNative; \
	UShortcutAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUShortcutAPINative; \
	UShortcutWndAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUShortcutWndAPINative; \
	USiegeAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUSiegeAPINative; \
	USliderCtrlHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUSliderCtrlHandleNative; \
	USSAOAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUSSAOAPINative; \
	USSQAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUSSQAPINative; \
	UStatisticAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUStatisticAPINative; \
	UStatusBarHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUStatusBarHandleNative; \
	UStatusBaseHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUStatusBaseHandleNative; \
	UStatusIconHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUStatusIconHandleNative; \
	UStatusRoundHandle::StaticClass(); \
	UTabHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUTabHandleNative; \
	UTeamMatchAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUTeamMatchAPINative; \
	UTeleportListAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUTeleportListAPINative; \
	UTextBoxHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUTextBoxHandleNative; \
	UTreeHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUTreeHandleNative; \
	UTutorialAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUTutorialAPINative; \
	UUIAPI_BUTTON::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_BUTTONNative; \
	UUIAPI_WINDOW::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_WINDOWNative; \
	UUIAPI_CHECKBOX::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_CHECKBOXNative; \
	UUIAPI_COMBOBOX::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_COMBOBOXNative; \
	UUIAPI_EDITBOX::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_EDITBOXNative; \
	UUIAPI_EFFECTBUTTON::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_EFFECTBUTTONNative; \
	UUIAPI_INVENWEIGHT::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_INVENWEIGHTNative; \
	UUIAPI_ITEMWINDOW::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_ITEMWINDOWNative; \
	UUIAPI_LISTCTRL::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_LISTCTRLNative; \
	UUIAPI_MINIMAPCTRL::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_MINIMAPCTRLNative; \
	UUIAPI_MULTIEDITBOX::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_MULTIEDITBOXNative; \
	UUIAPI_MULTISELLITEMINFO::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_MULTISELLITEMINFONative; \
	UUIAPI_MULTISELLNEEDEDITEM::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_MULTISELLNEEDEDITEMNative; \
	UUIAPI_SHORTCUTITEMWINDOW::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_SHORTCUTITEMWINDOWNative; \
	UUIAPI_SLIDERCTRL::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_SLIDERCTRLNative; \
	UUIAPI_STATUSBARCTRL::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_STATUSBARCTRLNative; \
	UUIAPI_STATUSICONCTRL::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_STATUSICONCTRLNative; \
	UUIAPI_TEXTBOX::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_TEXTBOXNative; \
	UUIAPI_TEXTLISTBOX::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_TEXTLISTBOXNative; \
	UUIAPI_TEXTURECTRL::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_TEXTURECTRLNative; \
	UUIAPI_TREECTRL::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIAPI_TREECTRLNative; \
	UUIDATA_AGIT::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_AGITNative; \
	UUIDATA_API::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_APINative; \
	UUIDATA_ARTIFACT::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_ARTIFACTNative; \
	UUIDATA_CLAN::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_CLANNative; \
	UUIDATA_ENSOUL::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_ENSOULNative; \
	UUIDATA_GAMETIP::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_GAMETIPNative; \
	UUIDATA_HENNA::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_HENNANative; \
	UUIDATA_HUNTINGZONE::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_HUNTINGZONENative; \
	UUIDATA_INVENTORY::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_INVENTORYNative; \
	UUIDATA_ITEM::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_ITEMNative; \
	UUIDATA_MACRO::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_MACRONative; \
	UUIDATA_NPC::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_NPCNative; \
	UUIDATA_PARTY::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_PARTYNative; \
	UUIDATA_PAWNVIEWER::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_PAWNVIEWERNative; \
	UUIDATA_PET::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_PETNative; \
	UUIDATA_PLAYER::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_PLAYERNative; \
	UUIDATA_QUEST::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_QUESTNative; \
	UUIDATA_RAID::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_RAIDNative; \
	UUIDATA_RECIPE::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_RECIPENative; \
	UUIDATA_REFINERYOPTION::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_REFINERYOPTIONNative; \
	UUIDATA_SKILL::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_SKILLNative; \
	UUIDATA_STATICOBJECT::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_STATICOBJECTNative; \
	UUIDATA_TARGET::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_TARGETNative; \
	UUIDATA_TRANSFORM::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_TRANSFORMNative; \
	UUIDATA_TUTORIALLIST::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_TUTORIALLISTNative; \
	UUIDATA_USER::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUIDATA_USERNative; \
	UUnionActionAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUUnionActionAPINative; \
	UVehicleAPI::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUVehicleAPINative; \
	UWebBrowserHandle::StaticClass(); \
	GNativeLookupFuncs[Lookup++] = &FindNWindowUWebBrowserHandleNative; \

#endif // NWindow_NATIVE_DEFS

#ifdef NATIVES_ONLY
NATIVE_INFO(UActionAPI) GNWindowUActionAPINatives[] = 
{ 
	MAP_NATIVE(UActionAPI,execGetActionUIData)
	MAP_NATIVE(UActionAPI,execGetActionAutomaticUseType)
	MAP_NATIVE(UActionAPI,execGetActionNameBySocialIndex)
	MAP_NATIVE(UActionAPI,execRequestSummonedAllSkillActionList)
	MAP_NATIVE(UActionAPI,execRequestSummonedCommonActionList)
	MAP_NATIVE(UActionAPI,execRequestPetActionList)
	MAP_NATIVE(UActionAPI,execRequestActionList)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UActionAPI);

NATIVE_INFO(UUIEventManager) GNWindowUUIEventManagerNatives[] = 
{ 
	MAP_NATIVE(UUIEventManager,execGetUIState)
	MAP_NATIVE(UUIEventManager,execSMessageBox)
	MAP_NATIVE(UUIEventManager,execMessageBox)
	MAP_NATIVE(UUIEventManager,execSetUIState)
	MAP_NATIVE(UUIEventManager,execRegisterState)
	MAP_NATIVE(UUIEventManager,execRegisterEvent)
	MAP_NATIVE(UUIEventManager,execItemInfoToParam)
	MAP_NATIVE(UUIEventManager,execParamToItemInfo)
	MAP_NATIVE(UUIEventManager,execParseFloat)
	MAP_NATIVE(UUIEventManager,execParseINT64)
	MAP_NATIVE(UUIEventManager,execParseInt)
	MAP_NATIVE(UUIEventManager,execParseString)
	MAP_NATIVE(UUIEventManager,execParamAddINT64)
	MAP_NATIVE(UUIEventManager,execParamAdd)
	MAP_NATIVE(UUIEventManager,execExecuteEvent)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIEventManager);

NATIVE_INFO(UAnimTextureHandle) GNWindowUAnimTextureHandleNatives[] = 
{ 
	MAP_NATIVE(UAnimTextureHandle,execStop)
	MAP_NATIVE(UAnimTextureHandle,execPause)
	MAP_NATIVE(UAnimTextureHandle,execPlay)
	MAP_NATIVE(UAnimTextureHandle,execSetTimes)
	MAP_NATIVE(UAnimTextureHandle,execSetLoopCount)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UAnimTextureHandle);

NATIVE_INFO(UTextureHandle) GNWindowUTextureHandleNatives[] = 
{ 
	MAP_NATIVE(UTextureHandle,execSetColorModify)
	MAP_NATIVE(UTextureHandle,execGetColor)
	MAP_NATIVE(UTextureHandle,execSetRotatingDirection)
	MAP_NATIVE(UTextureHandle,execSetAutoRotateType)
	MAP_NATIVE(UTextureHandle,execGetTextureName)
	MAP_NATIVE(UTextureHandle,execSetTextureWithObject)
	MAP_NATIVE(UTextureHandle,execSetTextureWithClanCrest)
	MAP_NATIVE(UTextureHandle,execSetTextureCtrlType)
	MAP_NATIVE(UTextureHandle,execSetTextureSize)
	MAP_NATIVE(UTextureHandle,execSetUV)
	MAP_NATIVE(UTextureHandle,execSetTexture)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UTextureHandle);

NATIVE_INFO(UArenaAPI) GNWindowUArenaAPINatives[] = 
{ 
	MAP_NATIVE(UArenaAPI,execRequestMatchGroupChangeMaster)
	MAP_NATIVE(UArenaAPI,execRequestMatchGroupOust)
	MAP_NATIVE(UArenaAPI,execRequestMatchGroupWithdraw)
	MAP_NATIVE(UArenaAPI,execRequestMatchGroupAnswer)
	MAP_NATIVE(UArenaAPI,execRequestMatchGroupAsk)
	MAP_NATIVE(UArenaAPI,execRequestMatchGroup)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UArenaAPI);

NATIVE_INFO(UAuctionAPI) GNWindowUAuctionAPINatives[] = 
{ 
	MAP_NATIVE(UAuctionAPI,execRequestInfoItemAuction)
	MAP_NATIVE(UAuctionAPI,execRequestBidItemAuction)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UAuctionAPI);

NATIVE_INFO(UAudioAPI) GNWindowUAudioAPINatives[] = 
{ 
	MAP_NATIVE(UAudioAPI,execPlayIndexedNotifySound)
	MAP_NATIVE(UAudioAPI,execPlayNotifySound)
	MAP_NATIVE(UAudioAPI,execPlayVoice)
	MAP_NATIVE(UAudioAPI,execStopMusic)
	MAP_NATIVE(UAudioAPI,execPlayMusic)
	MAP_NATIVE(UAudioAPI,execPlaySound)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UAudioAPI);

NATIVE_INFO(UBarHandle) GNWindowUBarHandleNatives[] = 
{ 
	MAP_NATIVE(UBarHandle,execSetTexture)
	MAP_NATIVE(UBarHandle,execClear)
	MAP_NATIVE(UBarHandle,execGetValue)
	MAP_NATIVE(UBarHandle,execSetValue)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UBarHandle);

NATIVE_INFO(UWindowHandle) GNWindowUWindowHandleNatives[] = 
{ 
	MAP_NATIVE(UWindowHandle,execGetResizeFrame)
	MAP_NATIVE(UWindowHandle,execGetCurrentScalableSizeRate)
	MAP_NATIVE(UWindowHandle,execScalingToCurrentSizeType)
	MAP_NATIVE(UWindowHandle,execScalingToDefaultSizeType)
	MAP_NATIVE(UWindowHandle,execSetUpScalableUIDefaultSetting)
	MAP_NATIVE(UWindowHandle,execSetUnConditionalShow)
	MAP_NATIVE(UWindowHandle,execSetCanBeShownDuringScene)
	MAP_NATIVE(UWindowHandle,execSetResizeFrameOffset)
	MAP_NATIVE(UWindowHandle,execEnableDynamicAlpha)
	MAP_NATIVE(UWindowHandle,execGetChildWindow)
	MAP_NATIVE(UWindowHandle,execInsertTooltipDrawItem)
	MAP_NATIVE(UWindowHandle,execSetTooltipCalculateSize)
	MAP_NATIVE(UWindowHandle,execSetShowAndHideAnimType)
	MAP_NATIVE(UWindowHandle,execIsCurrentState)
	MAP_NATIVE(UWindowHandle,execExitState)
	MAP_NATIVE(UWindowHandle,execEnterState)
	MAP_NATIVE(UWindowHandle,execChangeControlOrder)
	MAP_NATIVE(UWindowHandle,execMakeBaseUC)
	MAP_NATIVE(UWindowHandle,execConvertToEditable)
	MAP_NATIVE(UWindowHandle,execSetXMLDocumentInfo)
	MAP_NATIVE(UWindowHandle,execGetXMLDocumentInfo)
	MAP_NATIVE(UWindowHandle,execSaveXMLWindow)
	MAP_NATIVE(UWindowHandle,execLoadXMLWindow)
	MAP_NATIVE(UWindowHandle,execGetControlType)
	MAP_NATIVE(UWindowHandle,execIsControlContainer)
	MAP_NATIVE(UWindowHandle,execSetScript)
	MAP_NATIVE(UWindowHandle,execSetBackTexture)
	MAP_NATIVE(UWindowHandle,execDeleteChildWnd)
	MAP_NATIVE(UWindowHandle,execGetClassName)
	MAP_NATIVE(UWindowHandle,execAddChildWnd)
	MAP_NATIVE(UWindowHandle,execSetEditable)
	MAP_NATIVE(UWindowHandle,execInitRotation)
	MAP_NATIVE(UWindowHandle,execIsFront)
	MAP_NATIVE(UWindowHandle,execClearRotation)
	MAP_NATIVE(UWindowHandle,execRotate)
	MAP_NATIVE(UWindowHandle,execSetSettledWnd)
	MAP_NATIVE(UWindowHandle,execSetScrollUnit)
	MAP_NATIVE(UWindowHandle,execGetScrollHeight)
	MAP_NATIVE(UWindowHandle,execSetScrollHeight)
	MAP_NATIVE(UWindowHandle,execGetScrollPosition)
	MAP_NATIVE(UWindowHandle,execSetScrollPosition)
	MAP_NATIVE(UWindowHandle,execSetScrollBarPosition)
	MAP_NATIVE(UWindowHandle,execSetResizeFrameSize)
	MAP_NATIVE(UWindowHandle,execSetFrameSize)
	MAP_NATIVE(UWindowHandle,execClearAllChildShortcutItemTooltip)
	MAP_NATIVE(UWindowHandle,execClearTooltip)
	MAP_NATIVE(UWindowHandle,execGetTooltipCustomType)
	MAP_NATIVE(UWindowHandle,execSetTooltipCustomType)
	MAP_NATIVE(UWindowHandle,execSetTooltipType)
	MAP_NATIVE(UWindowHandle,execGetTooltipText)
	MAP_NATIVE(UWindowHandle,execSetTooltipText)
	MAP_NATIVE(UWindowHandle,execNotifyAlarm)
	MAP_NATIVE(UWindowHandle,execKillTimer)
	MAP_NATIVE(UWindowHandle,execSetTimer)
	MAP_NATIVE(UWindowHandle,execBringToFront)
	MAP_NATIVE(UWindowHandle,execBringToFrontOf)
	MAP_NATIVE(UWindowHandle,execReleaseFocus)
	MAP_NATIVE(UWindowHandle,execIsFocused)
	MAP_NATIVE(UWindowHandle,execSetFocus)
	MAP_NATIVE(UWindowHandle,execIsEnableWindow)
	MAP_NATIVE(UWindowHandle,execDisableWindow)
	MAP_NATIVE(UWindowHandle,execEnableWindow)
	MAP_NATIVE(UWindowHandle,execSetDragOverTexture)
	MAP_NATIVE(UWindowHandle,execSetVirtualDrag)
	MAP_NATIVE(UWindowHandle,execIsVirtualDrag)
	MAP_NATIVE(UWindowHandle,execSetStuckable)
	MAP_NATIVE(UWindowHandle,execSetDraggable)
	MAP_NATIVE(UWindowHandle,execIsDraggable)
	MAP_NATIVE(UWindowHandle,execIsAnchored)
	MAP_NATIVE(UWindowHandle,execClearAnchor)
	MAP_NATIVE(UWindowHandle,execSetAnchor)
	MAP_NATIVE(UWindowHandle,execDisableTick)
	MAP_NATIVE(UWindowHandle,execEnableTick)
	MAP_NATIVE(UWindowHandle,execMoveShake)
	MAP_NATIVE(UWindowHandle,execMoveExWithTime)
	MAP_NATIVE(UWindowHandle,execMoveC)
	MAP_NATIVE(UWindowHandle,execMoveEx)
	MAP_NATIVE(UWindowHandle,execMoveTo)
	MAP_NATIVE(UWindowHandle,execMove)
	MAP_NATIVE(UWindowHandle,execIsRelativeSize)
	MAP_NATIVE(UWindowHandle,execSetWindowSizeRel43)
	MAP_NATIVE(UWindowHandle,execGetWindowSizeRel)
	MAP_NATIVE(UWindowHandle,execSetWindowSizeRel)
	MAP_NATIVE(UWindowHandle,execGetWindowSize)
	MAP_NATIVE(UWindowHandle,execSetWindowSize)
	MAP_NATIVE(UWindowHandle,execAddWindowSize)
	MAP_NATIVE(UWindowHandle,execGetRect)
	MAP_NATIVE(UWindowHandle,execSetModal)
	MAP_NATIVE(UWindowHandle,execSetAlwaysFullAlpha)
	MAP_NATIVE(UWindowHandle,execSetFontColor)
	MAP_NATIVE(UWindowHandle,execIsAlwaysOnBack)
	MAP_NATIVE(UWindowHandle,execIsAlwaysOnTop)
	MAP_NATIVE(UWindowHandle,execIsVirtual)
	MAP_NATIVE(UWindowHandle,execGetScriptName)
	MAP_NATIVE(UWindowHandle,execGetScript)
	MAP_NATIVE(UWindowHandle,execSetAlpha)
	MAP_NATIVE(UWindowHandle,execGetAlpha)
	MAP_NATIVE(UWindowHandle,execGetTopFrameWnd)
	MAP_NATIVE(UWindowHandle,execIsChildOf)
	MAP_NATIVE(UWindowHandle,execGetChildWindowList)
	MAP_NATIVE(UWindowHandle,execGetParentWindowHandle)
	MAP_NATIVE(UWindowHandle,execChangeParentWindow)
	MAP_NATIVE(UWindowHandle,execGetParentWindowName)
	MAP_NATIVE(UWindowHandle,execGetWindowName)
	MAP_NATIVE(UWindowHandle,execIsMinimizedWindow)
	MAP_NATIVE(UWindowHandle,execIsShowWindow)
	MAP_NATIVE(UWindowHandle,execHideWindow)
	MAP_NATIVE(UWindowHandle,execShowWindow)
	MAP_NATIVE(UWindowHandle,execSetTitlePosOffset)
	MAP_NATIVE(UWindowHandle,execSetWindowTitle)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UWindowHandle);

NATIVE_INFO(UBookMarkAPI) GNWindowUBookMarkAPINatives[] = 
{ 
	MAP_NATIVE(UBookMarkAPI,execRequestGetBookMarkPos)
	MAP_NATIVE(UBookMarkAPI,execRequestChangeBookMarkSlot)
	MAP_NATIVE(UBookMarkAPI,execRequestTelePortBookMark)
	MAP_NATIVE(UBookMarkAPI,execRequestDeleteBookMarkSlot)
	MAP_NATIVE(UBookMarkAPI,execRequestModifyBookMarkSlot)
	MAP_NATIVE(UBookMarkAPI,execRequestSaveBookMarkSlot)
	MAP_NATIVE(UBookMarkAPI,execRequestShowBookMark)
	MAP_NATIVE(UBookMarkAPI,execRequestBookMarkSlotInfo)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UBookMarkAPI);

NATIVE_INFO(UButtonHandle) GNWindowUButtonHandleNatives[] = 
{ 
	MAP_NATIVE(UButtonHandle,execSetDefaultTextDisableColor)
	MAP_NATIVE(UButtonHandle,execSetDefaultTextEnableColor)
	MAP_NATIVE(UButtonHandle,execSetEnable)
	MAP_NATIVE(UButtonHandle,execSetButtonValue)
	MAP_NATIVE(UButtonHandle,execGetButtonValue)
	MAP_NATIVE(UButtonHandle,execIsMouseOver)
	MAP_NATIVE(UButtonHandle,execSetTexture)
	MAP_NATIVE(UButtonHandle,execSetNameText)
	MAP_NATIVE(UButtonHandle,execSetButtonName)
	MAP_NATIVE(UButtonHandle,execGetButtonName)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UButtonHandle);

NATIVE_INFO(UCharacterViewportWindowHandle) GNWindowUCharacterViewportWindowHandleNatives[] = 
{ 
	MAP_NATIVE(UCharacterViewportWindowHandle,execSetBackgroundTex)
	MAP_NATIVE(UCharacterViewportWindowHandle,execApplyPreviewCostumeItem)
	MAP_NATIVE(UCharacterViewportWindowHandle,execSetNPCViewportData)
	MAP_NATIVE(UCharacterViewportWindowHandle,execSetSpawnDuration)
	MAP_NATIVE(UCharacterViewportWindowHandle,execSetCameraDistance)
	MAP_NATIVE(UCharacterViewportWindowHandle,execSetCurrentRotation)
	MAP_NATIVE(UCharacterViewportWindowHandle,execSetDragRotationRate)
	MAP_NATIVE(UCharacterViewportWindowHandle,execSetNPCInfo)
	MAP_NATIVE(UCharacterViewportWindowHandle,execHideNPC)
	MAP_NATIVE(UCharacterViewportWindowHandle,execShowNPC)
	MAP_NATIVE(UCharacterViewportWindowHandle,execAutoAttacking)
	MAP_NATIVE(UCharacterViewportWindowHandle,execPlayAttackAnimation)
	MAP_NATIVE(UCharacterViewportWindowHandle,execPlayAnimation)
	MAP_NATIVE(UCharacterViewportWindowHandle,execSetCharacterOffset)
	MAP_NATIVE(UCharacterViewportWindowHandle,execSetCharacterOffsetZ)
	MAP_NATIVE(UCharacterViewportWindowHandle,execSetUISound)
	MAP_NATIVE(UCharacterViewportWindowHandle,execSpawnEffect)
	MAP_NATIVE(UCharacterViewportWindowHandle,execSpawnNPC)
	MAP_NATIVE(UCharacterViewportWindowHandle,execSetCharacterOffsetY)
	MAP_NATIVE(UCharacterViewportWindowHandle,execSetCharacterOffsetX)
	MAP_NATIVE(UCharacterViewportWindowHandle,execSetCharacterScale)
	MAP_NATIVE(UCharacterViewportWindowHandle,execEndZoom)
	MAP_NATIVE(UCharacterViewportWindowHandle,execStartZoom)
	MAP_NATIVE(UCharacterViewportWindowHandle,execEndRotation)
	MAP_NATIVE(UCharacterViewportWindowHandle,execStartRotation)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UCharacterViewportWindowHandle);

NATIVE_INFO(UChatWindowHandle) GNWindowUChatWindowHandleNatives[] = 
{ 
	MAP_NATIVE(UChatWindowHandle,execISScrollable)
	MAP_NATIVE(UChatWindowHandle,execEnableTexture)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UChatWindowHandle);

NATIVE_INFO(UTextListBoxHandle) GNWindowUTextListBoxHandleNatives[] = 
{ 
	MAP_NATIVE(UTextListBoxHandle,execSetFontIDByName)
	MAP_NATIVE(UTextListBoxHandle,execSetTextListBoxScrollPosition)
	MAP_NATIVE(UTextListBoxHandle,execClear)
	MAP_NATIVE(UTextListBoxHandle,execAddStringToChatWindow)
	MAP_NATIVE(UTextListBoxHandle,execAddString)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UTextListBoxHandle);

NATIVE_INFO(UCheckBoxHandle) GNWindowUCheckBoxHandleNatives[] = 
{ 
	MAP_NATIVE(UCheckBoxHandle,execToggleDisable)
	MAP_NATIVE(UCheckBoxHandle,execSetDisable)
	MAP_NATIVE(UCheckBoxHandle,execIsDisable)
	MAP_NATIVE(UCheckBoxHandle,execIsChecked)
	MAP_NATIVE(UCheckBoxHandle,execSetCheck)
	MAP_NATIVE(UCheckBoxHandle,execSetTitle)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UCheckBoxHandle);

NATIVE_INFO(UComboBoxHandle) GNWindowUComboBoxHandleNatives[] = 
{ 
	MAP_NATIVE(UComboBoxHandle,execGetAdditionalString)
	MAP_NATIVE(UComboBoxHandle,execAddStringWithIconWithGapWithStr)
	MAP_NATIVE(UComboBoxHandle,execAddStringWithIconWithStr)
	MAP_NATIVE(UComboBoxHandle,execAddStringWithIconWithGap)
	MAP_NATIVE(UComboBoxHandle,execAddStringWithIcon)
	MAP_NATIVE(UComboBoxHandle,execAddStringWithFileExt)
	MAP_NATIVE(UComboBoxHandle,execGetFileExtInfo)
	MAP_NATIVE(UComboBoxHandle,execAddStringWithColor)
	MAP_NATIVE(UComboBoxHandle,execGetNumOfItems)
	MAP_NATIVE(UComboBoxHandle,execClear)
	MAP_NATIVE(UComboBoxHandle,execSetSelectedNum)
	MAP_NATIVE(UComboBoxHandle,execGetSelectedNum)
	MAP_NATIVE(UComboBoxHandle,execGetReserved)
	MAP_NATIVE(UComboBoxHandle,execGetString)
	MAP_NATIVE(UComboBoxHandle,execSYS_AddStringWithReserved)
	MAP_NATIVE(UComboBoxHandle,execAddStringWithReserved)
	MAP_NATIVE(UComboBoxHandle,execSYS_AddString)
	MAP_NATIVE(UComboBoxHandle,execAddStringWithGap)
	MAP_NATIVE(UComboBoxHandle,execAddString)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UComboBoxHandle);

NATIVE_INFO(UCommandChannelAPI) GNWindowUCommandChannelAPINatives[] = 
{ 
	MAP_NATIVE(UCommandChannelAPI,execRequestCommandChannelPartyMembersInfo)
	MAP_NATIVE(UCommandChannelAPI,execRequestCommandChannelWithdraw)
	MAP_NATIVE(UCommandChannelAPI,execRequestCommandChannelBanParty)
	MAP_NATIVE(UCommandChannelAPI,execRequestCommandChannelInfo)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UCommandChannelAPI);

NATIVE_INFO(UConsignmentSaleAPI) GNWindowUConsignmentSaleAPINatives[] = 
{ 
	MAP_NATIVE(UConsignmentSaleAPI,execGetCommissionSellerID)
	MAP_NATIVE(UConsignmentSaleAPI,execRequestCommissionRegisteredItem)
	MAP_NATIVE(UConsignmentSaleAPI,execRequestCommissionBuyItem)
	MAP_NATIVE(UConsignmentSaleAPI,execRequestCommissionBuyInfo)
	MAP_NATIVE(UConsignmentSaleAPI,execRequestCommissionList)
	MAP_NATIVE(UConsignmentSaleAPI,execRequestCommissionDelete)
	MAP_NATIVE(UConsignmentSaleAPI,execRequestCommissionCancel)
	MAP_NATIVE(UConsignmentSaleAPI,execRequestCommissionRegister)
	MAP_NATIVE(UConsignmentSaleAPI,execRequestCommissionSellingPremiumItemList)
	MAP_NATIVE(UConsignmentSaleAPI,execRequestCommissionRegistrableItemList)
	MAP_NATIVE(UConsignmentSaleAPI,execRequestCommissionInfo)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UConsignmentSaleAPI);

NATIVE_INFO(UDrawPanelHandle) GNWindowUDrawPanelHandleNatives[] = 
{ 
	MAP_NATIVE(UDrawPanelHandle,execSetMiddleAlign)
	MAP_NATIVE(UDrawPanelHandle,execPreCheckPanelSize)
	MAP_NATIVE(UDrawPanelHandle,execClear)
	MAP_NATIVE(UDrawPanelHandle,execInsertDrawItem)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UDrawPanelHandle);

NATIVE_INFO(UEditBoxHandle) GNWindowUEditBoxHandleNatives[] = 
{ 
	MAP_NATIVE(UEditBoxHandle,execSetIME)
	MAP_NATIVE(UEditBoxHandle,execSetAsChatEditBox)
	MAP_NATIVE(UEditBoxHandle,execSetVAlign)
	MAP_NATIVE(UEditBoxHandle,execSetAlign)
	MAP_NATIVE(UEditBoxHandle,execGetFormatString)
	MAP_NATIVE(UEditBoxHandle,execSetFormatString)
	MAP_NATIVE(UEditBoxHandle,execAddEmojiIcon)
	MAP_NATIVE(UEditBoxHandle,execIsEmpty)
	MAP_NATIVE(UEditBoxHandle,execSetUnFocusedBackTexture)
	MAP_NATIVE(UEditBoxHandle,execSetFocusedBackTexture)
	MAP_NATIVE(UEditBoxHandle,execDeleteClipBoard)
	MAP_NATIVE(UEditBoxHandle,execIsShowCandidateBox)
	MAP_NATIVE(UEditBoxHandle,execSetDownList)
	MAP_NATIVE(UEditBoxHandle,execAddItemToAutoCompleteHistory)
	MAP_NATIVE(UEditBoxHandle,execDeleteNameFromAdditionalSearchList)
	MAP_NATIVE(UEditBoxHandle,execClearAdditionalSearchList)
	MAP_NATIVE(UEditBoxHandle,execFillAdditionalSearchList)
	MAP_NATIVE(UEditBoxHandle,execAddNameToAdditionalSearchList)
	MAP_NATIVE(UEditBoxHandle,execAllSelect)
	MAP_NATIVE(UEditBoxHandle,execClearHistory)
	MAP_NATIVE(UEditBoxHandle,execSetEnableTextLink)
	MAP_NATIVE(UEditBoxHandle,execGetMaxLength)
	MAP_NATIVE(UEditBoxHandle,execSetMaxLength)
	MAP_NATIVE(UEditBoxHandle,execSetHighLight)
	MAP_NATIVE(UEditBoxHandle,execSetEditType)
	MAP_NATIVE(UEditBoxHandle,execClear)
	MAP_NATIVE(UEditBoxHandle,execSimulateBackspace)
	MAP_NATIVE(UEditBoxHandle,execAddString)
	MAP_NATIVE(UEditBoxHandle,execSetString)
	MAP_NATIVE(UEditBoxHandle,execGetString)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UEditBoxHandle);

NATIVE_INFO(UEffectViewportWndHandle) GNWindowUEffectViewportWndHandleNatives[] = 
{ 
	MAP_NATIVE(UEffectViewportWndHandle,execSpawnEffect)
	MAP_NATIVE(UEffectViewportWndHandle,execSetCameraYaw)
	MAP_NATIVE(UEffectViewportWndHandle,execSetCameraPitch)
	MAP_NATIVE(UEffectViewportWndHandle,execSetCameraDistance)
	MAP_NATIVE(UEffectViewportWndHandle,execSetOffset)
	MAP_NATIVE(UEffectViewportWndHandle,execSetScale)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UEffectViewportWndHandle);

NATIVE_INFO(UEnchantAPI) GNWindowUEnchantAPINatives[] = 
{ 
	MAP_NATIVE(UEnchantAPI,execRequestUnlockedItemCancel)
	MAP_NATIVE(UEnchantAPI,execRequestUnlockedItem)
	MAP_NATIVE(UEnchantAPI,execRequestLockedItemCancel)
	MAP_NATIVE(UEnchantAPI,execRequestLockedItem)
	MAP_NATIVE(UEnchantAPI,execRequestExCancelEnchantItem)
	MAP_NATIVE(UEnchantAPI,execRequestExRemoveEnchantSupportItem)
	MAP_NATIVE(UEnchantAPI,execRequestExAddEnchantScrollItem)
	MAP_NATIVE(UEnchantAPI,execRequestExTryToPutEnchantSupportItem)
	MAP_NATIVE(UEnchantAPI,execRequestExTryToPutEnchantTargetItem)
	MAP_NATIVE(UEnchantAPI,execRequestRemoveAttribute)
	MAP_NATIVE(UEnchantAPI,execRequestEnchantItemAttribute)
	MAP_NATIVE(UEnchantAPI,execRequestEnchantItem)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UEnchantAPI);

NATIVE_INFO(UEnsoulAPI) GNWindowUEnsoulAPINatives[] = 
{ 
	MAP_NATIVE(UEnsoulAPI,execRequestItemExtraction)
	MAP_NATIVE(UEnsoulAPI,execRequestItemEnsoul)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UEnsoulAPI);

NATIVE_INFO(UEventMatchAPI) GNWindowUEventMatchAPINatives[] = 
{ 
	MAP_NATIVE(UEventMatchAPI,execRequestEventMatchObserverEnd)
	MAP_NATIVE(UEventMatchAPI,execSetSelectedUser)
	MAP_NATIVE(UEventMatchAPI,execGetUserData)
	MAP_NATIVE(UEventMatchAPI,execGetPartyMemberCount)
	MAP_NATIVE(UEventMatchAPI,execGetTeamName)
	MAP_NATIVE(UEventMatchAPI,execGetScore)
	MAP_NATIVE(UEventMatchAPI,execGetEventMatchData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UEventMatchAPI);

NATIVE_INFO(UFileListAPI) GNWindowUFileListAPINatives[] = 
{ 
	MAP_NATIVE(UFileListAPI,execShowFlash)
	MAP_NATIVE(UFileListAPI,execGetDriveInfoList)
	MAP_NATIVE(UFileListAPI,execGetFileInfoList)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UFileListAPI);

NATIVE_INFO(UFlashCtrlHandle) GNWindowUFlashCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(UFlashCtrlHandle,execInvoke)
	MAP_NATIVE(UFlashCtrlHandle,execSetFlashFile)
	MAP_NATIVE(UFlashCtrlHandle,execGotoFrame)
	MAP_NATIVE(UFlashCtrlHandle,execGetCurrentFrame)
	MAP_NATIVE(UFlashCtrlHandle,execGetTotalFrameCnt)
	MAP_NATIVE(UFlashCtrlHandle,execStop)
	MAP_NATIVE(UFlashCtrlHandle,execPause)
	MAP_NATIVE(UFlashCtrlHandle,execPlay)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UFlashCtrlHandle);

NATIVE_INFO(UGFxUIScript) GNWindowUGFxUIScriptNatives[] = 
{ 
	MAP_NATIVE(UGFxUIScript,execSetCanBeShownDuringScene)
	MAP_NATIVE(UGFxUIScript,execKillTimer)
	MAP_NATIVE(UGFxUIScript,execSetTimer)
	MAP_NATIVE(UGFxUIScript,execGetUserPremiumLevel)
	MAP_NATIVE(UGFxUIScript,execSetEulaText)
	MAP_NATIVE(UGFxUIScript,execSendCommandToServer)
	MAP_NATIVE(UGFxUIScript,execForceToMoveMousePos)
	MAP_NATIVE(UGFxUIScript,execSetHUD)
	MAP_NATIVE(UGFxUIScript,execSetClosingOnESC)
	MAP_NATIVE(UGFxUIScript,execGetAnchorPointFromWindow)
	MAP_NATIVE(UGFxUIScript,execSetGFxFromSavedInfo)
	MAP_NATIVE(UGFxUIScript,execIsSavedInfo)
	MAP_NATIVE(UGFxUIScript,execUnsetRotateCursor)
	MAP_NATIVE(UGFxUIScript,execSetRotateCursor)
	MAP_NATIVE(UGFxUIScript,execSetAlwaysOnTop)
	MAP_NATIVE(UGFxUIScript,execSetModal)
	MAP_NATIVE(UGFxUIScript,execSetNextFocus)
	MAP_NATIVE(UGFxUIScript,execSetHasGFxTextField)
	MAP_NATIVE(UGFxUIScript,execHasTextField)
	MAP_NATIVE(UGFxUIScript,execSetStateChangeNotification)
	MAP_NATIVE(UGFxUIScript,execSetContainer)
	MAP_NATIVE(UGFxUIScript,execSetRestartableFlash)
	MAP_NATIVE(UGFxUIScript,execSetSaveWnd)
	MAP_NATIVE(UGFxUIScript,execApplyFixedPositionRate)
	MAP_NATIVE(UGFxUIScript,execSetFixedPositionRate)
	MAP_NATIVE(UGFxUIScript,execSetAnchor)
	MAP_NATIVE(UGFxUIScript,execFlashMoviePlayEnd)
	MAP_NATIVE(UGFxUIScript,execFlashMoviePlayStart)
	MAP_NATIVE(UGFxUIScript,execSetHavingFocus)
	MAP_NATIVE(UGFxUIScript,execIgnoreUIEvent)
	MAP_NATIVE(UGFxUIScript,execMakeRenderToTexture)
	MAP_NATIVE(UGFxUIScript,execBringToFront)
	MAP_NATIVE(UGFxUIScript,execBringToFrontOf)
	MAP_NATIVE(UGFxUIScript,execSetFocus)
	MAP_NATIVE(UGFxUIScript,execIsShowWindow)
	MAP_NATIVE(UGFxUIScript,execHideWindow)
	MAP_NATIVE(UGFxUIScript,execShowWindow)
	MAP_NATIVE(UGFxUIScript,execSetDefaultShow)
	MAP_NATIVE(UGFxUIScript,execSetRenderOnTop)
	MAP_NATIVE(UGFxUIScript,execSetAlwaysFullAlpha)
	MAP_NATIVE(UGFxUIScript,execSetMsgPassThrough)
	MAP_NATIVE(UGFxUIScript,execGetFunction)
	MAP_NATIVE(UGFxUIScript,execGetVariable)
	MAP_NATIVE(UGFxUIScript,execRegisterDelegateHandler)
	MAP_NATIVE(UGFxUIScript,execDeallocGFxValue)
	MAP_NATIVE(UGFxUIScript,execAllocGFxValue)
	MAP_NATIVE(UGFxUIScript,execDeallocGFxValues)
	MAP_NATIVE(UGFxUIScript,execAllocGFxValues)
	MAP_NATIVE(UGFxUIScript,execInvoke)
	MAP_NATIVE(UGFxUIScript,execCreateArray)
	MAP_NATIVE(UGFxUIScript,execCreateObject)
	MAP_NATIVE(UGFxUIScript,execShowFlashFromFilePath)
	MAP_NATIVE(UGFxUIScript,execRegisterState)
	MAP_NATIVE(UGFxUIScript,execRegisterGFxEvent)
	MAP_NATIVE(UGFxUIScript,execRegisterGFxEventForLoaded)
	MAP_NATIVE(UGFxUIScript,execRegisterEvent)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UGFxUIScript);

NATIVE_INFO(UUIScript) GNWindowUUIScriptNatives[] = 
{ 
	MAP_NATIVE(UUIScript,execGetSkillAcquireList)
	MAP_NATIVE(UUIScript,execGetSkillSubLevelList)
	MAP_NATIVE(UUIScript,execGetEnchantExpItemListFromInven)
	MAP_NATIVE(UUIScript,execGetNQuestNpcPortraitData)
	MAP_NATIVE(UUIScript,execGetNQuestDialogData)
	MAP_NATIVE(UUIScript,execGetNQuestData)
	MAP_NATIVE(UUIScript,execGetClientCursorPos)
	MAP_NATIVE(UUIScript,execRequestClanUnregisterCrestByPledgeID)
	MAP_NATIVE(UUIScript,execRequestClanRegisterCrestPreset)
	MAP_NATIVE(UUIScript,execGetPledgeCrestPresetData)
	MAP_NATIVE(UUIScript,execGetItemExchangeMultisellData)
	MAP_NATIVE(UUIScript,execIsPrivateStoreBypass)
	MAP_NATIVE(UUIScript,execGetUniqueGachaCostInfo)
	MAP_NATIVE(UUIScript,execGetUniqueGachaGameTypeInfo)
	MAP_NATIVE(UUIScript,execGetUniqueGachaRewardItem)
	MAP_NATIVE(UUIScript,execGetUniqueGachaShowItem)
	MAP_NATIVE(UUIScript,execGetUniqueGachaVideo)
	MAP_NATIVE(UUIScript,execSetUniqueGachaVideo)
	MAP_NATIVE(UUIScript,execJapanPolicyCheck)
	MAP_NATIVE(UUIScript,execOpenWebSite)
	MAP_NATIVE(UUIScript,execGetRecoveryCouponData)
	MAP_NATIVE(UUIScript,execGetPrisonDataList)
	MAP_NATIVE(UUIScript,execGetPrisonData)
	MAP_NATIVE(UUIScript,execGetSiegePointAlarms)
	MAP_NATIVE(UUIScript,execConvertFloatToString)
	MAP_NATIVE(UUIScript,execGetServerPrivateStoreSearchItemSubType)
	MAP_NATIVE(UUIScript,execGetWorldExchangeData)
	MAP_NATIVE(UUIScript,execGetBRWorldExchange)
	MAP_NATIVE(UUIScript,execGetMissionLevelData)
	MAP_NATIVE(UUIScript,execGetBalrogwarData)
	MAP_NATIVE(UUIScript,execIsInTimeRestrictField)
	MAP_NATIVE(UUIScript,execGetMagicLampAdvancedResultItemList)
	MAP_NATIVE(UUIScript,execGetMagicLampNormalResultItemList)
	MAP_NATIVE(UUIScript,execGetEventHtmlString)
	MAP_NATIVE(UUIScript,execGetL2PassAdvanceInfo)
	MAP_NATIVE(UUIScript,execGetL2PassPremiumPassCost)
	MAP_NATIVE(UUIScript,execGetL2PassAdvanceFreeCount)
	MAP_NATIVE(UUIScript,execGetL2PassLastItem)
	MAP_NATIVE(UUIScript,execGetL2PassMaxCount)
	MAP_NATIVE(UUIScript,execGetL2PassRewardStepMaxCount)
	MAP_NATIVE(UUIScript,execGetL2PassHuntingMaxTime)
	MAP_NATIVE(UUIScript,execGetL2PassRewardTotalList)
	MAP_NATIVE(UUIScript,execGetL2PassReward)
	MAP_NATIVE(UUIScript,execIsPlayerOnOlympiad)
	MAP_NATIVE(UUIScript,execAddPledgeInfo)
	MAP_NATIVE(UUIScript,execGetWorldCastleWarMapInfo)
	MAP_NATIVE(UUIScript,execRequestDisassembleItemInfo)
	MAP_NATIVE(UUIScript,execGetNickNameIconImage)
	MAP_NATIVE(UUIScript,execGetNickNameItemData)
	MAP_NATIVE(UUIScript,execGetServerMarkName)
	MAP_NATIVE(UUIScript,execGetDethroneDistrictName)
	MAP_NATIVE(UUIScript,execGetDethroneCategory)
	MAP_NATIVE(UUIScript,execGetDethroneDailyMissionData)
	MAP_NATIVE(UUIScript,execGetDethroneChangeNameCost)
	MAP_NATIVE(UUIScript,execGetDethroneConnectCost)
	MAP_NATIVE(UUIScript,execGetPurchaseLimitCraftData)
	MAP_NATIVE(UUIScript,execGetSubjugationList)
	MAP_NATIVE(UUIScript,execGetGeneralEffectName)
	MAP_NATIVE(UUIScript,execGetCharacterAbilityData)
	MAP_NATIVE(UUIScript,execGetCollectionOptionName)
	MAP_NATIVE(UUIScript,execGetCompletePeriodCollection)
	MAP_NATIVE(UUIScript,execGetCollectionOption)
	MAP_NATIVE(UUIScript,execGetCollectionCount)
	MAP_NATIVE(UUIScript,execGetCollectionInfo)
	MAP_NATIVE(UUIScript,execIsCollectionRegistEnableItemWithReason)
	MAP_NATIVE(UUIScript,execIsCollectionRegistEnableItem)
	MAP_NATIVE(UUIScript,execGetCollectionIdByItemId)
	MAP_NATIVE(UUIScript,execGetCollectionIdByItemName)
	MAP_NATIVE(UUIScript,execGetCollectionMainData)
	MAP_NATIVE(UUIScript,execGetCollectionData)
	MAP_NATIVE(UUIScript,execGetSteadyBoxSlotInfo)
	MAP_NATIVE(UUIScript,execGetSteadyBoxString)
	MAP_NATIVE(UUIScript,execRequestRankingFestivalBonus)
	MAP_NATIVE(UUIScript,execLoginWaitState)
	MAP_NATIVE(UUIScript,execStartLoginState)
	MAP_NATIVE(UUIScript,execGetPledgeLevelData)
	MAP_NATIVE(UUIScript,execConvertWorldIDToStr)
	MAP_NATIVE(UUIScript,execConvertWorldStrToID)
	MAP_NATIVE(UUIScript,execRequestEnemyPledgeRegister)
	MAP_NATIVE(UUIScript,execGetPledgeDonationData)
	MAP_NATIVE(UUIScript,execGetMagicLampMaxCharge)
	MAP_NATIVE(UUIScript,execGetMaxElixir)
	MAP_NATIVE(UUIScript,execGetMableGameEventData)
	MAP_NATIVE(UUIScript,execGetMableGameCellData)
	MAP_NATIVE(UUIScript,execSetMPlayerClientVar)
	MAP_NATIVE(UUIScript,execGetSharedPositionData)
	MAP_NATIVE(UUIScript,execIsAssassinClass)
	MAP_NATIVE(UUIScript,execIsOrcRiderClass)
	MAP_NATIVE(UUIScript,execIsDeathFighterClass)
	MAP_NATIVE(UUIScript,execIsDeathKnightClass)
	MAP_NATIVE(UUIScript,execRequestMPlayerPush)
	MAP_NATIVE(UUIScript,execUseContents)
	MAP_NATIVE(UUIScript,execGetLevelUpItemMagicalDefenseBonus)
	MAP_NATIVE(UUIScript,execGetLevelUpItemPhysicalDefenseBonus)
	MAP_NATIVE(UUIScript,execGetLevelUpItemMagicalDamageBonus)
	MAP_NATIVE(UUIScript,execGetLevelUpItemPhysicalDamageBonus)
	MAP_NATIVE(UUIScript,execGetStatBonusResetData)
	MAP_NATIVE(UUIScript,execGetStatBonusNameData)
	MAP_NATIVE(UUIScript,execGetLetterCollectData)
	MAP_NATIVE(UUIScript,execRequestAuthLoginForTCLS)
	MAP_NATIVE(UUIScript,execIsTencentLoginSystem)
	MAP_NATIVE(UUIScript,execIsFinalRelease)
	MAP_NATIVE(UUIScript,execRequestMyRankingHistory)
	MAP_NATIVE(UUIScript,execGetRankingGrade)
	MAP_NATIVE(UUIScript,execGetRankingRewardSkillID)
	MAP_NATIVE(UUIScript,execRequestRankingCharRankers)
	MAP_NATIVE(UUIScript,execRequestRankingCharInfo)
	MAP_NATIVE(UUIScript,execGetTimeRestrictFieldInfo)
	MAP_NATIVE(UUIScript,execRequestEnterTimeRestrictField)
	MAP_NATIVE(UUIScript,execRequestTimeRestrictFieldList)
	MAP_NATIVE(UUIScript,execRequestGachaShopGachaItem)
	MAP_NATIVE(UUIScript,execRequestGachaShopGachaGroup)
	MAP_NATIVE(UUIScript,execRequestGachaShopInfo)
	MAP_NATIVE(UUIScript,execGetGachaShopGroupDataAll)
	MAP_NATIVE(UUIScript,execGetGachaShopGroupData)
	MAP_NATIVE(UUIScript,execGetGachaShopData)
	MAP_NATIVE(UUIScript,execGetPledgeShopProductData)
	MAP_NATIVE(UUIScript,execGetLCoinShopBannerData)
	MAP_NATIVE(UUIScript,execGetLCoinShopProductData)
	MAP_NATIVE(UUIScript,execUpdateAutoplaySetting)
	MAP_NATIVE(UUIScript,execResetCounterAttackList)
	MAP_NATIVE(UUIScript,execSelectCounterAttackTarget)
	MAP_NATIVE(UUIScript,execRequestPaybackGiveReward)
	MAP_NATIVE(UUIScript,execRequestPaybackList)
	MAP_NATIVE(UUIScript,execRequestMagicLampGameStart)
	MAP_NATIVE(UUIScript,execRequestMagicLampGameInfo)
	MAP_NATIVE(UUIScript,execRequestOpenWndWithoutNPC)
	MAP_NATIVE(UUIScript,execRequestFestivalGame)
	MAP_NATIVE(UUIScript,execRequestFestivalInfo)
	MAP_NATIVE(UUIScript,execIsUseCostume)
	MAP_NATIVE(UUIScript,execGetRewardCardTexName)
	MAP_NATIVE(UUIScript,execGetSubTitle)
	MAP_NATIVE(UUIScript,execRequestPurchaseLimitShopItemBuy)
	MAP_NATIVE(UUIScript,execRequestPurchaseLimitShopItemList)
	MAP_NATIVE(UUIScript,execRequestEnchantArtifact)
	MAP_NATIVE(UUIScript,execShowQuestInfoWindow)
	MAP_NATIVE(UUIScript,execRequestOlympiadRecord)
	MAP_NATIVE(UUIScript,execFlashWindow)
	MAP_NATIVE(UUIScript,execGetElementalSpiritExpData)
	MAP_NATIVE(UUIScript,execRequestElementalSpiritInfo)
	MAP_NATIVE(UUIScript,execGetPledgeMasteryName)
	MAP_NATIVE(UUIScript,execRequestPledgeItemBuy)
	MAP_NATIVE(UUIScript,execRequestPledgeItemActivate)
	MAP_NATIVE(UUIScript,execRequestPledgeItemInfo)
	MAP_NATIVE(UUIScript,execRequestPledgeItemList)
	MAP_NATIVE(UUIScript,execRequestCreatePledge)
	MAP_NATIVE(UUIScript,execRequestPledgeMissionReward)
	MAP_NATIVE(UUIScript,execRequestPledgeMissionInfo)
	MAP_NATIVE(UUIScript,execGetPledgeMissionData)
	MAP_NATIVE(UUIScript,execGetTutorialBody)
	MAP_NATIVE(UUIScript,execGetTutorialIndices)
	MAP_NATIVE(UUIScript,execRequestSwapAgathionSlotItems)
	MAP_NATIVE(UUIScript,execGetAgathionSubSkillList)
	MAP_NATIVE(UUIScript,execGetAgathionMainSkillList)
	MAP_NATIVE(UUIScript,execCardUpdownGameQuit)
	MAP_NATIVE(UUIScript,execCardUpdownGameRetry)
	MAP_NATIVE(UUIScript,execCardUpdownGameRewardRequest)
	MAP_NATIVE(UUIScript,execCardUpdownGamePickNumber)
	MAP_NATIVE(UUIScript,execRequestUserBanInfo)
	MAP_NATIVE(UUIScript,execRequestCardReward)
	MAP_NATIVE(UUIScript,execRequestEntireCardRewardList)
	MAP_NATIVE(UUIScript,execRequestAccountAttendanceInfo)
	MAP_NATIVE(UUIScript,execRequestAccountAttendanceReward)
	MAP_NATIVE(UUIScript,execGetEventAlarmDataByIndex)
	MAP_NATIVE(UUIScript,execGetEventAlarmDataCount)
	MAP_NATIVE(UUIScript,execGetMinimapRegionIconData)
	MAP_NATIVE(UUIScript,execRequestBlockListForAD)
	MAP_NATIVE(UUIScript,execCancelWaitingQueueTicket)
	MAP_NATIVE(UUIScript,execIsUsePledgeBonus)
	MAP_NATIVE(UUIScript,execPledgeBonusRewardList)
	MAP_NATIVE(UUIScript,execPledgeBonusReward)
	MAP_NATIVE(UUIScript,execPledgeBonusOpen)
	MAP_NATIVE(UUIScript,execCashShopCoinChargeForSteam)
	MAP_NATIVE(UUIScript,execIsUseTokenLogin)
	MAP_NATIVE(UUIScript,execIsUseSteam)
	MAP_NATIVE(UUIScript,execIsUseAutoEquipSoulShot)
	MAP_NATIVE(UUIScript,execGetAutoEquipShotList)
	MAP_NATIVE(UUIScript,execSoulShotSlotClicked)
	MAP_NATIVE(UUIScript,execSoulShotSlotSelected)
	MAP_NATIVE(UUIScript,execappFractional)
	MAP_NATIVE(UUIScript,execappCeil)
	MAP_NATIVE(UUIScript,execappFloor)
	MAP_NATIVE(UUIScript,execappRound)
	MAP_NATIVE(UUIScript,execStringMatching)
	MAP_NATIVE(UUIScript,execStringIntoArray)
	MAP_NATIVE(UUIScript,execClipboardPaste)
	MAP_NATIVE(UUIScript,execClipboardCopy)
	MAP_NATIVE(UUIScript,execGetMonsterBookData)
	MAP_NATIVE(UUIScript,execGetMonsterBookIDs)
	MAP_NATIVE(UUIScript,execGetFactionData)
	MAP_NATIVE(UUIScript,execGetUserFactionInfoList)
	MAP_NATIVE(UUIScript,execRequestUserFactionInfo)
	MAP_NATIVE(UUIScript,execRequestCastleWarSeasonReward)
	MAP_NATIVE(UUIScript,execIsUseToDoList)
	MAP_NATIVE(UUIScript,execRequestTodoListOneDayReward)
	MAP_NATIVE(UUIScript,execRequestOneDayRewardPeriod)
	MAP_NATIVE(UUIScript,execRequestOneDayRewardDesc)
	MAP_NATIVE(UUIScript,execRequestOneDayRewardItemList)
	MAP_NATIVE(UUIScript,execRequestOneDayRewardReceive)
	MAP_NATIVE(UUIScript,execRequestTodoListHTML)
	MAP_NATIVE(UUIScript,execRequestTodoListInzone)
	MAP_NATIVE(UUIScript,execRequestTodoListRecommand)
	MAP_NATIVE(UUIScript,execQTRequestGetCurRoomInfo)
	MAP_NATIVE(UUIScript,execQTRequestEnterClanRoom)
	MAP_NATIVE(UUIScript,execQTRequestBindClanRoom)
	MAP_NATIVE(UUIScript,execQTRequestEnterPartyRoom)
	MAP_NATIVE(UUIScript,execCrossEnterEventRoom)
	MAP_NATIVE(UUIScript,execIsUsePrivateStore)
	MAP_NATIVE(UUIScript,execRequestCaptchaAnswer)
	MAP_NATIVE(UUIScript,execRequestRefreshCaptchaImage)
	MAP_NATIVE(UUIScript,execGetCaptchaImageTex)
	MAP_NATIVE(UUIScript,execIsAttendanceSystemEnable)
	MAP_NATIVE(UUIScript,execRequestAttendanceWndOpen)
	MAP_NATIVE(UUIScript,execRequestAttendanceCheck)
	MAP_NATIVE(UUIScript,execRefreshRecipeOfferingRate)
	MAP_NATIVE(UUIScript,execIsAdenServer)
	MAP_NATIVE(UUIScript,execIsBloodyServer)
	MAP_NATIVE(UUIScript,execGetServerType)
	MAP_NATIVE(UUIScript,execGetAlchemySkillGradeType)
	MAP_NATIVE(UUIScript,execRequestAlchemySkillList)
	MAP_NATIVE(UUIScript,execIsActivateUSMBackground)
	MAP_NATIVE(UUIScript,execGetLoginMapType)
	MAP_NATIVE(UUIScript,execSwitchSingleMeshMode)
	MAP_NATIVE(UUIScript,execProcessCommandInterPartyChatMessage)
	MAP_NATIVE(UUIScript,execProcessCommandChatMessage)
	MAP_NATIVE(UUIScript,execProcessPartyMatchChatMessage)
	MAP_NATIVE(UUIScript,execProcessPetitionChatMessage)
	MAP_NATIVE(UUIScript,execIsSameChatPrefix)
	MAP_NATIVE(UUIScript,execGetChatPrefix)
	MAP_NATIVE(UUIScript,execProcessChatMessage)
	MAP_NATIVE(UUIScript,execSetChatMessage)
	MAP_NATIVE(UUIScript,execChatNotificationFilter)
	MAP_NATIVE(UUIScript,execGetChatSubColorByType)
	MAP_NATIVE(UUIScript,execGetChatColorByType)
	MAP_NATIVE(UUIScript,execEnableChatWndResizing)
	MAP_NATIVE(UUIScript,execGetReleaseMode)
	MAP_NATIVE(UUIScript,execIsPlayerOnWorldRaidServer)
	MAP_NATIVE(UUIScript,execMeasureTimeEnd)
	MAP_NATIVE(UUIScript,execMeasureTimeStart)
	MAP_NATIVE(UUIScript,execMeasureTimeOff)
	MAP_NATIVE(UUIScript,execMeasureTimeOn)
	MAP_NATIVE(UUIScript,execAddTimeData)
	MAP_NATIVE(UUIScript,execResponsePetitionAlarm)
	MAP_NATIVE(UUIScript,execGetUIUserPremiumLevel)
	MAP_NATIVE(UUIScript,execRequestEventCampaignHtml)
	MAP_NATIVE(UUIScript,execRequestEventCampaignScoreInfo)
	MAP_NATIVE(UUIScript,execRequestEventCampaignProgressInfo)
	MAP_NATIVE(UUIScript,execGetEventContentInfo)
	MAP_NATIVE(UUIScript,execIsActivedBRCampaignExist)
	MAP_NATIVE(UUIScript,execConvertBRCashShopDayWeek)
	MAP_NATIVE(UUIScript,execCallGFxFunction)
	MAP_NATIVE(UUIScript,execSetAlwaysOnBack)
	MAP_NATIVE(UUIScript,execAmILeader)
	MAP_NATIVE(UUIScript,execIsActivedCampaignExist)
	MAP_NATIVE(UUIScript,execIsActivedZoneQuestExist)
	MAP_NATIVE(UUIScript,execRequestLeaveObservingCuriousHouse)
	MAP_NATIVE(UUIScript,execRequestObservingCuriousHouse)
	MAP_NATIVE(UUIScript,execRequestObservingListCuriousHouse)
	MAP_NATIVE(UUIScript,execRequestCuriousHouseHtml)
	MAP_NATIVE(UUIScript,execRequestLeaveCuriousHouse)
	MAP_NATIVE(UUIScript,execRequestCancelCuriousHouse)
	MAP_NATIVE(UUIScript,execRequestJoinCuriousHouse)
	MAP_NATIVE(UUIScript,execToLower)
	MAP_NATIVE(UUIScript,execToUpper)
	MAP_NATIVE(UUIScript,execIsNative)
	MAP_NATIVE(UUIScript,execRequestInzoneWaitingTime)
	MAP_NATIVE(UUIScript,execHasStackableItemInInventory)
	MAP_NATIVE(UUIScript,execHasStackableItemInWareHouse)
	MAP_NATIVE(UUIScript,execSetClosingOnESC)
	MAP_NATIVE(UUIScript,execRequestChangeAttributeCancel)
	MAP_NATIVE(UUIScript,execRequestChangeAttributeItem)
	MAP_NATIVE(UUIScript,execSelectChangeAttributeItem)
	MAP_NATIVE(UUIScript,execSetEnableGodRay)
	MAP_NATIVE(UUIScript,execSetTestGodRayOption)
	MAP_NATIVE(UUIScript,execSetTestBeastLightMapIntensity)
	MAP_NATIVE(UUIScript,execSetEnvTime)
	MAP_NATIVE(UUIScript,execSetEnableLightMapIntensity)
	MAP_NATIVE(UUIScript,execSetEnableGammaCorrection)
	MAP_NATIVE(UUIScript,execSetEnableWindowDefaultGamma)
	MAP_NATIVE(UUIScript,execSetEnableGammaSetting)
	MAP_NATIVE(UUIScript,execSetEnableHsvTerrainLight)
	MAP_NATIVE(UUIScript,execSetEnableHsvStaticMeshLight)
	MAP_NATIVE(UUIScript,execSetEnableHsvActorLight)
	MAP_NATIVE(UUIScript,execSetEnableSkyBspAmbient)
	MAP_NATIVE(UUIScript,execSetEnableSkyBoxColor)
	MAP_NATIVE(UUIScript,execSetEnableBspAmbient)
	MAP_NATIVE(UUIScript,execSetEnableStaticMeshAmbient)
	MAP_NATIVE(UUIScript,execSetEnableActorAmbient)
	MAP_NATIVE(UUIScript,execSetEnableTerrainAmbient)
	MAP_NATIVE(UUIScript,execSetTestGammaSetting)
	MAP_NATIVE(UUIScript,execSetTestHsvTerrainLightColor)
	MAP_NATIVE(UUIScript,execSetTestHsvStaticMeshLightColor)
	MAP_NATIVE(UUIScript,execSetTestHsvActorLightColor)
	MAP_NATIVE(UUIScript,execSetTestSkyBspAmbientColor)
	MAP_NATIVE(UUIScript,execSetTestSkyBoxColor)
	MAP_NATIVE(UUIScript,execSetTestBspAmbientColor)
	MAP_NATIVE(UUIScript,execSetTestStaticMeshAmbientColor)
	MAP_NATIVE(UUIScript,execSetTestActorAmbientColor)
	MAP_NATIVE(UUIScript,execSetTestTerrainAmbientColor)
	MAP_NATIVE(UUIScript,execEndCredit)
	MAP_NATIVE(UUIScript,execStartCredit)
	MAP_NATIVE(UUIScript,execGetChinaPkString)
	MAP_NATIVE(UUIScript,execIsNewChinaLive)
	MAP_NATIVE(UUIScript,execIsChinaClient)
	MAP_NATIVE(UUIScript,execRequestCardKeyLoginCancel)
	MAP_NATIVE(UUIScript,execRequestCardKeyLogin)
	MAP_NATIVE(UUIScript,execRequestFlyMoveStart)
	MAP_NATIVE(UUIScript,execFullScreenMovieEnd)
	MAP_NATIVE(UUIScript,execFullScreenMovieStart)
	MAP_NATIVE(UUIScript,execGetLastLoginID)
	MAP_NATIVE(UUIScript,execSaveLastLoginID)
	MAP_NATIVE(UUIScript,execAutoLogin)
	MAP_NATIVE(UUIScript,execStopLogin)
	MAP_NATIVE(UUIScript,execRefuseLogin)
	MAP_NATIVE(UUIScript,execIsUseOTP)
	MAP_NATIVE(UUIScript,execRequestSortedServerInfo)
	MAP_NATIVE(UUIScript,execEulaAgree)
	MAP_NATIVE(UUIScript,execRequestGoogleOtpLogin)
	MAP_NATIVE(UUIScript,execRequestSecurityCardLogin)
	MAP_NATIVE(UUIScript,execRequestLoginServer)
	MAP_NATIVE(UUIScript,execRequestLogin)
	MAP_NATIVE(UUIScript,execExpInt)
	MAP_NATIVE(UUIScript,execExpFloat)
	MAP_NATIVE(UUIScript,execGetMaxVitality)
	MAP_NATIVE(UUIScript,execGetL2Path)
	MAP_NATIVE(UUIScript,execGetDisplayWidth)
	MAP_NATIVE(UUIScript,execGetDisplayHeight)
	MAP_NATIVE(UUIScript,execOpenMovieCaptureDir)
	MAP_NATIVE(UUIScript,execSetMovieCaptureLowQuality)
	MAP_NATIVE(UUIScript,execSetMovieCaptureHighQuality)
	MAP_NATIVE(UUIScript,execMovieCaptureToggle)
	MAP_NATIVE(UUIScript,execSetMovieCaptureResolution)
	MAP_NATIVE(UUIScript,execIsNowMovieCapturing)
	MAP_NATIVE(UUIScript,execRequestAutoLogin)
	MAP_NATIVE(UUIScript,execRequestTutorialMarkPressed)
	MAP_NATIVE(UUIScript,execRequestTutorialQuestionMarkPressed)
	MAP_NATIVE(UUIScript,execGetPawnLocFromServerID)
	MAP_NATIVE(UUIScript,execGetPawnNameFromServerID)
	MAP_NATIVE(UUIScript,execGetPawnType)
	MAP_NATIVE(UUIScript,execGetSkillAvailability)
	MAP_NATIVE(UUIScript,execRequestDynamicContentHtml)
	MAP_NATIVE(UUIScript,execRequestDynamicQuestScoreInfo)
	MAP_NATIVE(UUIScript,execRequestDynamicQuestProgressInfo)
	MAP_NATIVE(UUIScript,execGetDynamicContentInfo)
	MAP_NATIVE(UUIScript,execIsL2NetLoginState)
	MAP_NATIVE(UUIScript,execRequestSurrenderPledgeWar)
	MAP_NATIVE(UUIScript,execRequestPledgeWar)
	MAP_NATIVE(UUIScript,execGetShortcutString)
	MAP_NATIVE(UUIScript,execRequestCrystallizeEstimate)
	MAP_NATIVE(UUIScript,execRequestCharacterNameCreatable)
	MAP_NATIVE(UUIScript,execIsUseEMailAccount)
	MAP_NATIVE(UUIScript,execIsUseSecondaryAuth)
	MAP_NATIVE(UUIScript,execRequestSecondaryAuthModify)
	MAP_NATIVE(UUIScript,execRequestSecondaryAuthVerify)
	MAP_NATIVE(UUIScript,execRequestSecondaryAuthCreate)
	MAP_NATIVE(UUIScript,execIsUseGoodsInvnentory)
	MAP_NATIVE(UUIScript,execGetGoodsIconName)
	MAP_NATIVE(UUIScript,execRequestUseGoodsInventoryItem)
	MAP_NATIVE(UUIScript,execRequestGoodsInventoryItemDesc)
	MAP_NATIVE(UUIScript,execRequestGoodsInventoryItemList)
	MAP_NATIVE(UUIScript,execGetFormattedTimeStrMMHH)
	MAP_NATIVE(UUIScript,execBR_GetDayType)
	MAP_NATIVE(UUIScript,execBR_ConvertTimeToStr)
	MAP_NATIVE(UUIScript,execBR_GetShowEventUI)
	MAP_NATIVE(UUIScript,execIsUsingPrimeShop)
	MAP_NATIVE(UUIScript,execShowCashChargeWebSite)
	MAP_NATIVE(UUIScript,execRequestBR_MinigameInsertScore)
	MAP_NATIVE(UUIScript,execRequestBR_MinigameLoadScores)
	MAP_NATIVE(UUIScript,execIsBr_CashShopMainDisable)
	MAP_NATIVE(UUIScript,execGetBr_CashShopCoinToMoneyValue)
	MAP_NATIVE(UUIScript,execIsBr_CashShopCoinToMoney)
	MAP_NATIVE(UUIScript,execIsBr_CashShopPresent)
	MAP_NATIVE(UUIScript,execRequestBr_CashShopCateoryIndex)
	MAP_NATIVE(UUIScript,execIsBr_CashShopCateory)
	MAP_NATIVE(UUIScript,execRequestBR_PresentBuyProduct)
	MAP_NATIVE(UUIScript,execRequestBR_DeleteBasketProductInfo)
	MAP_NATIVE(UUIScript,execRequestBR_AddBasketProductInfo)
	MAP_NATIVE(UUIScript,execRequestBR_RecentProductList)
	MAP_NATIVE(UUIScript,execRequestBR_BuyProduct)
	MAP_NATIVE(UUIScript,execRequestBR_ProductInfo)
	MAP_NATIVE(UUIScript,execRequestBR_ProductList)
	MAP_NATIVE(UUIScript,execRequestBR_GamePoint)
	MAP_NATIVE(UUIScript,execRequestBR_CashShopNewICon)
	MAP_NATIVE(UUIScript,execGetTexture)
	MAP_NATIVE(UUIScript,execGetActivityUltimateSkillLevel)
	MAP_NATIVE(UUIScript,execRequestNatureRenderBlendingRate)
	MAP_NATIVE(UUIScript,execRequestNatureRenderDir)
	MAP_NATIVE(UUIScript,execRequestNatureRenderTurbidity)
	MAP_NATIVE(UUIScript,execRequestNatureRenderMie)
	MAP_NATIVE(UUIScript,execRequestNatureRenderRayleigh)
	MAP_NATIVE(UUIScript,execRequestNatureRenderIntensity)
	MAP_NATIVE(UUIScript,execRequestNatureRenderTime)
	MAP_NATIVE(UUIScript,execSetUseHDRRenderEffect)
	MAP_NATIVE(UUIScript,execSetHDRRenderVal)
	MAP_NATIVE(UUIScript,execRequestFinishNPCZoomCamera)
	MAP_NATIVE(UUIScript,execToggleReplayRec)
	MAP_NATIVE(UUIScript,execSetMotionBlurAlpha)
	MAP_NATIVE(UUIScript,execSetMotionBlurUse)
	MAP_NATIVE(UUIScript,execRequestMenteeWaitingList)
	MAP_NATIVE(UUIScript,execRequestPartyMatchWaitList)
	MAP_NATIVE(UUIScript,execRequestSetPostEffect)
	MAP_NATIVE(UUIScript,execRequestSetColorGradingVal)
	MAP_NATIVE(UUIScript,execRequestSetColorGradingEffect)
	MAP_NATIVE(UUIScript,execRequestSetRGBVal)
	MAP_NATIVE(UUIScript,execRequestSetRGBConversionEffect)
	MAP_NATIVE(UUIScript,execRequestSetHSVVal)
	MAP_NATIVE(UUIScript,execRequestSetHSVConversionEffect)
	MAP_NATIVE(UUIScript,execRequestSetYCbCrVal)
	MAP_NATIVE(UUIScript,execRequestSetYCbCrConversionEffect)
	MAP_NATIVE(UUIScript,execOpenL2Home)
	MAP_NATIVE(UUIScript,execOpenGivenURL)
	MAP_NATIVE(UUIScript,execGetRadioButtonHandle)
	MAP_NATIVE(UUIScript,execRequestAddExpandQuestAlarm)
	MAP_NATIVE(UUIScript,execRequestAskMemberShip)
	MAP_NATIVE(UUIScript,execRequestPartyLootingModifyAgreement)
	MAP_NATIVE(UUIScript,execRequestPartyLootingModify)
	MAP_NATIVE(UUIScript,execGetMyComputerPath)
	MAP_NATIVE(UUIScript,execGetDesktopPath)
	MAP_NATIVE(UUIScript,execGetMydocumentPath)
	MAP_NATIVE(UUIScript,execAnswerCoupleAction)
	MAP_NATIVE(UUIScript,execGetDrivesInfoList)
	MAP_NATIVE(UUIScript,execGetFilesInfoList)
	MAP_NATIVE(UUIScript,execRequestMoveToMerchant)
	MAP_NATIVE(UUIScript,execRefreshPrivateMarketInfo)
	MAP_NATIVE(UUIScript,execClearAllPrivateMarketInfo)
	MAP_NATIVE(UUIScript,execRequestChangeDiamondMesh)
	MAP_NATIVE(UUIScript,execRequestChangeParticleEmitter)
	MAP_NATIVE(UUIScript,execRequestSetSnowMeshScale)
	MAP_NATIVE(UUIScript,execRequestSetSnowSpeed)
	MAP_NATIVE(UUIScript,execRequestSetSnowEmitterParticleNum)
	MAP_NATIVE(UUIScript,execRequestSetSnowWeight)
	MAP_NATIVE(UUIScript,execRequestDeleteSnowEffect)
	MAP_NATIVE(UUIScript,execRequestCreateSnowEffect)
	MAP_NATIVE(UUIScript,execRequestSetRainMeshScale)
	MAP_NATIVE(UUIScript,execRequestSetRainSpeed)
	MAP_NATIVE(UUIScript,execRequestSetRainEmitterParticleNum)
	MAP_NATIVE(UUIScript,execRequestSetRainWeight)
	MAP_NATIVE(UUIScript,execRequestSetWeatherEffect)
	MAP_NATIVE(UUIScript,execRequestDeleteRainEffect)
	MAP_NATIVE(UUIScript,execRequestCreateRainEffect)
	MAP_NATIVE(UUIScript,execRequestBR_EventRankerList)
	MAP_NATIVE(UUIScript,execGetGameStateName)
	MAP_NATIVE(UUIScript,execRequestBuySellUIClose)
	MAP_NATIVE(UUIScript,execRequestShowPetitionAsMethod)
	MAP_NATIVE(UUIScript,execGetPetitionMethod)
	MAP_NATIVE(UUIScript,execGetUseNewPetitionBool)
	MAP_NATIVE(UUIScript,execRequestShowStepThree)
	MAP_NATIVE(UUIScript,execRequestShowStepTwo)
	MAP_NATIVE(UUIScript,execRequestShowNewUserPetition)
	MAP_NATIVE(UUIScript,execRequestPostItemList)
	MAP_NATIVE(UUIScript,execRequestCancelSentPost)
	MAP_NATIVE(UUIScript,execRequestRequestSentPost)
	MAP_NATIVE(UUIScript,execRequestDeleteSentPost)
	MAP_NATIVE(UUIScript,execRequestRequestSentPostList)
	MAP_NATIVE(UUIScript,execRequestRejectPost)
	MAP_NATIVE(UUIScript,execRequestReceivePost)
	MAP_NATIVE(UUIScript,execRequestRequestReceivedPost)
	MAP_NATIVE(UUIScript,execRequestDeleteReceivedPost)
	MAP_NATIVE(UUIScript,execRequestRequestReceivedPostList)
	MAP_NATIVE(UUIScript,execRequestSendPost)
	MAP_NATIVE(UUIScript,execRequestRefundItem)
	MAP_NATIVE(UUIScript,execGetDominionFlagIconTex)
	MAP_NATIVE(UUIScript,execRequestDominionInfo)
	MAP_NATIVE(UUIScript,execRequestJoinDominionWar)
	MAP_NATIVE(UUIScript,execRequestStopShowCrataeCubeRank)
	MAP_NATIVE(UUIScript,execRequestStartShowCrataeCubeRank)
	MAP_NATIVE(UUIScript,execRequestWithDrawPremiumItem)
	MAP_NATIVE(UUIScript,execGetNicknameColorWithIndex)
	MAP_NATIVE(UUIScript,execGetMaxNicknameColorIndexCnt)
	MAP_NATIVE(UUIScript,execRequestChangeNicknameNColor)
	MAP_NATIVE(UUIScript,execRequestPVPMatchRecord)
	MAP_NATIVE(UUIScript,execRequestFortressMapInfo)
	MAP_NATIVE(UUIScript,execRequestFortressSiegeInfo)
	MAP_NATIVE(UUIScript,execRequestAllAgitInfo)
	MAP_NATIVE(UUIScript,execRequestAllFortressInfo)
	MAP_NATIVE(UUIScript,execRequestAllCastleInfo)
	MAP_NATIVE(UUIScript,execCharacterCreateGetClassType)
	MAP_NATIVE(UUIScript,execCheckValidName)
	MAP_NATIVE(UUIScript,execCheckNameLength)
	MAP_NATIVE(UUIScript,execDefaultCharacterStop)
	MAP_NATIVE(UUIScript,execDefaultCharacterTurn)
	MAP_NATIVE(UUIScript,execDefaultCharacterMouseTurn)
	MAP_NATIVE(UUIScript,execSetCharacterColor)
	MAP_NATIVE(UUIScript,execSetCharacterStyle)
	MAP_NATIVE(UUIScript,execShowDefaultCharacter)
	MAP_NATIVE(UUIScript,execGetClassInitialStatEx)
	MAP_NATIVE(UUIScript,execGetClassInitialStat)
	MAP_NATIVE(UUIScript,execGetClassDescription)
	MAP_NATIVE(UUIScript,execExecLobbyNextEvent)
	MAP_NATIVE(UUIScript,execExecLobbyEvent)
	MAP_NATIVE(UUIScript,execClearDefaultCharacterInfo)
	MAP_NATIVE(UUIScript,execSetDefaultCharacter)
	MAP_NATIVE(UUIScript,execRequestPrevState)
	MAP_NATIVE(UUIScript,execRequestCreateCharacter)
	MAP_NATIVE(UUIScript,execIsActivateCharacter)
	MAP_NATIVE(UUIScript,execGetTimeToLastLogoutCharacter)
	MAP_NATIVE(UUIScript,execGetTimeToDisciplineCharacter)
	MAP_NATIVE(UUIScript,execGetTimeToDeleteCharacter)
	MAP_NATIVE(UUIScript,execSetSelectedCharacter)
	MAP_NATIVE(UUIScript,execIsDisciplineCharacter)
	MAP_NATIVE(UUIScript,execIsScheduledToDeleteCharacter)
	MAP_NATIVE(UUIScript,execResetCharacterPosition)
	MAP_NATIVE(UUIScript,execRequestDeleteCharacter)
	MAP_NATIVE(UUIScript,execRequestRestoreCharacter)
	MAP_NATIVE(UUIScript,execGetSelectedCharacterInfo)
	MAP_NATIVE(UUIScript,execRequestCharacterSelect)
	MAP_NATIVE(UUIScript,execStartGame)
	MAP_NATIVE(UUIScript,execGotoServerList)
	MAP_NATIVE(UUIScript,execGotoLogin)
	MAP_NATIVE(UUIScript,execCreateNewCharacter)
	MAP_NATIVE(UUIScript,execShowEnableTrackerBox)
	MAP_NATIVE(UUIScript,execExecuteAlign)
	MAP_NATIVE(UUIScript,execDeleteAttachedWindow)
	MAP_NATIVE(UUIScript,execClearTracker)
	MAP_NATIVE(UUIScript,execGetTrackerAttachedWindow)
	MAP_NATIVE(UUIScript,execGetTrackerAttachedWindowList)
	MAP_NATIVE(UUIScript,execShowExampleAnimation)
	MAP_NATIVE(UUIScript,execShowVirtualWindowBackground)
	MAP_NATIVE(UUIScript,execGetXMLControlIndex)
	MAP_NATIVE(UUIScript,execGetXMLControlString)
	MAP_NATIVE(UUIScript,execGetInterfaceDir)
	MAP_NATIVE(UUIScript,execInitCreditState)
	MAP_NATIVE(UUIScript,execShowMessageInLogin)
	MAP_NATIVE(UUIScript,execGetQuestLocation)
	MAP_NATIVE(UUIScript,execGetManorNameInManorList)
	MAP_NATIVE(UUIScript,execGetManorIDInManorList)
	MAP_NATIVE(UUIScript,execGetManorCount)
	MAP_NATIVE(UUIScript,execRequestProcureCropList)
	MAP_NATIVE(UUIScript,execGetWebBrowserHandle)
	MAP_NATIVE(UUIScript,execGetSceneMusicCtrlHandle)
	MAP_NATIVE(UUIScript,execGetSceneScreenCtrlHandle)
	MAP_NATIVE(UUIScript,execGetScenePcCtrlHandle)
	MAP_NATIVE(UUIScript,execGetSceneNpcCtrlHandle)
	MAP_NATIVE(UUIScript,execGetSceneCameraCtrlHandle)
	MAP_NATIVE(UUIScript,execGetCharacterViewportWindowHandle)
	MAP_NATIVE(UUIScript,execGetEffectViewportWndHandle)
	MAP_NATIVE(UUIScript,execGetWindowHandle)
	MAP_NATIVE(UUIScript,execGetTreeHandle)
	MAP_NATIVE(UUIScript,execGetTextureHandle)
	MAP_NATIVE(UUIScript,execGetTextListBoxHandle)
	MAP_NATIVE(UUIScript,execGetTextBoxHandle)
	MAP_NATIVE(UUIScript,execGetTabHandle)
	MAP_NATIVE(UUIScript,execGetStatusIconHandle)
	MAP_NATIVE(UUIScript,execGetStatusRoundHandle)
	MAP_NATIVE(UUIScript,execGetStatusBarHandle)
	MAP_NATIVE(UUIScript,execGetSliderCtrlHandle)
	MAP_NATIVE(UUIScript,execGetRadarMapCtrlHandle)
	MAP_NATIVE(UUIScript,execGetPropertyControllerHandle)
	MAP_NATIVE(UUIScript,execGetProgressCtrlHandle)
	MAP_NATIVE(UUIScript,execGetNameCtrlHandle)
	MAP_NATIVE(UUIScript,execGetMinimapCtrlHandle)
	MAP_NATIVE(UUIScript,execGetRichListCtrlHandle)
	MAP_NATIVE(UUIScript,execGetListCtrlHandle)
	MAP_NATIVE(UUIScript,execGetListBoxHandle)
	MAP_NATIVE(UUIScript,execGetItemWindowHandle)
	MAP_NATIVE(UUIScript,execGetHtmlHandle)
	MAP_NATIVE(UUIScript,execGetMultiEditBoxHandle)
	MAP_NATIVE(UUIScript,execGetEditBoxHandle)
	MAP_NATIVE(UUIScript,execGetDrawPanelHandle)
	MAP_NATIVE(UUIScript,execGetComboBoxHandle)
	MAP_NATIVE(UUIScript,execGetCheckBoxHandle)
	MAP_NATIVE(UUIScript,execGetChatWindowHandle)
	MAP_NATIVE(UUIScript,execGetButtonHandle)
	MAP_NATIVE(UUIScript,execGetBarHandle)
	MAP_NATIVE(UUIScript,execGetAnimTextureHandle)
	MAP_NATIVE(UUIScript,execFindHandle)
	MAP_NATIVE(UUIScript,execGetHandle)
	MAP_NATIVE(UUIScript,execRequestObserverModeEnd)
	MAP_NATIVE(UUIScript,execRequestExEnchantSkill)
	MAP_NATIVE(UUIScript,execRequestExEnchantSkillInfoDetail)
	MAP_NATIVE(UUIScript,execRequestExEnchantSkillInfo)
	MAP_NATIVE(UUIScript,execRequestAcquireSkillSubClan)
	MAP_NATIVE(UUIScript,execRequestAcquireSkill)
	MAP_NATIVE(UUIScript,execRequestAcquireSkillInfo)
	MAP_NATIVE(UUIScript,execBeginBenchMark)
	MAP_NATIVE(UUIScript,execBeginPlay)
	MAP_NATIVE(UUIScript,execEraseReplayFile)
	MAP_NATIVE(UUIScript,execBeginReplay)
	MAP_NATIVE(UUIScript,execGetDirList)
	MAP_NATIVE(UUIScript,execGetFileList)
	MAP_NATIVE(UUIScript,execGetSystemDir)
	MAP_NATIVE(UUIScript,execGetCharacterSelectionActor)
	MAP_NATIVE(UUIScript,execGetPlayerPosition)
	MAP_NATIVE(UUIScript,execRequestHennaUnEquip)
	MAP_NATIVE(UUIScript,execRequestHennaUnEquipList)
	MAP_NATIVE(UUIScript,execRequestHennaUnEquipInfo)
	MAP_NATIVE(UUIScript,execRequestHennaEquip)
	MAP_NATIVE(UUIScript,execRequestHennaItemList)
	MAP_NATIVE(UUIScript,execRequestHennaItemInfo)
	MAP_NATIVE(UUIScript,execGetZoneNameWithLocation)
	MAP_NATIVE(UUIScript,execGetInZoneNameWithZoneID)
	MAP_NATIVE(UUIScript,execGetCurrentZoneID)
	MAP_NATIVE(UUIScript,execGetCurrentZoneName)
	MAP_NATIVE(UUIScript,execRequestOpenMinimap)
	MAP_NATIVE(UUIScript,execStopSound)
	MAP_NATIVE(UUIScript,execPlaySoundUntilEnd)
	MAP_NATIVE(UUIScript,execPlaySound)
	MAP_NATIVE(UUIScript,execRequestChangeToAwakenedClass)
	MAP_NATIVE(UUIScript,execRequestCallToChangeClass)
	MAP_NATIVE(UUIScript,execRequestShowVisionMovie)
	MAP_NATIVE(UUIScript,execSetItemTextLink)
	MAP_NATIVE(UUIScript,execReturnShowXMLDetailTooltip)
	MAP_NATIVE(UUIScript,execGetItemTextSectionInfos)
	MAP_NATIVE(UUIScript,execGetItemKeepSelectInfo)
	MAP_NATIVE(UUIScript,execReturnTooltipInfo)
	MAP_NATIVE(UUIScript,execGetVolumeScale)
	MAP_NATIVE(UUIScript,execTutorialVoiceOn)
	MAP_NATIVE(UUIScript,execTutorialVoiceOff)
	MAP_NATIVE(UUIScript,execGetMusicVolume)
	MAP_NATIVE(UUIScript,execSetSystemVoiceVolume)
	MAP_NATIVE(UUIScript,execSetNpcVoiceVolume)
	MAP_NATIVE(UUIScript,execSetMusicVolume)
	MAP_NATIVE(UUIScript,execSetAmbientVolume)
	MAP_NATIVE(UUIScript,execSetEffectVolume)
	MAP_NATIVE(UUIScript,execSetSoundVolume)
	MAP_NATIVE(UUIScript,execGetConstantFloat)
	MAP_NATIVE(UUIScript,execGetConstantBool)
	MAP_NATIVE(UUIScript,execGetConstantString)
	MAP_NATIVE(UUIScript,execGetConstantInt)
	MAP_NATIVE(UUIScript,execSaveINI)
	MAP_NATIVE(UUIScript,execRemoveINI)
	MAP_NATIVE(UUIScript,execSetINIString)
	MAP_NATIVE(UUIScript,execSetINIFloat)
	MAP_NATIVE(UUIScript,execSetINIInt)
	MAP_NATIVE(UUIScript,execSetINIBool)
	MAP_NATIVE(UUIScript,execGetINIString)
	MAP_NATIVE(UUIScript,execGetINIFloat)
	MAP_NATIVE(UUIScript,execGetINIInt)
	MAP_NATIVE(UUIScript,execGetINIBool)
	MAP_NATIVE(UUIScript,execRefreshINI)
	MAP_NATIVE(UUIScript,execRequestSaveInventoryOrder)
	MAP_NATIVE(UUIScript,execGetRaceTicketString)
	MAP_NATIVE(UUIScript,execGetLottoString)
	MAP_NATIVE(UUIScript,execIsSigilArmor)
	MAP_NATIVE(UUIScript,execIsMagicalArmor)
	MAP_NATIVE(UUIScript,execGetSpiritShotPower)
	MAP_NATIVE(UUIScript,execGetSoulShotPower)
	MAP_NATIVE(UUIScript,execGetAttackSpeedString)
	MAP_NATIVE(UUIScript,execGetWeaponTypeString)
	MAP_NATIVE(UUIScript,execGetSlotTypeString)
	MAP_NATIVE(UUIScript,execGetInventoryItemCount)
	MAP_NATIVE(UUIScript,execSendWindowsInfo)
	MAP_NATIVE(UUIScript,execApplyOptionToDamageText)
	MAP_NATIVE(UUIScript,execGetChatFilterBool)
	MAP_NATIVE(UUIScript,execSetChatFilterBool)
	MAP_NATIVE(UUIScript,execGetOptionString)
	MAP_NATIVE(UUIScript,execGetOptionFloat)
	MAP_NATIVE(UUIScript,execGetOptionInt)
	MAP_NATIVE(UUIScript,execGetOptionBool)
	MAP_NATIVE(UUIScript,execSetOptionString)
	MAP_NATIVE(UUIScript,execSetOptionFloat)
	MAP_NATIVE(UUIScript,execSetOptionInt)
	MAP_NATIVE(UUIScript,execSetOptionBool)
	MAP_NATIVE(UUIScript,execStopMacro)
	MAP_NATIVE(UUIScript,execIsStackableItem)
	MAP_NATIVE(UUIScript,execUseSkill)
	MAP_NATIVE(UUIScript,execDoAction)
	MAP_NATIVE(UUIScript,execExecuteCommandFromAction)
	MAP_NATIVE(UUIScript,execExecuteCommand)
	MAP_NATIVE(UUIScript,execGetLocalizedL2TextPathNameUC)
	MAP_NATIVE(UUIScript,execChangeLanguage)
	MAP_NATIVE(UUIScript,execCanUseSystemDPIScaling)
	MAP_NATIVE(UUIScript,execSetOutline)
	MAP_NATIVE(UUIScript,execSetFixedDefaultCamera)
	MAP_NATIVE(UUIScript,execSetIgnoreFriendInviting)
	MAP_NATIVE(UUIScript,execSetIgnorePartyInviting)
	MAP_NATIVE(UUIScript,execSetRenderCharacterCount)
	MAP_NATIVE(UUIScript,execSetShaderWaterEffect)
	MAP_NATIVE(UUIScript,execSetDepthBufferShadow)
	MAP_NATIVE(UUIScript,execSetYebisGlow)
	MAP_NATIVE(UUIScript,execSetYebisDOF)
	MAP_NATIVE(UUIScript,execSetDOF)
	MAP_NATIVE(UUIScript,execSetL2Shader)
	MAP_NATIVE(UUIScript,execSetWeatherEffect)
	MAP_NATIVE(UUIScript,execSetHDR)
	MAP_NATIVE(UUIScript,execSetYebisAntialiasing)
	MAP_NATIVE(UUIScript,execSetAntialiasing)
	MAP_NATIVE(UUIScript,execSetReflectionEffect)
	MAP_NATIVE(UUIScript,execSetPawnClippingRange)
	MAP_NATIVE(UUIScript,execSetTerrainClippingRange)
	MAP_NATIVE(UUIScript,execSetBackgroundEffect)
	MAP_NATIVE(UUIScript,execSetShadow)
	MAP_NATIVE(UUIScript,execSetEffectDetail)
	MAP_NATIVE(UUIScript,execSetMotionDetail)
	MAP_NATIVE(UUIScript,execSetModelingDetail)
	MAP_NATIVE(UUIScript,execSetTextureDetail)
	MAP_NATIVE(UUIScript,execSetKeyCrypt)
	MAP_NATIVE(UUIScript,execSetDefaultPosition)
	MAP_NATIVE(UUIScript,execGetShaderVersion)
	MAP_NATIVE(UUIScript,execGetResolutionIndex)
	MAP_NATIVE(UUIScript,execGetMultiSample)
	MAP_NATIVE(UUIScript,execSetResolution)
	MAP_NATIVE(UUIScript,execGetRefreshRateList)
	MAP_NATIVE(UUIScript,execGetResolutionList)
	MAP_NATIVE(UUIScript,execGetLanguageCustom)
	MAP_NATIVE(UUIScript,execGetLanguage)
	MAP_NATIVE(UUIScript,execIsEnableKeyCrypt)
	MAP_NATIVE(UUIScript,execIsCheckKeyCrypt)
	MAP_NATIVE(UUIScript,execIsUseKeyCrypt)
	MAP_NATIVE(UUIScript,execIsEnableEngSelection)
	MAP_NATIVE(UUIScript,execCanUseHDR)
	MAP_NATIVE(UUIScript,execCanUseJoystick)
	MAP_NATIVE(UUIScript,execCanUseAudio)
	MAP_NATIVE(UUIScript,execGetServerNo)
	MAP_NATIVE(UUIScript,execGetServerAgeLimit)
	MAP_NATIVE(UUIScript,execExecQuit)
	MAP_NATIVE(UUIScript,execExecRestart)
	MAP_NATIVE(UUIScript,execEndSystemMessageParam)
	MAP_NATIVE(UUIScript,execAddSystemMessageParam)
	MAP_NATIVE(UUIScript,execAddSystemMessageString)
	MAP_NATIVE(UUIScript,execAddSystemMessage)
	MAP_NATIVE(UUIScript,execGetPrivateShopMessage)
	MAP_NATIVE(UUIScript,execSetPrivateShopMessage)
	MAP_NATIVE(UUIScript,execGetMaxLevel)
	MAP_NATIVE(UUIScript,execGetCurrentResolution)
	MAP_NATIVE(UUIScript,execGetPcCafeItemIconPackageName)
	MAP_NATIVE(UUIScript,execGetClickLocation)
	MAP_NATIVE(UUIScript,execCheckItemLimit)
	MAP_NATIVE(UUIScript,execIsTriggerSkill)
	MAP_NATIVE(UUIScript,execIsIconHide)
	MAP_NATIVE(UUIScript,execIsSongDance)
	MAP_NATIVE(UUIScript,execGetIsMagic)
	MAP_NATIVE(UUIScript,execGetDebuffType)
	MAP_NATIVE(UUIScript,execGetRoutingString)
	MAP_NATIVE(UUIScript,execGetUserRankString)
	MAP_NATIVE(UUIScript,execRequestBypassToServer)
	MAP_NATIVE(UUIScript,execGetAllianceCrestTexFromAllianceCrestID)
	MAP_NATIVE(UUIScript,execGetPledgeCrestTexFromPledgeCrestID)
	MAP_NATIVE(UUIScript,execGetCurrentIMELang)
	MAP_NATIVE(UUIScript,execPlayConsoleSound)
	MAP_NATIVE(UUIScript,execConvertTimeToString)
	MAP_NATIVE(UUIScript,execCeilingNum)
	MAP_NATIVE(UUIScript,execConvertNumToTextNoAdena)
	MAP_NATIVE(UUIScript,execConvertNumToText)
	MAP_NATIVE(UUIScript,execMakeCostString)
	MAP_NATIVE(UUIScript,execMakeCostStringINT64)
	MAP_NATIVE(UUIScript,execGetItemGradeTextureName)
	MAP_NATIVE(UUIScript,execGetItemGradeString)
	MAP_NATIVE(UUIScript,execMakeFullItemName)
	MAP_NATIVE(UUIScript,execNextStringWithWidth)
	MAP_NATIVE(UUIScript,execDivideStringWithWidth)
	MAP_NATIVE(UUIScript,execGetTextSize)
	MAP_NATIVE(UUIScript,execGetTextSizeDefault)
	MAP_NATIVE(UUIScript,execMakeFullSystemMsg)
	MAP_NATIVE(UUIScript,execGetScript)
	MAP_NATIVE(UUIScript,execGetNpcString)
	MAP_NATIVE(UUIScript,execGetSystemMessageWithParamNumber)
	MAP_NATIVE(UUIScript,execGetSystemMsgInfo)
	MAP_NATIVE(UUIScript,execGetSystemMessage)
	MAP_NATIVE(UUIScript,execGetSystemString)
	MAP_NATIVE(UUIScript,execIsKeyDown)
	MAP_NATIVE(UUIScript,execDebug)
	MAP_NATIVE(UUIScript,execConvertTimetoStr)
	MAP_NATIVE(UUIScript,execGetTimeStructGMT)
	MAP_NATIVE(UUIScript,execGetTimeStruct)
	MAP_NATIVE(UUIScript,execGetAppMilliSeconds)
	MAP_NATIVE(UUIScript,execGetAppSeconds)
	MAP_NATIVE(UUIScript,execGetTimeString)
	MAP_NATIVE(UUIScript,execMakeTimeStr)
	MAP_NATIVE(UUIScript,execMakeToppingBuffTimeStr)
	MAP_NATIVE(UUIScript,execMakeBuffTimeStr)
	MAP_NATIVE(UUIScript,execGetPartyMemberSummonedInfo)
	MAP_NATIVE(UUIScript,execGetPartyMemberPetInfo)
	MAP_NATIVE(UUIScript,execGetPartyMemberInfo)
	MAP_NATIVE(UUIScript,execGetTeleportFlagCount)
	MAP_NATIVE(UUIScript,execGetTeleportBookMarkCount)
	MAP_NATIVE(UUIScript,execGetAdenaStr)
	MAP_NATIVE(UUIScript,execGetAdena)
	MAP_NATIVE(UUIScript,execGetClanNameValue)
	MAP_NATIVE(UUIScript,execGetClanName)
	MAP_NATIVE(UUIScript,execGetArtifactIndex)
	MAP_NATIVE(UUIScript,execIsPlayerStand)
	MAP_NATIVE(UUIScript,execIsBuilderPC)
	MAP_NATIVE(UUIScript,execGetClassStep)
	MAP_NATIVE(UUIScript,execGetAgathionIndex)
	MAP_NATIVE(UUIScript,execGetJewelIndex)
	MAP_NATIVE(UUIScript,execGetDecoIndex)
	MAP_NATIVE(UUIScript,execGetAccessoryItemID)
	MAP_NATIVE(UUIScript,execGetSkillInfo_WRF)
	MAP_NATIVE(UUIScript,execGetSkillInfo)
	MAP_NATIVE(UUIScript,execGetSummonPoint)
	MAP_NATIVE(UUIScript,execGetSummonInfo)
	MAP_NATIVE(UUIScript,execGetPetInfo)
	MAP_NATIVE(UUIScript,execGetUserInfo)
	MAP_NATIVE(UUIScript,execGetTargetInfo)
	MAP_NATIVE(UUIScript,execGetPlayerInfo)
	MAP_NATIVE(UUIScript,execGetPlayerRealName)
	MAP_NATIVE(UUIScript,execGetClassTransferDegree)
	MAP_NATIVE(UUIScript,execGetClassRoleNameByRole)
	MAP_NATIVE(UUIScript,execGetClassRoleName)
	MAP_NATIVE(UUIScript,execGetClassRoleType)
	MAP_NATIVE(UUIScript,execGetClassLevel)
	MAP_NATIVE(UUIScript,execGetClassIndex)
	MAP_NATIVE(UUIScript,execGetClassType)
	MAP_NATIVE(UUIScript,execRequestInviteMpcc)
	MAP_NATIVE(UUIScript,execRequestInviteParty)
	MAP_NATIVE(UUIScript,execRequestInvitePartyByTargetID)
	MAP_NATIVE(UUIScript,execHasClanEmblem)
	MAP_NATIVE(UUIScript,execHasClanCrest)
	MAP_NATIVE(UUIScript,execGetCastleLocationName)
	MAP_NATIVE(UUIScript,execGetCastleRegionID)
	MAP_NATIVE(UUIScript,execGetCastleName)
	MAP_NATIVE(UUIScript,execRequestPCCafeCouponUse)
	MAP_NATIVE(UUIScript,execRequestClanMemberAuth)
	MAP_NATIVE(UUIScript,execRequestEditClanAuth)
	MAP_NATIVE(UUIScript,execRequestClanAuth)
	MAP_NATIVE(UUIScript,execRequestClanWarList)
	MAP_NATIVE(UUIScript,execRequestClanChangeNickName)
	MAP_NATIVE(UUIScript,execRequestAllianceRegisterCrestByFilePath)
	MAP_NATIVE(UUIScript,execRequestClanUnregisterEmblem)
	MAP_NATIVE(UUIScript,execRequestClanRegisterEmblem)
	MAP_NATIVE(UUIScript,execRequestClanRegisterEmblemByFilePath)
	MAP_NATIVE(UUIScript,execRequestClanUnregisterCrest)
	MAP_NATIVE(UUIScript,execRequestClanRegisterCrest)
	MAP_NATIVE(UUIScript,execRequestClanRegisterCrestByFilePath)
	MAP_NATIVE(UUIScript,execRequestClanReorganizeMember)
	MAP_NATIVE(UUIScript,execRequestClanWithdrawWarWithClanName)
	MAP_NATIVE(UUIScript,execRequestClanWithdrawWar)
	MAP_NATIVE(UUIScript,execRequestClanDeclareWarWithClanName)
	MAP_NATIVE(UUIScript,execRequestClanDeclareWarWithUserID)
	MAP_NATIVE(UUIScript,execRequestClanDeclareWar)
	MAP_NATIVE(UUIScript,execRequestClanAskJoinByName)
	MAP_NATIVE(UUIScript,execRequestClanAskJoin)
	MAP_NATIVE(UUIScript,execRequestClanExpelMember)
	MAP_NATIVE(UUIScript,execRequestClanLeave)
	MAP_NATIVE(UUIScript,execRequestClanDeletePupil)
	MAP_NATIVE(UUIScript,execRequestClanAssignPupil)
	MAP_NATIVE(UUIScript,execRequestClanChangeGrade)
	MAP_NATIVE(UUIScript,execRequestClanGradeList)
	MAP_NATIVE(UUIScript,execRequestClanMemberInfo)
	MAP_NATIVE(UUIScript,execGetPartyMemberLocationWithID)
	MAP_NATIVE(UUIScript,execGetPartyMemberLocation)
	MAP_NATIVE(UUIScript,execGetPartyMemberCount)
	MAP_NATIVE(UUIScript,execSendPrivateShopList)
	MAP_NATIVE(UUIScript,execRequestQuitPrivateShop)
	MAP_NATIVE(UUIScript,execRequestDispel)
	MAP_NATIVE(UUIScript,execRequestDuelSurrender)
	MAP_NATIVE(UUIScript,execRequestDuelAnswerStart)
	MAP_NATIVE(UUIScript,execRequestDuelStart)
	MAP_NATIVE(UUIScript,execRequestItemList)
	MAP_NATIVE(UUIScript,execRequestCrystallizeItemCancel)
	MAP_NATIVE(UUIScript,execRequestCrystallizeItem)
	MAP_NATIVE(UUIScript,execRequestUnequipItem)
	MAP_NATIVE(UUIScript,execRequestDropItem)
	MAP_NATIVE(UUIScript,execRequestDestroyItem)
	MAP_NATIVE(UUIScript,execRequestUseItem)
	MAP_NATIVE(UUIScript,execBR_RequestRestartPoint)
	MAP_NATIVE(UUIScript,execRequestRestartPoint)
	MAP_NATIVE(UUIScript,execRequestMultiSellChoose)
	MAP_NATIVE(UUIScript,execRequestBBSBoard)
	MAP_NATIVE(UUIScript,execRequestPreviewItem)
	MAP_NATIVE(UUIScript,execRequestPackageSend)
	MAP_NATIVE(UUIScript,execRequestPackageSendableItemList)
	MAP_NATIVE(UUIScript,execRequestChangePetName)
	MAP_NATIVE(UUIScript,execRequestWarehouseWithdraw)
	MAP_NATIVE(UUIScript,execRequestWarehouseDeposit)
	MAP_NATIVE(UUIScript,execRequestReTargetUser)
	MAP_NATIVE(UUIScript,execRequestTargetUser)
	MAP_NATIVE(UUIScript,execRequestAssist)
	MAP_NATIVE(UUIScript,execRequestAction)
	MAP_NATIVE(UUIScript,execRequestAttack)
	MAP_NATIVE(UUIScript,execRequestSetCrop)
	MAP_NATIVE(UUIScript,execRequestSetSeed)
	MAP_NATIVE(UUIScript,execRequestBuySeed)
	MAP_NATIVE(UUIScript,execNotifyFriendRejectState)
	MAP_NATIVE(UUIScript,execRequestBuyItem)
	MAP_NATIVE(UUIScript,execRequestSellItem)
	MAP_NATIVE(UUIScript,execAnswerTradeRequest)
	MAP_NATIVE(UUIScript,execRequestAddTradeItem)
	MAP_NATIVE(UUIScript,execRequestStartTrade)
	MAP_NATIVE(UUIScript,execRequestTradeDone)
	MAP_NATIVE(UUIScript,execRequestRaidRecord)
	MAP_NATIVE(UUIScript,execRequestSkillList)
	MAP_NATIVE(UUIScript,execRequestTargetCancel)
	MAP_NATIVE(UUIScript,execRequestSelfTarget)
	MAP_NATIVE(UUIScript,execRequestAuthCardKeyLogin)
	MAP_NATIVE(UUIScript,execRequestExit)
	MAP_NATIVE(UUIScript,execIsFullScreen)
	MAP_NATIVE(UUIScript,execIsPKMode)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIScript);

NATIVE_INFO(UGFxValue) GNWindowUGFxValueNatives[] = 
{ 
	MAP_NATIVE(UGFxValue,execGetFloat)
	MAP_NATIVE(UGFxValue,execGetInt)
	MAP_NATIVE(UGFxValue,execGetBool)
	MAP_NATIVE(UGFxValue,execGetString)
	MAP_NATIVE(UGFxValue,execSetElement)
	MAP_NATIVE(UGFxValue,execSetBool)
	MAP_NATIVE(UGFxValue,execSetInt)
	MAP_NATIVE(UGFxValue,execSetFloat)
	MAP_NATIVE(UGFxValue,execSetMemberBool)
	MAP_NATIVE(UGFxValue,execSetMemberValue)
	MAP_NATIVE(UGFxValue,execSetMemberString)
	MAP_NATIVE(UGFxValue,execSetMemberInt)
	MAP_NATIVE(UGFxValue,execSetMemberFloat)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UGFxValue);

NATIVE_INFO(UGMAPI) GNWindowUGMAPINatives[] = 
{ 
	MAP_NATIVE(UGMAPI,execRequestSnoopEnd)
	MAP_NATIVE(UGMAPI,execGetObservingUserInfo)
	MAP_NATIVE(UGMAPI,execRequestGMCommand)
	MAP_NATIVE(UGMAPI,execBeginGMChangeServer)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UGMAPI);

NATIVE_INFO(UGraphicAPI) GNWindowUGraphicAPINatives[] = 
{ 
	MAP_NATIVE(UGraphicAPI,execDoFResume)
	MAP_NATIVE(UGraphicAPI,execDoFPause)
	MAP_NATIVE(UGraphicAPI,execDoFSetEndDistance)
	MAP_NATIVE(UGraphicAPI,execDoFSetStartDistance)
	MAP_NATIVE(UGraphicAPI,execDoFSetFocusDistance)
	MAP_NATIVE(UGraphicAPI,execDoFSetFocusLocation)
	MAP_NATIVE(UGraphicAPI,execDoFSetFocusPlayer)
	MAP_NATIVE(UGraphicAPI,execDoFSetFocusActor)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UGraphicAPI);

NATIVE_INFO(UHairshopAPI) GNWindowUHairshopAPINatives[] = 
{ 
	MAP_NATIVE(UHairshopAPI,execApplyHairType)
	MAP_NATIVE(UHairshopAPI,execApplyCharHairInfo)
	MAP_NATIVE(UHairshopAPI,execUpdateCharHairInfo)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UHairshopAPI);

NATIVE_INFO(UHennaAPI) GNWindowUHennaAPINatives[] = 
{ 
	MAP_NATIVE(UHennaAPI,execGetPremiumHennaPeriod)
	MAP_NATIVE(UHennaAPI,execGetPremiumHennaInfo)
	MAP_NATIVE(UHennaAPI,execGetHennaInfo)
	MAP_NATIVE(UHennaAPI,execGetHennaInfoCount)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UHennaAPI);

NATIVE_INFO(UHeroBookAPI) GNWindowUHeroBookAPINatives[] = 
{ 
	MAP_NATIVE(UHeroBookAPI,execGetHeroBookItemListFromInven)
	MAP_NATIVE(UHeroBookAPI,execGetAllHeroBookListData)
	MAP_NATIVE(UHeroBookAPI,execGetHeroBookMaxPoint)
	MAP_NATIVE(UHeroBookAPI,execGetHeroBookData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UHeroBookAPI);

NATIVE_INFO(UHeroTowerAPI) GNWindowUHeroTowerAPINatives[] = 
{ 
	MAP_NATIVE(UHeroTowerAPI,execRequestHeroMatchRecord)
	MAP_NATIVE(UHeroTowerAPI,execRequestWriteHeroWords)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UHeroTowerAPI);

NATIVE_INFO(UHomunculusAPI) GNWindowUHomunculusAPINatives[] = 
{ 
	MAP_NATIVE(UHomunculusAPI,execGetHomunculusSlotActivateCost)
	MAP_NATIVE(UHomunculusAPI,execGetHomunculusGatchaList)
	MAP_NATIVE(UHomunculusAPI,execGetMaxHomunculusNpcLevelData)
	MAP_NATIVE(UHomunculusAPI,execGetHomunculusNpcLevelData)
	MAP_NATIVE(UHomunculusAPI,execGetHomunculusNpcData)
	MAP_NATIVE(UHomunculusAPI,execGetHomunculusDatas)
	MAP_NATIVE(UHomunculusAPI,execGetBonusResetItem)
	MAP_NATIVE(UHomunculusAPI,execGetPointResetItem)
	MAP_NATIVE(UHomunculusAPI,execGetHomunEnchantData)
	MAP_NATIVE(UHomunculusAPI,execGetRemainBirthSeconds)
	MAP_NATIVE(UHomunculusAPI,execGetHomunCreateData)
	MAP_NATIVE(UHomunculusAPI,execIsHomunReady)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UHomunculusAPI);

NATIVE_INFO(UHtmlHandle) GNWindowUHtmlHandleNatives[] = 
{ 
	MAP_NATIVE(UHtmlHandle,execIsPageLock)
	MAP_NATIVE(UHtmlHandle,execSetPageLock)
	MAP_NATIVE(UHtmlHandle,execSetHtmlBuffData)
	MAP_NATIVE(UHtmlHandle,execControllerExecution)
	MAP_NATIVE(UHtmlHandle,execGetFrameMaxHeight)
	MAP_NATIVE(UHtmlHandle,execClear)
	MAP_NATIVE(UHtmlHandle,execLoadHtmlFromString)
	MAP_NATIVE(UHtmlHandle,execLoadHtml)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UHtmlHandle);

NATIVE_INFO(UInputAPI) GNWindowUInputAPINatives[] = 
{ 
	MAP_NATIVE(UInputAPI,execGetInputKey)
	MAP_NATIVE(UInputAPI,execGetKeyString)
	MAP_NATIVE(UInputAPI,execIsAltPressed)
	MAP_NATIVE(UInputAPI,execIsCtrlPressed)
	MAP_NATIVE(UInputAPI,execIsShiftPressed)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UInputAPI);

NATIVE_INFO(UItemLookChangeAPI) GNWindowUItemLookChangeAPINatives[] = 
{ 
	MAP_NATIVE(UItemLookChangeAPI,execRequestExCancelItemLookChange)
	MAP_NATIVE(UItemLookChangeAPI,execRequestExTryToPut_Shape_Shifting_EnchantSupportItem)
	MAP_NATIVE(UItemLookChangeAPI,execRequestExTryToPut_Shape_Shifting_TargetItem)
	MAP_NATIVE(UItemLookChangeAPI,execRequestItemLookChange)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UItemLookChangeAPI);

NATIVE_INFO(UItemWindowHandle) GNWindowUItemWindowHandleNatives[] = 
{ 
	MAP_NATIVE(UItemWindowHandle,execSetDualSlotBitType)
	MAP_NATIVE(UItemWindowHandle,execSetNoItemDrag)
	MAP_NATIVE(UItemWindowHandle,execSetButtonClick)
	MAP_NATIVE(UItemWindowHandle,execClearItemTooltip)
	MAP_NATIVE(UItemWindowHandle,execClearNewlyAcquired)
	MAP_NATIVE(UItemWindowHandle,execSetNewlyAcquired)
	MAP_NATIVE(UItemWindowHandle,execSetIconDrawType)
	MAP_NATIVE(UItemWindowHandle,execSetIconIndex)
	MAP_NATIVE(UItemWindowHandle,execSetToggleEffect)
	MAP_NATIVE(UItemWindowHandle,execResizeScrollBar)
	MAP_NATIVE(UItemWindowHandle,execSetSelectedNum)
	MAP_NATIVE(UItemWindowHandle,execPushSideTypeNextBtn)
	MAP_NATIVE(UItemWindowHandle,execPushSideTypePrevBtn)
	MAP_NATIVE(UItemWindowHandle,execGetSideTypeCurPage)
	MAP_NATIVE(UItemWindowHandle,execGetSideTypePageNum)
	MAP_NATIVE(UItemWindowHandle,execFindItemByClassID)
	MAP_NATIVE(UItemWindowHandle,execSetItemUsability)
	MAP_NATIVE(UItemWindowHandle,execSetExpandItemNum)
	MAP_NATIVE(UItemWindowHandle,execSetCol)
	MAP_NATIVE(UItemWindowHandle,execSetRow)
	MAP_NATIVE(UItemWindowHandle,execSetDisableTex)
	MAP_NATIVE(UItemWindowHandle,execGetIndexAt)
	MAP_NATIVE(UItemWindowHandle,execSwapItems)
	MAP_NATIVE(UItemWindowHandle,execShowScrollBar)
	MAP_NATIVE(UItemWindowHandle,execSetFaded)
	MAP_NATIVE(UItemWindowHandle,execFindItemWithReserved)
	MAP_NATIVE(UItemWindowHandle,execFindItemWithAllProperty)
	MAP_NATIVE(UItemWindowHandle,execFindItem)
	MAP_NATIVE(UItemWindowHandle,execClear)
	MAP_NATIVE(UItemWindowHandle,execSetBlessPanelDrawType)
	MAP_NATIVE(UItemWindowHandle,execSetItemSkillDisabled)
	MAP_NATIVE(UItemWindowHandle,execGetItemSkillDisabled)
	MAP_NATIVE(UItemWindowHandle,execGetItemIdLevel)
	MAP_NATIVE(UItemWindowHandle,execGetItem)
	MAP_NATIVE(UItemWindowHandle,execGetSelectedItem)
	MAP_NATIVE(UItemWindowHandle,execDeleteItem)
	MAP_NATIVE(UItemWindowHandle,execSetItem)
	MAP_NATIVE(UItemWindowHandle,execAddItemWithFaded)
	MAP_NATIVE(UItemWindowHandle,execAddItem)
	MAP_NATIVE(UItemWindowHandle,execClearSelect)
	MAP_NATIVE(UItemWindowHandle,execGetItemNum)
	MAP_NATIVE(UItemWindowHandle,execGetSelectedNum)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UItemWindowHandle);

NATIVE_INFO(UL2UIPacketBase) GNWindowUL2UIPacketBaseNatives[] = 
{ 
	MAP_NATIVE(UL2UIPacketBase,execRequestUIPacket)
	MAP_NATIVE(UL2UIPacketBase,execGetCurDecodePos)
	MAP_NATIVE(UL2UIPacketBase,execDecodeWString)
	MAP_NATIVE(UL2UIPacketBase,execDecodeString)
	MAP_NATIVE(UL2UIPacketBase,execDecodeDouble)
	MAP_NATIVE(UL2UIPacketBase,execDecodeFloat)
	MAP_NATIVE(UL2UIPacketBase,execDecodeInt64)
	MAP_NATIVE(UL2UIPacketBase,execDecodeUInt32)
	MAP_NATIVE(UL2UIPacketBase,execDecodeInt)
	MAP_NATIVE(UL2UIPacketBase,execDecodeUInt16)
	MAP_NATIVE(UL2UIPacketBase,execDecodeShort)
	MAP_NATIVE(UL2UIPacketBase,execDecodeWChar_t)
	MAP_NATIVE(UL2UIPacketBase,execDecodeChar)
	MAP_NATIVE(UL2UIPacketBase,execDecodeByte)
	MAP_NATIVE(UL2UIPacketBase,execDecodeBool)
	MAP_NATIVE(UL2UIPacketBase,execSetShort)
	MAP_NATIVE(UL2UIPacketBase,execEncodeWString)
	MAP_NATIVE(UL2UIPacketBase,execEncodeString)
	MAP_NATIVE(UL2UIPacketBase,execEncodeDouble)
	MAP_NATIVE(UL2UIPacketBase,execEncodeFloat)
	MAP_NATIVE(UL2UIPacketBase,execEncodeInt64)
	MAP_NATIVE(UL2UIPacketBase,execEncodeUInt32)
	MAP_NATIVE(UL2UIPacketBase,execEncodeInt)
	MAP_NATIVE(UL2UIPacketBase,execEncodeUInt16)
	MAP_NATIVE(UL2UIPacketBase,execEncodeShort)
	MAP_NATIVE(UL2UIPacketBase,execEncodeWChar_t)
	MAP_NATIVE(UL2UIPacketBase,execEncodeChar)
	MAP_NATIVE(UL2UIPacketBase,execEncodeByte)
	MAP_NATIVE(UL2UIPacketBase,execEncodeBool)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UL2UIPacketBase);

NATIVE_INFO(UListBoxHandle) GNWindowUListBoxHandleNatives[] = 
{ 
	MAP_NATIVE(UListBoxHandle,execSetMaxRow)
	MAP_NATIVE(UListBoxHandle,execSetDrawOffset)
	MAP_NATIVE(UListBoxHandle,execSetListBoxScrollPosition)
	MAP_NATIVE(UListBoxHandle,execGetSelectedItemData)
	MAP_NATIVE(UListBoxHandle,execGetSelectedString)
	MAP_NATIVE(UListBoxHandle,execAddStringWithData)
	MAP_NATIVE(UListBoxHandle,execClear)
	MAP_NATIVE(UListBoxHandle,execAddString)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UListBoxHandle);

NATIVE_INFO(UListCtrlHandle) GNWindowUListCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(UListCtrlHandle,execIsAscending)
	MAP_NATIVE(UListCtrlHandle,execSetAscend)
	MAP_NATIVE(UListCtrlHandle,execHideSortIcon)
	MAP_NATIVE(UListCtrlHandle,execShowSortIcon)
	MAP_NATIVE(UListCtrlHandle,execSetSortable)
	MAP_NATIVE(UListCtrlHandle,execGetShowRow)
	MAP_NATIVE(UListCtrlHandle,execSetUseHorizontalScrollBar)
	MAP_NATIVE(UListCtrlHandle,execSetColumnMinimumWidth)
	MAP_NATIVE(UListCtrlHandle,execSetColumnString)
	MAP_NATIVE(UListCtrlHandle,execSetAppearTooltipAtMouseX)
	MAP_NATIVE(UListCtrlHandle,execSetSelectedSelTooltip)
	MAP_NATIVE(UListCtrlHandle,execEnablePageBrowser)
	MAP_NATIVE(UListCtrlHandle,execSetColumnWidth)
	MAP_NATIVE(UListCtrlHandle,execSetResizable)
	MAP_NATIVE(UListCtrlHandle,execSetHeaderTextOffset)
	MAP_NATIVE(UListCtrlHandle,execSetHeaderAlignment)
	MAP_NATIVE(UListCtrlHandle,execAdjustColumnWidth)
	MAP_NATIVE(UListCtrlHandle,execInitListCtrl)
	MAP_NATIVE(UListCtrlHandle,execGetRec)
	MAP_NATIVE(UListCtrlHandle,execGetSelectedRec)
	MAP_NATIVE(UListCtrlHandle,execModifyRecord)
	MAP_NATIVE(UListCtrlHandle,execShowScrollBar)
	MAP_NATIVE(UListCtrlHandle,execSetSelectedIndex)
	MAP_NATIVE(UListCtrlHandle,execGetSelectedIndex)
	MAP_NATIVE(UListCtrlHandle,execGetRecordCount)
	MAP_NATIVE(UListCtrlHandle,execDeleteRecord)
	MAP_NATIVE(UListCtrlHandle,execDeleteAllItem)
	MAP_NATIVE(UListCtrlHandle,execInsertRecord)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UListCtrlHandle);

NATIVE_INFO(UMacroAPI) GNWindowUMacroAPINatives[] = 
{ 
	MAP_NATIVE(UMacroAPI,execRequestMakeMacro)
	MAP_NATIVE(UMacroAPI,execRequestDeleteMacro)
	MAP_NATIVE(UMacroAPI,execRequestUseMacro)
	MAP_NATIVE(UMacroAPI,execRequestMacroList)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UMacroAPI);

NATIVE_INFO(UMiniMapAPI) GNWindowUMiniMapAPINatives[] = 
{ 
	MAP_NATIVE(UMiniMapAPI,execRequestShowAgitSiegeInfo)
	MAP_NATIVE(UMiniMapAPI,execRequestRaidServerInfo)
	MAP_NATIVE(UMiniMapAPI,execRequestItemAuctionStatus)
	MAP_NATIVE(UMiniMapAPI,execRequestRaidBossSpawnInfo)
	MAP_NATIVE(UMiniMapAPI,execRequestSeedPhase)
	MAP_NATIVE(UMiniMapAPI,execRequestTreasureBoxLocation)
	MAP_NATIVE(UMiniMapAPI,execRequestCursedWeaponLocation)
	MAP_NATIVE(UMiniMapAPI,execRequestCursedWeaponList)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UMiniMapAPI);

NATIVE_INFO(UMinimapCtrlHandle) GNWindowUMinimapCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(UMinimapCtrlHandle,execSetShowRegionInfoByType)
	MAP_NATIVE(UMinimapCtrlHandle,execEraseRegionInfoByType)
	MAP_NATIVE(UMinimapCtrlHandle,execEraseRegionInfoCtrl)
	MAP_NATIVE(UMinimapCtrlHandle,execUpdateRegionInfoCtrl)
	MAP_NATIVE(UMinimapCtrlHandle,execAddRegionInfoCtrl)
	MAP_NATIVE(UMinimapCtrlHandle,execDisableDirIcon)
	MAP_NATIVE(UMinimapCtrlHandle,execSetDirIconDest)
	MAP_NATIVE(UMinimapCtrlHandle,execSetDrawTeleportPath)
	MAP_NATIVE(UMinimapCtrlHandle,execEraseQuestIcon)
	MAP_NATIVE(UMinimapCtrlHandle,execRegisterQuestIcon)
	MAP_NATIVE(UMinimapCtrlHandle,execGetPlayerContinent)
	MAP_NATIVE(UMinimapCtrlHandle,execGetContinent)
	MAP_NATIVE(UMinimapCtrlHandle,execSetContinent)
	MAP_NATIVE(UMinimapCtrlHandle,execEraseRegionInfo)
	MAP_NATIVE(UMinimapCtrlHandle,execEraseAllRegionInfo)
	MAP_NATIVE(UMinimapCtrlHandle,execUpdateRegionInfo)
	MAP_NATIVE(UMinimapCtrlHandle,execAddRegionInfo)
	MAP_NATIVE(UMinimapCtrlHandle,execDeleteAllCursedWeaponIcon)
	MAP_NATIVE(UMinimapCtrlHandle,execIsOverlapped)
	MAP_NATIVE(UMinimapCtrlHandle,execRequestReduceBtn)
	MAP_NATIVE(UMinimapCtrlHandle,execDrawGridIcon)
	MAP_NATIVE(UMinimapCtrlHandle,execSetSSQStatus)
	MAP_NATIVE(UMinimapCtrlHandle,execSetShowQuest)
	MAP_NATIVE(UMinimapCtrlHandle,execDeleteAllTarget)
	MAP_NATIVE(UMinimapCtrlHandle,execDeleteTarget)
	MAP_NATIVE(UMinimapCtrlHandle,execAddTarget)
	MAP_NATIVE(UMinimapCtrlHandle,execAdjustMapView)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UMinimapCtrlHandle);

NATIVE_INFO(UMultiEditBoxHandle) GNWindowUMultiEditBoxHandleNatives[] = 
{ 
	MAP_NATIVE(UMultiEditBoxHandle,execGetTotalSizeOfText)
	MAP_NATIVE(UMultiEditBoxHandle,execSetMaxSizeOfText)
	MAP_NATIVE(UMultiEditBoxHandle,execSetString)
	MAP_NATIVE(UMultiEditBoxHandle,execGetString)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UMultiEditBoxHandle);

NATIVE_INFO(UNameCtrlHandle) GNWindowUNameCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(UNameCtrlHandle,execSetNameUsingItem)
	MAP_NATIVE(UNameCtrlHandle,execGetName)
	MAP_NATIVE(UNameCtrlHandle,execSetNameWithColor)
	MAP_NATIVE(UNameCtrlHandle,execSetName)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UNameCtrlHandle);

NATIVE_INFO(UNewEnchantAPI) GNWindowUNewEnchantAPINatives[] = 
{ 
	MAP_NATIVE(UNewEnchantAPI,execGetCombinationItemData)
	MAP_NATIVE(UNewEnchantAPI,execGetEnchantCandidateMaterialList)
	MAP_NATIVE(UNewEnchantAPI,execIsNoFailResultEffectType)
	MAP_NATIVE(UNewEnchantAPI,execGetResultItemForEnchant)
	MAP_NATIVE(UNewEnchantAPI,execGetMaterialItemForEnchantFromEquip)
	MAP_NATIVE(UNewEnchantAPI,execGetMaterialItemForEnchantFromInven)
	MAP_NATIVE(UNewEnchantAPI,execRequestEnchantRetryPutItems)
	MAP_NATIVE(UNewEnchantAPI,execRequestClose)
	MAP_NATIVE(UNewEnchantAPI,execRequestTryEnchant)
	MAP_NATIVE(UNewEnchantAPI,execRequestRemoveTwo)
	MAP_NATIVE(UNewEnchantAPI,execRequestRemoveOne)
	MAP_NATIVE(UNewEnchantAPI,execRequestPushTwo)
	MAP_NATIVE(UNewEnchantAPI,execRequestPushOne)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UNewEnchantAPI);

NATIVE_INFO(UOlympiadAPI) GNWindowUOlympiadAPINatives[] = 
{ 
	MAP_NATIVE(UOlympiadAPI,execRequestExOlympiadMatchMakingCancel)
	MAP_NATIVE(UOlympiadAPI,execRequestExOlympiadMatchMaking)
	MAP_NATIVE(UOlympiadAPI,execRequestExOlympiadWatchGame)
	MAP_NATIVE(UOlympiadAPI,execRequestOlympiadMatchList)
	MAP_NATIVE(UOlympiadAPI,execRequestOlympiadObserverEnd)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UOlympiadAPI);

NATIVE_INFO(UPartyMatchAPI) GNWindowUPartyMatchAPINatives[] = 
{ 
	MAP_NATIVE(UPartyMatchAPI,execRequestMpccPartymasterList)
	MAP_NATIVE(UPartyMatchAPI,execRequestWithdrawMpccRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestDismissMpccRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestOustFromMpccRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestJoinMpccRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestManageMpccRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestListMpccWaiting)
	MAP_NATIVE(UPartyMatchAPI,execRequestPartyMatchingHistory)
	MAP_NATIVE(UPartyMatchAPI,execRequestAskJoinPartyRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestExitPartyMatchingWaitingRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestPartyMatchWaitList)
	MAP_NATIVE(UPartyMatchAPI,execRequestBanFromPartyRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestWithdrawPartyRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestDismissPartyRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestManagePartyRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestJoinPartyRoomAuto)
	MAP_NATIVE(UPartyMatchAPI,execRequestJoinPartyRoom)
	MAP_NATIVE(UPartyMatchAPI,execRequestPartyRoomList)
	MAP_NATIVE(UPartyMatchAPI,execRequestOpenPartyMatch)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UPartyMatchAPI);

NATIVE_INFO(UPersonalConnectionAPI) GNWindowUPersonalConnectionAPINatives[] = 
{ 
	MAP_NATIVE(UPersonalConnectionAPI,execGetPvpbookMaxCount)
	MAP_NATIVE(UPersonalConnectionAPI,execGetPvpbookRequiredItem)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestPvpbookTeleportToKiller)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestPvpbookKillerLocation)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestPvpbookList)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestMentorCancel)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestMentorList)
	MAP_NATIVE(UPersonalConnectionAPI,execConfirmMenteeAdd)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestMenteeAdd)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestFriendChat)
	MAP_NATIVE(UPersonalConnectionAPI,execGetFriendServerID)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestPledgeMemberList)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestInzonePartyInfoHistory)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestUpdateBlockMemo)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestBlockDetailInfo)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestBlockInfoList)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestRemoveBlock)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestAddBlock)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestUpdateFriendMemo)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestFriendDetailInfo)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestFriendInfoList)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestRemoveFriend)
	MAP_NATIVE(UPersonalConnectionAPI,execRequestAddFriend)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UPersonalConnectionAPI);

NATIVE_INFO(UUIDataManager) GNWindowUUIDataManagerNatives[] = 
{ 
	MAP_NATIVE(UUIDataManager,execGetFireAbilityComboEffectData)
	MAP_NATIVE(UUIDataManager,execGetFireAbilityData)
	MAP_NATIVE(UUIDataManager,execGetDethroneShopDataList)
	MAP_NATIVE(UUIDataManager,execGetAbilityItem)
	MAP_NATIVE(UUIDataManager,execGetOlympiadGroupServerList)
	MAP_NATIVE(UUIDataManager,execGetRootClassID)
	MAP_NATIVE(UUIDataManager,execGetServerList)
	MAP_NATIVE(UUIDataManager,execGetServerInfo)
	MAP_NATIVE(UUIDataManager,execGetMaxServerCount)
	MAP_NATIVE(UUIDataManager,execGetSystemMsgMaxCount)
	MAP_NATIVE(UUIDataManager,execGetSysStringMaxCount)
	MAP_NATIVE(UUIDataManager,execGetClassTypeMaxCount)
	MAP_NATIVE(UUIDataManager,execGetEnableClassIndexList)
	MAP_NATIVE(UUIDataManager,execGetClassnameSysstringIndexByClassIndex)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDataManager);

NATIVE_INFO(UPetAPI) GNWindowUPetAPINatives[] = 
{ 
	MAP_NATIVE(UPetAPI,execGetPetRaceEmblemDataAll)
	MAP_NATIVE(UPetAPI,execGetPetRaceEmblemData)
	MAP_NATIVE(UPetAPI,execGetPetExtractInfo)
	MAP_NATIVE(UPetAPI,execGetPetAcquireSkillList)
	MAP_NATIVE(UPetAPI,execGetPetNameIDBySkill)
	MAP_NATIVE(UPetAPI,execGetPetEvolveNameInfo)
	MAP_NATIVE(UPetAPI,execGetPetEvolveLookInfo)
	MAP_NATIVE(UPetAPI,execGetPetEvolveCondition)
	MAP_NATIVE(UPetAPI,execRequestGetItemFromPet)
	MAP_NATIVE(UPetAPI,execRequestGiveItemToPet)
	MAP_NATIVE(UPetAPI,execRequestPetUseItem)
	MAP_NATIVE(UPetAPI,execRequestPetInventoryItemList)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UPetAPI);

NATIVE_INFO(UPetitionAPI) GNWindowUPetitionAPINatives[] = 
{ 
	MAP_NATIVE(UPetitionAPI,execRequestPetitionFeedBack)
	MAP_NATIVE(UPetitionAPI,execRequestPetition)
	MAP_NATIVE(UPetitionAPI,execRequestPetitionCancel)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UPetitionAPI);

NATIVE_INFO(UPostWndAPI) GNWindowUPostWndAPINatives[] = 
{ 
	MAP_NATIVE(UPostWndAPI,execRequestPledgeMemberList)
	MAP_NATIVE(UPostWndAPI,execRequestPostFriendList)
	MAP_NATIVE(UPostWndAPI,execRequestDeletingPostFriend)
	MAP_NATIVE(UPostWndAPI,execRequestAddingPostFriend)
	MAP_NATIVE(UPostWndAPI,execRequestFriendList)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UPostWndAPI);

NATIVE_INFO(UProgressCtrlHandle) GNWindowUProgressCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(UProgressCtrlHandle,execSetBarTex)
	MAP_NATIVE(UProgressCtrlHandle,execSetBackTex)
	MAP_NATIVE(UProgressCtrlHandle,execStart)
	MAP_NATIVE(UProgressCtrlHandle,execResume)
	MAP_NATIVE(UProgressCtrlHandle,execStop)
	MAP_NATIVE(UProgressCtrlHandle,execReset)
	MAP_NATIVE(UProgressCtrlHandle,execSetPos)
	MAP_NATIVE(UProgressCtrlHandle,execSetProgressTime)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UProgressCtrlHandle);

NATIVE_INFO(UPropertyControllerHandle) GNWindowUPropertyControllerHandleNatives[] = 
{ 
	MAP_NATIVE(UPropertyControllerHandle,execGetItemStringValue)
	MAP_NATIVE(UPropertyControllerHandle,execGetItemIntegerValue)
	MAP_NATIVE(UPropertyControllerHandle,execGetItemBooleanValue)
	MAP_NATIVE(UPropertyControllerHandle,execSetItemStringValue)
	MAP_NATIVE(UPropertyControllerHandle,execSetItemIntegerValue)
	MAP_NATIVE(UPropertyControllerHandle,execSetItemBooleanValue)
	MAP_NATIVE(UPropertyControllerHandle,execGetItemType)
	MAP_NATIVE(UPropertyControllerHandle,execSetGroupVisible)
	MAP_NATIVE(UPropertyControllerHandle,execSetGroupExpandState)
	MAP_NATIVE(UPropertyControllerHandle,execAddGroup)
	MAP_NATIVE(UPropertyControllerHandle,execDeleteGroup)
	MAP_NATIVE(UPropertyControllerHandle,execGetGroupCheck)
	MAP_NATIVE(UPropertyControllerHandle,execSetGroupCheck)
	MAP_NATIVE(UPropertyControllerHandle,execGetGroupType)
	MAP_NATIVE(UPropertyControllerHandle,execUpdatePropertyGroup)
	MAP_NATIVE(UPropertyControllerHandle,execGetPropertyHeight)
	MAP_NATIVE(UPropertyControllerHandle,execClearValue)
	MAP_NATIVE(UPropertyControllerHandle,execClear)
	MAP_NATIVE(UPropertyControllerHandle,execSetProperty)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UPropertyControllerHandle);

NATIVE_INFO(UQuestAPI) GNWindowUQuestAPINatives[] = 
{ 
	MAP_NATIVE(UQuestAPI,execSetQuestTargetInfo)
	MAP_NATIVE(UQuestAPI,execRequestDestroyQuest)
	MAP_NATIVE(UQuestAPI,execRequestQuestList)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UQuestAPI);

NATIVE_INFO(URadarMapCtrlHandle) GNWindowURadarMapCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(URadarMapCtrlHandle,execSwitchSingleMeshMode)
	MAP_NATIVE(URadarMapCtrlHandle,execSetMapInvisible)
	MAP_NATIVE(URadarMapCtrlHandle,execSetEnableRotation)
	MAP_NATIVE(URadarMapCtrlHandle,execSetMagnification)
	MAP_NATIVE(URadarMapCtrlHandle,execRequestObjectAround)
	MAP_NATIVE(URadarMapCtrlHandle,execUpdateObject)
	MAP_NATIVE(URadarMapCtrlHandle,execDeleteObject)
	MAP_NATIVE(URadarMapCtrlHandle,execAddObject)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,URadarMapCtrlHandle);

NATIVE_INFO(URadioButtonHandle) GNWindowURadioButtonHandleNatives[] = 
{ 
	MAP_NATIVE(URadioButtonHandle,execIsChecked)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,URadioButtonHandle);

NATIVE_INFO(URandomCraftAPI) GNWindowURandomCraftAPINatives[] = 
{ 
	MAP_NATIVE(URandomCraftAPI,execGetMaxGaugeValue)
	MAP_NATIVE(URandomCraftAPI,execGetItemAnnounceGrade)
	MAP_NATIVE(URandomCraftAPI,execGetRewardItems)
	MAP_NATIVE(URandomCraftAPI,execGetSlotsSuccessRate)
	MAP_NATIVE(URandomCraftAPI,execGetMaxItemPoint)
	MAP_NATIVE(URandomCraftAPI,execGetRestCosts)
	MAP_NATIVE(URandomCraftAPI,execGetItemMakingCosts)
	MAP_NATIVE(URandomCraftAPI,execGetItemLockCost)
	MAP_NATIVE(URandomCraftAPI,execGetMaxItemLockCount)
	MAP_NATIVE(URandomCraftAPI,execGetMaxSlotLockCount)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,URandomCraftAPI);

NATIVE_INFO(URecipeAPI) GNWindowURecipeAPINatives[] = 
{ 
	MAP_NATIVE(URecipeAPI,execRequestRecipeShopListSet)
	MAP_NATIVE(URecipeAPI,execRequestRecipeShopMessageSet)
	MAP_NATIVE(URecipeAPI,execRequestRecipeShopManageQuit)
	MAP_NATIVE(URecipeAPI,execRequestRecipeItemDelete)
	MAP_NATIVE(URecipeAPI,execRequestRecipeBookOpen)
	MAP_NATIVE(URecipeAPI,execRequestRecipeItemMakeInfo)
	MAP_NATIVE(URecipeAPI,execRequestRecipeItemMakeSelf)
	MAP_NATIVE(URecipeAPI,execRequestRecipeShopMakeDo)
	MAP_NATIVE(URecipeAPI,execRequestRecipeShopSellList)
	MAP_NATIVE(URecipeAPI,execRequestRecipeShopMakeInfo)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,URecipeAPI);

NATIVE_INFO(URefineryAPI) GNWindowURefineryAPINatives[] = 
{ 
	MAP_NATIVE(URefineryAPI,execGetOptionDescByOptionID)
	MAP_NATIVE(URefineryAPI,execGetOptionProbability)
	MAP_NATIVE(URefineryAPI,execGetOptionDesc)
	MAP_NATIVE(URefineryAPI,execGetRefineryFee)
	MAP_NATIVE(URefineryAPI,execGetTargetItemListFromInven)
	MAP_NATIVE(URefineryAPI,execGetItemListFromInven)
	MAP_NATIVE(URefineryAPI,execRequestRefineCancel)
	MAP_NATIVE(URefineryAPI,execConfirmCancelItem)
	MAP_NATIVE(URefineryAPI,execConfirmGemStone)
	MAP_NATIVE(URefineryAPI,execConfirmRefinerItem)
	MAP_NATIVE(URefineryAPI,execConfirmTargetItem)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,URefineryAPI);

NATIVE_INFO(URichListCtrlHandle) GNWindowURichListCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(URichListCtrlHandle,execGetPointedRec)
	MAP_NATIVE(URichListCtrlHandle,execSetEnableInteractionPass)
	MAP_NATIVE(URichListCtrlHandle,execGetStartRow)
	MAP_NATIVE(URichListCtrlHandle,execDecreaseStartRow)
	MAP_NATIVE(URichListCtrlHandle,execIncreaseStartRow)
	MAP_NATIVE(URichListCtrlHandle,execAdjustShowRow)
	MAP_NATIVE(URichListCtrlHandle,execIsAscending)
	MAP_NATIVE(URichListCtrlHandle,execSetAscend)
	MAP_NATIVE(URichListCtrlHandle,execHideSortIcon)
	MAP_NATIVE(URichListCtrlHandle,execShowSortIcon)
	MAP_NATIVE(URichListCtrlHandle,execSetSortable)
	MAP_NATIVE(URichListCtrlHandle,execGetShowRow)
	MAP_NATIVE(URichListCtrlHandle,execSetEnableItemRecordDrag)
	MAP_NATIVE(URichListCtrlHandle,execSetStartRow)
	MAP_NATIVE(URichListCtrlHandle,execSetSelectable)
	MAP_NATIVE(URichListCtrlHandle,execSetUseStripeBackTexture)
	MAP_NATIVE(URichListCtrlHandle,execSetStatusBarTexture)
	MAP_NATIVE(URichListCtrlHandle,execSetUseHorizontalScrollBar)
	MAP_NATIVE(URichListCtrlHandle,execSetColumnMinimumWidth)
	MAP_NATIVE(URichListCtrlHandle,execSetColumnString)
	MAP_NATIVE(URichListCtrlHandle,execSetAppearTooltipAtMouseX)
	MAP_NATIVE(URichListCtrlHandle,execSetSelectedSelTooltip)
	MAP_NATIVE(URichListCtrlHandle,execSetContentsHeight)
	MAP_NATIVE(URichListCtrlHandle,execEnablePageBrowser)
	MAP_NATIVE(URichListCtrlHandle,execSetColumnWidth)
	MAP_NATIVE(URichListCtrlHandle,execSetResizable)
	MAP_NATIVE(URichListCtrlHandle,execSetHeaderTextOffset)
	MAP_NATIVE(URichListCtrlHandle,execSetHeaderAlignment)
	MAP_NATIVE(URichListCtrlHandle,execAdjustColumnWidth)
	MAP_NATIVE(URichListCtrlHandle,execInitListCtrl)
	MAP_NATIVE(URichListCtrlHandle,execGetRec)
	MAP_NATIVE(URichListCtrlHandle,execGetSelectedRec)
	MAP_NATIVE(URichListCtrlHandle,execModifyRecord)
	MAP_NATIVE(URichListCtrlHandle,execShowScrollBar)
	MAP_NATIVE(URichListCtrlHandle,execSetSelectedIndex)
	MAP_NATIVE(URichListCtrlHandle,execGetSelectedIndex)
	MAP_NATIVE(URichListCtrlHandle,execGetRecordCount)
	MAP_NATIVE(URichListCtrlHandle,execDeleteRecord)
	MAP_NATIVE(URichListCtrlHandle,execDeleteAllItem)
	MAP_NATIVE(URichListCtrlHandle,execInsertRecord)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,URichListCtrlHandle);

NATIVE_INFO(USceneCameraCtrlHandle) GNWindowUSceneCameraCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(USceneCameraCtrlHandle,execSaveCameraData)
	MAP_NATIVE(USceneCameraCtrlHandle,execUpdateCameraData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,USceneCameraCtrlHandle);

NATIVE_INFO(USceneEditorAPI) GNWindowUSceneEditorAPINatives[] = 
{ 
	MAP_NATIVE(USceneEditorAPI,execSetSceneInfoAttribute)
	MAP_NATIVE(USceneEditorAPI,execSaveCurSceneTimeAndDesc)
	MAP_NATIVE(USceneEditorAPI,execGetCurScenePlayRate)
	MAP_NATIVE(USceneEditorAPI,execGetCurSceneTimeAndDesc)
	MAP_NATIVE(USceneEditorAPI,execSaveSceneData)
	MAP_NATIVE(USceneEditorAPI,execLoadSceneData)
	MAP_NATIVE(USceneEditorAPI,execReloadSceneData)
	MAP_NATIVE(USceneEditorAPI,execIsReloadSceneData)
	MAP_NATIVE(USceneEditorAPI,execCopyScene)
	MAP_NATIVE(USceneEditorAPI,execDeleteScene)
	MAP_NATIVE(USceneEditorAPI,execAddScene)
	MAP_NATIVE(USceneEditorAPI,execPlayScene)
	MAP_NATIVE(USceneEditorAPI,execInitSceneEditorData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,USceneEditorAPI);

NATIVE_INFO(USceneMusicCtrlHandle) GNWindowUSceneMusicCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(USceneMusicCtrlHandle,execSaveMusicData)
	MAP_NATIVE(USceneMusicCtrlHandle,execUpdateMusicData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,USceneMusicCtrlHandle);

NATIVE_INFO(USceneNpcCtrlHandle) GNWindowUSceneNpcCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(USceneNpcCtrlHandle,execSaveNpcData)
	MAP_NATIVE(USceneNpcCtrlHandle,execUpdateNpcData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,USceneNpcCtrlHandle);

NATIVE_INFO(UScenePcCtrlHandle) GNWindowUScenePcCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(UScenePcCtrlHandle,execSavePcData)
	MAP_NATIVE(UScenePcCtrlHandle,execUpdatePcData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UScenePcCtrlHandle);

NATIVE_INFO(USceneScreenCtrlHandle) GNWindowUSceneScreenCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(USceneScreenCtrlHandle,execSaveScreenData)
	MAP_NATIVE(USceneScreenCtrlHandle,execUpdateScreenData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,USceneScreenCtrlHandle);

NATIVE_INFO(UShortcutAPI) GNWindowUShortcutAPINatives[] = 
{ 
	MAP_NATIVE(UShortcutAPI,execExecuteShortcutCommand)
	MAP_NATIVE(UShortcutAPI,execClear)
	MAP_NATIVE(UShortcutAPI,execRestoreDefault)
	MAP_NATIVE(UShortcutAPI,execDeactivateAll)
	MAP_NATIVE(UShortcutAPI,execDeactivateGroup)
	MAP_NATIVE(UShortcutAPI,execActivateGroup)
	MAP_NATIVE(UShortcutAPI,execRequestShortcutScriptData)
	MAP_NATIVE(UShortcutAPI,execRequestList)
	MAP_NATIVE(UShortcutAPI,execSave)
	MAP_NATIVE(UShortcutAPI,execUnlockShortcut)
	MAP_NATIVE(UShortcutAPI,execLockShortcut)
	MAP_NATIVE(UShortcutAPI,execGetAssignedKeyFromCommand)
	MAP_NATIVE(UShortcutAPI,execGetActiveGroupList)
	MAP_NATIVE(UShortcutAPI,execGetGroupList)
	MAP_NATIVE(UShortcutAPI,execGetGroupCommandList)
	MAP_NATIVE(UShortcutAPI,execAssignCommand)
	MAP_NATIVE(UShortcutAPI,execAssignSpecialKey)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UShortcutAPI);

NATIVE_INFO(UShortcutWndAPI) GNWindowUShortcutWndAPINatives[] = 
{ 
	MAP_NATIVE(UShortcutWndAPI,execGetSkillListFromShortcutItems)
	MAP_NATIVE(UShortcutWndAPI,execRequestRegisterShortcut)
	MAP_NATIVE(UShortcutWndAPI,execSetAutoUseMacro)
	MAP_NATIVE(UShortcutWndAPI,execRequestAutomaticUseItemActivate)
	MAP_NATIVE(UShortcutWndAPI,execRequestAutomaticUseItemActivateAll)
	MAP_NATIVE(UShortcutWndAPI,execExecuteShortcutBySlot)
	MAP_NATIVE(UShortcutWndAPI,execSetShortcutPage)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UShortcutWndAPI);

NATIVE_INFO(USiegeAPI) GNWindowUSiegeAPINatives[] = 
{ 
	MAP_NATIVE(USiegeAPI,execRequestPledgeMercenaryMemberJoin)
	MAP_NATIVE(USiegeAPI,execRequestPledgeMercenaryRecruitInfoSet)
	MAP_NATIVE(USiegeAPI,execRequestPledgeMercenaryMemberList)
	MAP_NATIVE(USiegeAPI,execRequestMCWCastleSiegeDefenderList)
	MAP_NATIVE(USiegeAPI,execRequestMCWCastleSiegeAttackerList)
	MAP_NATIVE(USiegeAPI,execRequestMCWCastleSiegeInfo)
	MAP_NATIVE(USiegeAPI,execRequestMCWCastleInfo)
	MAP_NATIVE(USiegeAPI,execRequestSetCastleSiegeTime)
	MAP_NATIVE(USiegeAPI,execRequestConfirmCastleSiegeWaitingList)
	MAP_NATIVE(USiegeAPI,execRequestJoinCastleSiege)
	MAP_NATIVE(USiegeAPI,execRequestCastleSiegeDefenderList)
	MAP_NATIVE(USiegeAPI,execRequestCastleSiegeAttackerList)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,USiegeAPI);

NATIVE_INFO(USliderCtrlHandle) GNWindowUSliderCtrlHandleNatives[] = 
{ 
	MAP_NATIVE(USliderCtrlHandle,execIsMouseScrolling)
	MAP_NATIVE(USliderCtrlHandle,execSetTotalTickCount)
	MAP_NATIVE(USliderCtrlHandle,execGetTotalTickCount)
	MAP_NATIVE(USliderCtrlHandle,execSetCurrentTick)
	MAP_NATIVE(USliderCtrlHandle,execGetCurrentTick)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,USliderCtrlHandle);

NATIVE_INFO(USSAOAPI) GNWindowUSSAOAPINatives[] = 
{ 
	MAP_NATIVE(USSAOAPI,execSSAO_BlurNormalDifference)
	MAP_NATIVE(USSAOAPI,execSSAO_BlurDepthDifference)
	MAP_NATIVE(USSAOAPI,execSSAO_BlurIntensity)
	MAP_NATIVE(USSAOAPI,execSSAO_SampleDistance)
	MAP_NATIVE(USSAOAPI,execSSAO_NoiseScale)
	MAP_NATIVE(USSAOAPI,execSSAO_DepthDifference)
	MAP_NATIVE(USSAOAPI,execSSAO_FadeFront)
	MAP_NATIVE(USSAOAPI,execSSAO_MaxIntensity)
	MAP_NATIVE(USSAOAPI,execSSAO_Strength)
	MAP_NATIVE(USSAOAPI,execSSAO_Blend)
	MAP_NATIVE(USSAOAPI,execSSAO_Level)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,USSAOAPI);

NATIVE_INFO(USSQAPI) GNWindowUSSQAPINatives[] = 
{ 
	MAP_NATIVE(USSQAPI,execRequestSSQStatus)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,USSQAPI);

NATIVE_INFO(UStatisticAPI) GNWindowUStatisticAPINatives[] = 
{ 
	MAP_NATIVE(UStatisticAPI,execRequestUserStatistics)
	MAP_NATIVE(UStatisticAPI,execRequestWorldStatistics)
	MAP_NATIVE(UStatisticAPI,execRequestHotLinkStatistics)
	MAP_NATIVE(UStatisticAPI,execGetTableOfContent)
	MAP_NATIVE(UStatisticAPI,execGetContentInfo)
	MAP_NATIVE(UStatisticAPI,execGetTitleNameOfStatistic)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UStatisticAPI);

NATIVE_INFO(UStatusBarHandle) GNWindowUStatusBarHandleNatives[] = 
{ 
	MAP_NATIVE(UStatusBarHandle,execSetDrawPoint)
	MAP_NATIVE(UStatusBarHandle,execSetDecimalPlace)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UStatusBarHandle);

NATIVE_INFO(UStatusBaseHandle) GNWindowUStatusBaseHandleNatives[] = 
{ 
	MAP_NATIVE(UStatusBaseHandle,execSetRegenInfo)
	MAP_NATIVE(UStatusBaseHandle,execSetPointExpPercentRate)
	MAP_NATIVE(UStatusBaseHandle,execSetPointPercent)
	MAP_NATIVE(UStatusBaseHandle,execSetPoint)
	MAP_NATIVE(UStatusBaseHandle,execClearPoint)
	MAP_NATIVE(UStatusBaseHandle,execGetPoint)
	MAP_NATIVE(UStatusBaseHandle,execSetGaugeColor)
	MAP_NATIVE(UStatusBaseHandle,execGetGaugeColor)
	MAP_NATIVE(UStatusBaseHandle,execSetGaugeTexture)
	MAP_NATIVE(UStatusBaseHandle,execGetGaugeTexture)
	MAP_NATIVE(UStatusBaseHandle,execGetSelfScript)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UStatusBaseHandle);

NATIVE_INFO(UStatusIconHandle) GNWindowUStatusIconHandleNatives[] = 
{ 
	MAP_NATIVE(UStatusIconHandle,execClear)
	MAP_NATIVE(UStatusIconHandle,execSetIconSize)
	MAP_NATIVE(UStatusIconHandle,execDelItem)
	MAP_NATIVE(UStatusIconHandle,execSetItem)
	MAP_NATIVE(UStatusIconHandle,execGetItem)
	MAP_NATIVE(UStatusIconHandle,execGetColCount)
	MAP_NATIVE(UStatusIconHandle,execGetRowCount)
	MAP_NATIVE(UStatusIconHandle,execInsertCol)
	MAP_NATIVE(UStatusIconHandle,execInsertRow)
	MAP_NATIVE(UStatusIconHandle,execAddCol)
	MAP_NATIVE(UStatusIconHandle,execAddRow)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UStatusIconHandle);

NATIVE_INFO(UTabHandle) GNWindowUTabHandleNatives[] = 
{ 
	MAP_NATIVE(UTabHandle,execSetButtonTooltip)
	MAP_NATIVE(UTabHandle,execSetTabControlTexture)
	MAP_NATIVE(UTabHandle,execRemoveTabControl)
	MAP_NATIVE(UTabHandle,execSetButtonDisableTexture)
	MAP_NATIVE(UTabHandle,execSetButtonBlink)
	MAP_NATIVE(UTabHandle,execSetButtonOffsetTex)
	MAP_NATIVE(UTabHandle,execSetButtonSizeTex)
	MAP_NATIVE(UTabHandle,execSetButtonName)
	MAP_NATIVE(UTabHandle,execMergeTab)
	MAP_NATIVE(UTabHandle,execSetDisable)
	MAP_NATIVE(UTabHandle,execGetTopIndex)
	MAP_NATIVE(UTabHandle,execSetTopOrder)
	MAP_NATIVE(UTabHandle,execInitTabCtrl)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UTabHandle);

NATIVE_INFO(UTeamMatchAPI) GNWindowUTeamMatchAPINatives[] = 
{ 
	MAP_NATIVE(UTeamMatchAPI,execRequestExBlockGameVote)
	MAP_NATIVE(UTeamMatchAPI,execRequestExBlockGameEnter)
	MAP_NATIVE(UTeamMatchAPI,execRequestBlockGameAllData)
	MAP_NATIVE(UTeamMatchAPI,execRequestExCleftEnter)
	MAP_NATIVE(UTeamMatchAPI,execRequestCleftAllData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UTeamMatchAPI);

NATIVE_INFO(UTeleportListAPI) GNWindowUTeleportListAPINatives[] = 
{ 
	MAP_NATIVE(UTeleportListAPI,execRequestTeleportFavoritesList)
	MAP_NATIVE(UTeleportListAPI,execRequestTeleport)
	MAP_NATIVE(UTeleportListAPI,execGetDominionList)
	MAP_NATIVE(UTeleportListAPI,execGetNextTeleportListData)
	MAP_NATIVE(UTeleportListAPI,execGetFirstTeleportListData)
	MAP_NATIVE(UTeleportListAPI,execModifyExceptionLocation)
	MAP_NATIVE(UTeleportListAPI,execGetTeleportListaDataWithZoneKey)
	MAP_NATIVE(UTeleportListAPI,execGetCurrentZoneKey)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UTeleportListAPI);

NATIVE_INFO(UTextBoxHandle) GNWindowUTextBoxHandleNatives[] = 
{ 
	MAP_NATIVE(UTextBoxHandle,execSetFormatString)
	MAP_NATIVE(UTextBoxHandle,execGetSizeY)
	MAP_NATIVE(UTextBoxHandle,execGetSizeX)
	MAP_NATIVE(UTextBoxHandle,execSetFontIDByName)
	MAP_NATIVE(UTextBoxHandle,execSetTextEllipsisWidth)
	MAP_NATIVE(UTextBoxHandle,execSetTooltipString)
	MAP_NATIVE(UTextBoxHandle,execSetInt)
	MAP_NATIVE(UTextBoxHandle,execSetAlign)
	MAP_NATIVE(UTextBoxHandle,execGetTextColor)
	MAP_NATIVE(UTextBoxHandle,execSetTextColor)
	MAP_NATIVE(UTextBoxHandle,execSetText)
	MAP_NATIVE(UTextBoxHandle,execGetText)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UTextBoxHandle);

NATIVE_INFO(UTreeHandle) GNWindowUTreeHandleNatives[] = 
{ 
	MAP_NATIVE(UTreeHandle,execSetNodeItemTexture)
	MAP_NATIVE(UTreeHandle,execSetNodeItemText)
	MAP_NATIVE(UTreeHandle,execShowScrollBar)
	MAP_NATIVE(UTreeHandle,execGetParentNode)
	MAP_NATIVE(UTreeHandle,execGetChildNode)
	MAP_NATIVE(UTreeHandle,execIsExpandedNode)
	MAP_NATIVE(UTreeHandle,execIsNodeNameExist)
	MAP_NATIVE(UTreeHandle,execDeleteNode)
	MAP_NATIVE(UTreeHandle,execGetExpandedNode)
	MAP_NATIVE(UTreeHandle,execSetExpandedNode)
	MAP_NATIVE(UTreeHandle,execClear)
	MAP_NATIVE(UTreeHandle,execInsertNodeItem)
	MAP_NATIVE(UTreeHandle,execInsertNode)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UTreeHandle);

NATIVE_INFO(UTutorialAPI) GNWindowUTutorialAPINatives[] = 
{ 
	MAP_NATIVE(UTutorialAPI,execRequestExSetTutorial)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UTutorialAPI);

NATIVE_INFO(UUIAPI_BUTTON) GNWindowUUIAPI_BUTTONNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_BUTTON,execSetButtonName)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_BUTTON);

NATIVE_INFO(UUIAPI_WINDOW) GNWindowUUIAPI_WINDOWNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_WINDOW,execGetSelectedRadioButtonName)
	MAP_NATIVE(UUIAPI_WINDOW,execClearAnchor)
	MAP_NATIVE(UUIAPI_WINDOW,execSetAnchor)
	MAP_NATIVE(UUIAPI_WINDOW,execGetTooltipText)
	MAP_NATIVE(UUIAPI_WINDOW,execSetTooltipText)
	MAP_NATIVE(UUIAPI_WINDOW,execSetTooltipType)
	MAP_NATIVE(UUIAPI_WINDOW,execSetTabOrder)
	MAP_NATIVE(UUIAPI_WINDOW,execSetResizeFrameSize)
	MAP_NATIVE(UUIAPI_WINDOW,execSetFrameSize)
	MAP_NATIVE(UUIAPI_WINDOW,execSetWindowSizeRel43)
	MAP_NATIVE(UUIAPI_WINDOW,execSetWindowSizeRel)
	MAP_NATIVE(UUIAPI_WINDOW,execSetWindowSize)
	MAP_NATIVE(UUIAPI_WINDOW,execBringToFront)
	MAP_NATIVE(UUIAPI_WINDOW,execBringToFrontOf)
	MAP_NATIVE(UUIAPI_WINDOW,execIsFocused)
	MAP_NATIVE(UUIAPI_WINDOW,execSetFocus)
	MAP_NATIVE(UUIAPI_WINDOW,execNotifyAlarm)
	MAP_NATIVE(UUIAPI_WINDOW,execIconize)
	MAP_NATIVE(UUIAPI_WINDOW,execMoveShake)
	MAP_NATIVE(UUIAPI_WINDOW,execMoveEx)
	MAP_NATIVE(UUIAPI_WINDOW,execMoveTo)
	MAP_NATIVE(UUIAPI_WINDOW,execMove)
	MAP_NATIVE(UUIAPI_WINDOW,execSetAlpha)
	MAP_NATIVE(UUIAPI_WINDOW,execSetAlwaysOnTop)
	MAP_NATIVE(UUIAPI_WINDOW,execIsEnableWindow)
	MAP_NATIVE(UUIAPI_WINDOW,execDisableWindow)
	MAP_NATIVE(UUIAPI_WINDOW,execEnableWindow)
	MAP_NATIVE(UUIAPI_WINDOW,execSetWindowTitleByText)
	MAP_NATIVE(UUIAPI_WINDOW,execSetWindowTitle)
	MAP_NATIVE(UUIAPI_WINDOW,execKillUITimer)
	MAP_NATIVE(UUIAPI_WINDOW,execSetUITimer)
	MAP_NATIVE(UUIAPI_WINDOW,execGetRect)
	MAP_NATIVE(UUIAPI_WINDOW,execClear)
	MAP_NATIVE(UUIAPI_WINDOW,execHideWindow)
	MAP_NATIVE(UUIAPI_WINDOW,execShowWindow)
	MAP_NATIVE(UUIAPI_WINDOW,execIsMinimizedWindow)
	MAP_NATIVE(UUIAPI_WINDOW,execIsShowWindow)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_WINDOW);

NATIVE_INFO(UUIAPI_CHECKBOX) GNWindowUUIAPI_CHECKBOXNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_CHECKBOX,execToggleDisable)
	MAP_NATIVE(UUIAPI_CHECKBOX,execSetDisable)
	MAP_NATIVE(UUIAPI_CHECKBOX,execIsDisable)
	MAP_NATIVE(UUIAPI_CHECKBOX,execIsChecked)
	MAP_NATIVE(UUIAPI_CHECKBOX,execSetCheck)
	MAP_NATIVE(UUIAPI_CHECKBOX,execSetTitle)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_CHECKBOX);

NATIVE_INFO(UUIAPI_COMBOBOX) GNWindowUUIAPI_COMBOBOXNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_COMBOBOX,execAddStringWithColor)
	MAP_NATIVE(UUIAPI_COMBOBOX,execGetNumOfItems)
	MAP_NATIVE(UUIAPI_COMBOBOX,execClear)
	MAP_NATIVE(UUIAPI_COMBOBOX,execSetSelectedNum)
	MAP_NATIVE(UUIAPI_COMBOBOX,execGetSelectedNum)
	MAP_NATIVE(UUIAPI_COMBOBOX,execGetReserved)
	MAP_NATIVE(UUIAPI_COMBOBOX,execGetString)
	MAP_NATIVE(UUIAPI_COMBOBOX,execSYS_AddStringWithReserved)
	MAP_NATIVE(UUIAPI_COMBOBOX,execAddStringWithReserved)
	MAP_NATIVE(UUIAPI_COMBOBOX,execSYS_AddString)
	MAP_NATIVE(UUIAPI_COMBOBOX,execAddString)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_COMBOBOX);

NATIVE_INFO(UUIAPI_EDITBOX) GNWindowUUIAPI_EDITBOXNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_EDITBOX,execSetAlign)
	MAP_NATIVE(UUIAPI_EDITBOX,execAllSelect)
	MAP_NATIVE(UUIAPI_EDITBOX,execSetHighLight)
	MAP_NATIVE(UUIAPI_EDITBOX,execSetEditType)
	MAP_NATIVE(UUIAPI_EDITBOX,execClear)
	MAP_NATIVE(UUIAPI_EDITBOX,execSimulateBackspace)
	MAP_NATIVE(UUIAPI_EDITBOX,execAddString)
	MAP_NATIVE(UUIAPI_EDITBOX,execSetString)
	MAP_NATIVE(UUIAPI_EDITBOX,execGetString)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_EDITBOX);

NATIVE_INFO(UUIAPI_EFFECTBUTTON) GNWindowUUIAPI_EFFECTBUTTONNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_EFFECTBUTTON,execEndEffect)
	MAP_NATIVE(UUIAPI_EFFECTBUTTON,execBeginEffect)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_EFFECTBUTTON);

NATIVE_INFO(UUIAPI_INVENWEIGHT) GNWindowUUIAPI_INVENWEIGHTNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_INVENWEIGHT,execZeroWeight)
	MAP_NATIVE(UUIAPI_INVENWEIGHT,execReduceWeight)
	MAP_NATIVE(UUIAPI_INVENWEIGHT,execAddWeight)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_INVENWEIGHT);

NATIVE_INFO(UUIAPI_ITEMWINDOW) GNWindowUUIAPI_ITEMWINDOWNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execSetIconIndex)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execSetToggleEffect)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execShowScrollBar)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execSetFaded)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execFindItemByClassID)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execFindItem)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execClear)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execGetItem)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execGetSelectedItem)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execDeleteItem)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execSetItem)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execAddItem)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execClearSelect)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execGetItemNum)
	MAP_NATIVE(UUIAPI_ITEMWINDOW,execGetSelectedNum)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_ITEMWINDOW);

NATIVE_INFO(UUIAPI_LISTCTRL) GNWindowUUIAPI_LISTCTRLNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_LISTCTRL,execShowScrollBar)
	MAP_NATIVE(UUIAPI_LISTCTRL,execSetSelectedIndex)
	MAP_NATIVE(UUIAPI_LISTCTRL,execGetSelectedIndex)
	MAP_NATIVE(UUIAPI_LISTCTRL,execGetRecordCount)
	MAP_NATIVE(UUIAPI_LISTCTRL,execDeleteRecord)
	MAP_NATIVE(UUIAPI_LISTCTRL,execDeleteAllItem)
	MAP_NATIVE(UUIAPI_LISTCTRL,execModifyRecord)
	MAP_NATIVE(UUIAPI_LISTCTRL,execInsertRecord)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_LISTCTRL);

NATIVE_INFO(UUIAPI_MINIMAPCTRL) GNWindowUUIAPI_MINIMAPCTRLNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execResetMinimapData)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execShowCertainLayer)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execDeleteAllCursedWeaponIcon)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execIsOverlapped)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execRequestReduceBtn)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execDrawGridIcon)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execSetSSQStatus)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execSetDailyQuest)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execSetShowQuest)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execDeleteAllTarget)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execDeleteTarget)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execAddTarget)
	MAP_NATIVE(UUIAPI_MINIMAPCTRL,execAdjustMapView)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_MINIMAPCTRL);

NATIVE_INFO(UUIAPI_MULTIEDITBOX) GNWindowUUIAPI_MULTIEDITBOXNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_MULTIEDITBOX,execSetString)
	MAP_NATIVE(UUIAPI_MULTIEDITBOX,execGetString)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_MULTIEDITBOX);

NATIVE_INFO(UUIAPI_MULTISELLITEMINFO) GNWindowUUIAPI_MULTISELLITEMINFONatives[] = 
{ 
	MAP_NATIVE(UUIAPI_MULTISELLITEMINFO,execClear)
	MAP_NATIVE(UUIAPI_MULTISELLITEMINFO,execSetItemInfo)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_MULTISELLITEMINFO);

NATIVE_INFO(UUIAPI_MULTISELLNEEDEDITEM) GNWindowUUIAPI_MULTISELLNEEDEDITEMNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_MULTISELLNEEDEDITEM,execClear)
	MAP_NATIVE(UUIAPI_MULTISELLNEEDEDITEM,execAddData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_MULTISELLNEEDEDITEM);

NATIVE_INFO(UUIAPI_SHORTCUTITEMWINDOW) GNWindowUUIAPI_SHORTCUTITEMWINDOWNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_SHORTCUTITEMWINDOW,execGetShortcutItem)
	MAP_NATIVE(UUIAPI_SHORTCUTITEMWINDOW,execAddShortcutItem)
	MAP_NATIVE(UUIAPI_SHORTCUTITEMWINDOW,execClear)
	MAP_NATIVE(UUIAPI_SHORTCUTITEMWINDOW,execUpdateShortcut)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_SHORTCUTITEMWINDOW);

NATIVE_INFO(UUIAPI_SLIDERCTRL) GNWindowUUIAPI_SLIDERCTRLNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_SLIDERCTRL,execGetTotalTickCount)
	MAP_NATIVE(UUIAPI_SLIDERCTRL,execSetCurrentTick)
	MAP_NATIVE(UUIAPI_SLIDERCTRL,execGetCurrentTick)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_SLIDERCTRL);

NATIVE_INFO(UUIAPI_STATUSBARCTRL) GNWindowUUIAPI_STATUSBARCTRLNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_STATUSBARCTRL,execSetRegenInfo)
	MAP_NATIVE(UUIAPI_STATUSBARCTRL,execSetPointExpPercentRate)
	MAP_NATIVE(UUIAPI_STATUSBARCTRL,execSetPointPercent)
	MAP_NATIVE(UUIAPI_STATUSBARCTRL,execSetPoint)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_STATUSBARCTRL);

NATIVE_INFO(UUIAPI_STATUSICONCTRL) GNWindowUUIAPI_STATUSICONCTRLNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_STATUSICONCTRL,execClear)
	MAP_NATIVE(UUIAPI_STATUSICONCTRL,execAddCol)
	MAP_NATIVE(UUIAPI_STATUSICONCTRL,execAddRow)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_STATUSICONCTRL);

NATIVE_INFO(UUIAPI_TEXTBOX) GNWindowUUIAPI_TEXTBOXNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_TEXTBOX,execSetTooltipString)
	MAP_NATIVE(UUIAPI_TEXTBOX,execGetText)
	MAP_NATIVE(UUIAPI_TEXTBOX,execSetInt)
	MAP_NATIVE(UUIAPI_TEXTBOX,execSetAlign)
	MAP_NATIVE(UUIAPI_TEXTBOX,execSetText)
	MAP_NATIVE(UUIAPI_TEXTBOX,execSetTextColor)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_TEXTBOX);

NATIVE_INFO(UUIAPI_TEXTLISTBOX) GNWindowUUIAPI_TEXTLISTBOXNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_TEXTLISTBOX,execClear)
	MAP_NATIVE(UUIAPI_TEXTLISTBOX,execAddString)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_TEXTLISTBOX);

NATIVE_INFO(UUIAPI_TEXTURECTRL) GNWindowUUIAPI_TEXTURECTRLNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_TEXTURECTRL,execGetTextureName)
	MAP_NATIVE(UUIAPI_TEXTURECTRL,execSetTextureWithObject)
	MAP_NATIVE(UUIAPI_TEXTURECTRL,execSetTextureWithClanCrest)
	MAP_NATIVE(UUIAPI_TEXTURECTRL,execSetTextureCtrlType)
	MAP_NATIVE(UUIAPI_TEXTURECTRL,execSetTexture)
	MAP_NATIVE(UUIAPI_TEXTURECTRL,execSetUV)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_TEXTURECTRL);

NATIVE_INFO(UUIAPI_TREECTRL) GNWindowUUIAPI_TREECTRLNatives[] = 
{ 
	MAP_NATIVE(UUIAPI_TREECTRL,execSetNodeItemTexture)
	MAP_NATIVE(UUIAPI_TREECTRL,execSetNodeItemText)
	MAP_NATIVE(UUIAPI_TREECTRL,execShowScrollBar)
	MAP_NATIVE(UUIAPI_TREECTRL,execGetParentNode)
	MAP_NATIVE(UUIAPI_TREECTRL,execGetChildNode)
	MAP_NATIVE(UUIAPI_TREECTRL,execIsExpandedNode)
	MAP_NATIVE(UUIAPI_TREECTRL,execIsNodeNameExist)
	MAP_NATIVE(UUIAPI_TREECTRL,execDeleteNode)
	MAP_NATIVE(UUIAPI_TREECTRL,execGetExpandedNode)
	MAP_NATIVE(UUIAPI_TREECTRL,execSetExpandedNode)
	MAP_NATIVE(UUIAPI_TREECTRL,execClear)
	MAP_NATIVE(UUIAPI_TREECTRL,execInsertNodeItem)
	MAP_NATIVE(UUIAPI_TREECTRL,execInsertNode)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIAPI_TREECTRL);

NATIVE_INFO(UUIDATA_AGIT) GNWindowUUIDATA_AGITNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_AGIT,execRequestCheckAvailability)
	MAP_NATIVE(UUIDATA_AGIT,execRequestOpenDecoNPC)
	MAP_NATIVE(UUIDATA_AGIT,execGetDecoNPCInfo)
	MAP_NATIVE(UUIDATA_AGIT,execGetAllDecoNPCInfo)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_AGIT);

NATIVE_INFO(UUIDATA_API) GNWindowUUIDATA_APINatives[] = 
{ 
	MAP_NATIVE(UUIDATA_API,execChangeToPrevState)
	MAP_NATIVE(UUIDATA_API,execSetState)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_API);

NATIVE_INFO(UUIDATA_ARTIFACT) GNWindowUUIDATA_ARTIFACTNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_ARTIFACT,execFindArtifactData)
	MAP_NATIVE(UUIDATA_ARTIFACT,execGetAllArtifactData)
	MAP_NATIVE(UUIDATA_ARTIFACT,execGetArtifactEnchantCondition)
	MAP_NATIVE(UUIDATA_ARTIFACT,execGetArtifactMaterialGroupList)
	MAP_NATIVE(UUIDATA_ARTIFACT,execGetArtifactMinEnchantMaterial)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_ARTIFACT);

NATIVE_INFO(UUIDATA_CLAN) GNWindowUUIDATA_CLANNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_CLAN,execRequestOpenUnionWnd)
	MAP_NATIVE(UUIDATA_CLAN,execRequestUnionInfo)
	MAP_NATIVE(UUIDATA_CLAN,execGetSubClanSkillLevel)
	MAP_NATIVE(UUIDATA_CLAN,execGetSkillLevel)
	MAP_NATIVE(UUIDATA_CLAN,execRequestSubClanSkillList)
	MAP_NATIVE(UUIDATA_CLAN,execRequestClanSkillList)
	MAP_NATIVE(UUIDATA_CLAN,execRequestClanInfo)
	MAP_NATIVE(UUIDATA_CLAN,execGetNameValue)
	MAP_NATIVE(UUIDATA_CLAN,execGetAllianceCrestTexture)
	MAP_NATIVE(UUIDATA_CLAN,execGetEmblemTexture)
	MAP_NATIVE(UUIDATA_CLAN,execGetCrestTexture)
	MAP_NATIVE(UUIDATA_CLAN,execGetAllianceName)
	MAP_NATIVE(UUIDATA_CLAN,execGetName)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_CLAN);

NATIVE_INFO(UUIDATA_ENSOUL) GNWindowUUIDATA_ENSOULNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_ENSOUL,execGetEnsoulExtractionFeeInfoByItemId)
	MAP_NATIVE(UUIDATA_ENSOUL,execGetEnsoulFeeInfoByItemId)
	MAP_NATIVE(UUIDATA_ENSOUL,execGetEnsoulStoneInfo)
	MAP_NATIVE(UUIDATA_ENSOUL,execGetEnsoulOptionInfo)
	MAP_NATIVE(UUIDATA_ENSOUL,execGetEnsoulSlotCount)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_ENSOUL);

NATIVE_INFO(UUIDATA_GAMETIP) GNWindowUUIDATA_GAMETIPNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_GAMETIP,execGetDataByIndex)
	MAP_NATIVE(UUIDATA_GAMETIP,execGetDataCount)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_GAMETIP);

NATIVE_INFO(UUIDATA_HENNA) GNWindowUUIDATA_HENNANatives[] = 
{ 
	MAP_NATIVE(UUIDATA_HENNA,execGetDyePotentialSlotFeeUIData)
	MAP_NATIVE(UUIDATA_HENNA,execGetDyePotentialFeeDataBySlot)
	MAP_NATIVE(UUIDATA_HENNA,execGetHennaEmblemTex)
	MAP_NATIVE(UUIDATA_HENNA,execGetDyeCombinationData)
	MAP_NATIVE(UUIDATA_HENNA,execGetDyePotentialFeeData)
	MAP_NATIVE(UUIDATA_HENNA,execGetDyePotentialExpDataList)
	MAP_NATIVE(UUIDATA_HENNA,execGetDyePotentialDataList)
	MAP_NATIVE(UUIDATA_HENNA,execGetDyePotentialData)
	MAP_NATIVE(UUIDATA_HENNA,execGetHennaDyeItemClassID)
	MAP_NATIVE(UUIDATA_HENNA,execGetHennaDyeItemLevel)
	MAP_NATIVE(UUIDATA_HENNA,execGetMaxDyeChargeAmount)
	MAP_NATIVE(UUIDATA_HENNA,execGetDyeEffectSkillInfo)
	MAP_NATIVE(UUIDATA_HENNA,execGetIconTex)
	MAP_NATIVE(UUIDATA_HENNA,execGetDescription)
	MAP_NATIVE(UUIDATA_HENNA,execGetItemName)
	MAP_NATIVE(UUIDATA_HENNA,execGetAddtionNameS)
	MAP_NATIVE(UUIDATA_HENNA,execGetIconTexS)
	MAP_NATIVE(UUIDATA_HENNA,execGetDescriptionS)
	MAP_NATIVE(UUIDATA_HENNA,execGetItemNameS)
	MAP_NATIVE(UUIDATA_HENNA,execGetItemCheck)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_HENNA);

NATIVE_INFO(UUIDATA_HUNTINGZONE) GNWindowUUIDATA_HUNTINGZONENatives[] = 
{ 
	MAP_NATIVE(UUIDATA_HUNTINGZONE,execGetHuntingZoneData)
	MAP_NATIVE(UUIDATA_HUNTINGZONE,execGetHuntingDescription)
	MAP_NATIVE(UUIDATA_HUNTINGZONE,execGetHuntingZone)
	MAP_NATIVE(UUIDATA_HUNTINGZONE,execGetHuntingZoneLoc)
	MAP_NATIVE(UUIDATA_HUNTINGZONE,execGetMaxLevel)
	MAP_NATIVE(UUIDATA_HUNTINGZONE,execGetMinLevel)
	MAP_NATIVE(UUIDATA_HUNTINGZONE,execGetHuntingZoneType)
	MAP_NATIVE(UUIDATA_HUNTINGZONE,execGetHuntingZoneName)
	MAP_NATIVE(UUIDATA_HUNTINGZONE,execIsValidData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_HUNTINGZONE);

NATIVE_INFO(UUIDATA_INVENTORY) GNWindowUUIDATA_INVENTORYNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_INVENTORY,execGetAllDefaultActionPeelItem)
	MAP_NATIVE(UUIDATA_INVENTORY,execGetAllEnchantableInvenItem)
	MAP_NATIVE(UUIDATA_INVENTORY,execGetItemByScriptFilter)
	MAP_NATIVE(UUIDATA_INVENTORY,execGetAllArtifactItem)
	MAP_NATIVE(UUIDATA_INVENTORY,execGetAllQuestItem)
	MAP_NATIVE(UUIDATA_INVENTORY,execGetAllInvenItem)
	MAP_NATIVE(UUIDATA_INVENTORY,execGetAllEquipItem)
	MAP_NATIVE(UUIDATA_INVENTORY,execGetAllItem)
	MAP_NATIVE(UUIDATA_INVENTORY,execIsQuestItemByClassID)
	MAP_NATIVE(UUIDATA_INVENTORY,execIsQuestItem)
	MAP_NATIVE(UUIDATA_INVENTORY,execIsEquipItemByClassID)
	MAP_NATIVE(UUIDATA_INVENTORY,execIsEquipItem)
	MAP_NATIVE(UUIDATA_INVENTORY,execFindItemByClassID)
	MAP_NATIVE(UUIDATA_INVENTORY,execFindItem)
	MAP_NATIVE(UUIDATA_INVENTORY,execHasItemByClassID)
	MAP_NATIVE(UUIDATA_INVENTORY,execHasItem)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_INVENTORY);

NATIVE_INFO(UUIDATA_ITEM) GNWindowUUIDATA_ITEMNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_ITEM,execIsDualInventorySlot)
	MAP_NATIVE(UUIDATA_ITEM,execGetStringMatchingItemList)
	MAP_NATIVE(UUIDATA_ITEM,execIsDefaultActionPeel)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemCreateInfo)
	MAP_NATIVE(UUIDATA_ITEM,execGetEnchantChallengePointData)
	MAP_NATIVE(UUIDATA_ITEM,execGetEnchantChallengePointSettingData)
	MAP_NATIVE(UUIDATA_ITEM,execGetChallengePointGroupID)
	MAP_NATIVE(UUIDATA_ITEM,execGetEnchantScrollSetData)
	MAP_NATIVE(UUIDATA_ITEM,execGetEnchantValidateValue)
	MAP_NATIVE(UUIDATA_ITEM,execGetDBDeleteRemainTimeString)
	MAP_NATIVE(UUIDATA_ITEM,execGetDBDeleteDateString)
	MAP_NATIVE(UUIDATA_ITEM,execGetEnchantBlessScrollData)
	MAP_NATIVE(UUIDATA_ITEM,execGetBlessedItemName)
	MAP_NATIVE(UUIDATA_ITEM,execGetBlessOptionData)
	MAP_NATIVE(UUIDATA_ITEM,execGetEnchantedItemSkillDesc)
	MAP_NATIVE(UUIDATA_ITEM,execGetAutomaticUseItemType)
	MAP_NATIVE(UUIDATA_ITEM,execGetExMeshName)
	MAP_NATIVE(UUIDATA_ITEM,execGetExTextureName)
	MAP_NATIVE(UUIDATA_ITEM,execGetMeshName)
	MAP_NATIVE(UUIDATA_ITEM,execGetTextureName)
	MAP_NATIVE(UUIDATA_ITEM,execGetInventoryType)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemNameClass)
	MAP_NATIVE(UUIDATA_ITEM,execGetSetItemPeaceEffectDescription)
	MAP_NATIVE(UUIDATA_ITEM,execGetSetItemPeaceEffectNum)
	MAP_NATIVE(UUIDATA_ITEM,execGetEtcItemTextureName)
	MAP_NATIVE(UUIDATA_ITEM,execGetSetItemEnchantEffectDescription)
	MAP_NATIVE(UUIDATA_ITEM,execGetSetItemEnchantConditionalValue)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemSetEnchantEffectNum)
	MAP_NATIVE(UUIDATA_ITEM,execGetSetItemID)
	MAP_NATIVE(UUIDATA_ITEM,execGetSetItemFirstID)
	MAP_NATIVE(UUIDATA_ITEM,execIsExistSetItem)
	MAP_NATIVE(UUIDATA_ITEM,execGetSetItemNum)
	MAP_NATIVE(UUIDATA_ITEM,execGetRefineryItemName)
	MAP_NATIVE(UUIDATA_ITEM,execIsMagicWeapon)
	MAP_NATIVE(UUIDATA_ITEM,execIsCrystallizable)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemInfoString)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemInfo)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemCrystalType)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemDataType)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemWeight)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemDescription)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemTextureName)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemAdditionalName)
	MAP_NATIVE(UUIDATA_ITEM,execGetItemName)
	MAP_NATIVE(UUIDATA_ITEM,execGetDataCount)
	MAP_NATIVE(UUIDATA_ITEM,execFindNextID)
	MAP_NATIVE(UUIDATA_ITEM,execGetNextID)
	MAP_NATIVE(UUIDATA_ITEM,execGetFirstID)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_ITEM);

NATIVE_INFO(UUIDATA_MACRO) GNWindowUUIDATA_MACRONatives[] = 
{ 
	MAP_NATIVE(UUIDATA_MACRO,execGetMacroPresetInfo)
	MAP_NATIVE(UUIDATA_MACRO,execGetMacroPresetIDs)
	MAP_NATIVE(UUIDATA_MACRO,execGetMacroSkillIDList)
	MAP_NATIVE(UUIDATA_MACRO,execGetMacroCommandList)
	MAP_NATIVE(UUIDATA_MACRO,execGetUseSkillID)
	MAP_NATIVE(UUIDATA_MACRO,execGetMacroCount)
	MAP_NATIVE(UUIDATA_MACRO,execGetMacroInfo)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_MACRO);

NATIVE_INFO(UUIDATA_NPC) GNWindowUUIDATA_NPCNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_NPC,execGetNPCClass)
	MAP_NATIVE(UUIDATA_NPC,execGetNPCTextureList)
	MAP_NATIVE(UUIDATA_NPC,execGetNPCMesh)
	MAP_NATIVE(UUIDATA_NPC,execGetMentoringNPCId)
	MAP_NATIVE(UUIDATA_NPC,execGetNPCIconName)
	MAP_NATIVE(UUIDATA_NPC,execGetSummonGrade)
	MAP_NATIVE(UUIDATA_NPC,execGetSummonMaxCount)
	MAP_NATIVE(UUIDATA_NPC,execGetSummonSort)
	MAP_NATIVE(UUIDATA_NPC,execGetNpcProperty)
	MAP_NATIVE(UUIDATA_NPC,execGetNPCNickName)
	MAP_NATIVE(UUIDATA_NPC,execGetNPCName)
	MAP_NATIVE(UUIDATA_NPC,execIsValidData)
	MAP_NATIVE(UUIDATA_NPC,execGetNextID)
	MAP_NATIVE(UUIDATA_NPC,execGetFirstID)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_NPC);

NATIVE_INFO(UUIDATA_PARTY) GNWindowUUIDATA_PARTYNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_PARTY,execGetMemberTacticalSign)
	MAP_NATIVE(UUIDATA_PARTY,execGetMemberVirtualName)
	MAP_NATIVE(UUIDATA_PARTY,execMovePartyMember)
	MAP_NATIVE(UUIDATA_PARTY,execGetMemberName)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_PARTY);

NATIVE_INFO(UUIDATA_PAWNVIEWER) GNWindowUUIDATA_PAWNVIEWERNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execShowSelectedBone)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetBoneNameList)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execEquipNPCItem)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execPlayNPCAnim)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetNPCAnimationList)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execSpawnActorAtMyLocation)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execApplyPawnSetting)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execSpawnNPC)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execApplyRightSheathingHide)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execApplyRightOffset)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execApplyRightRotation)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execApplyRightAttachBoneName)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execApplyLeftSheathingHide)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execApplyLeftOffset)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execApplyLeftRotation)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execApplyLeftAttachBoneName)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetSkillLevelListByID)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execIsProfilingEmitter)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execUpdateEmitterProfiling)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execStopEmitterProfiling)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execExecuteEmitterProfiling)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execSetGroundSkillCursor)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execSetSimpleEmitter)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execClearDummyPawn)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execSpawnDummyPawn)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execAddSkillByType)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execAddSkillByVisualEffect)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execAddSkillByID)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execAddSkillByName)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execExecuteSkill)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execStartSimulPawn)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execSetArrowRatio)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execSetSkillDeleteRatio)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execSetSkillCancelRatio)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execSetSkillUseRatio)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execSetPawnNum)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execSaveSimulMesh)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execResetSimulMesh)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execLoadSimulMesh)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execSetMantleOffset)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetMantleOffset)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetChestMesh)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execUpdateAnimForce)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execRemoveAnimForce)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execAddAnimForce)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetAnimForceInfo)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetAnimForceNumber)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetSimulAnimName)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execUpdateCollision)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execRemoveCollision)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execAddCollision)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetCollisionInfo)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetCollisionType)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetCollisionNumber)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execRemoveAnchorVertex)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execAddAnchorVertex)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetVertexNumber)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetSimulMeshName)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetAnimFrame)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execPlayPCComboAnim)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execPlayPCAnim)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetPCAnimationList)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execApplyItemEnchanted)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execApplyItemRefinery)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execEquipPCItem)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetHairAccOffset)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execAdjustHairAccOffset)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetBHairInfo)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetAHairInfo)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetFaceInfo)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execApplyHairColor)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execApplyHair)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execApplyFace)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetExceptionalHairColorList)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetExceptionallHairList)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetExceptionalFaceList)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execChangeMyPC)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execDuplicateCharacter)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execSpawnCharacter)
	MAP_NATIVE(UUIDATA_PAWNVIEWER,execGetClassNameList)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_PAWNVIEWER);

NATIVE_INFO(UUIDATA_PET) GNWindowUUIDATA_PETNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_PET,execGetPetEXPRate)
	MAP_NATIVE(UUIDATA_PET,execGetSummonNum)
	MAP_NATIVE(UUIDATA_PET,execIsHavePet)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_PET);

NATIVE_INFO(UUIDATA_PLAYER) GNWindowUUIDATA_PLAYERNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_PLAYER,execSetAbilityPoint)
	MAP_NATIVE(UUIDATA_PLAYER,execIsInPrison)
	MAP_NATIVE(UUIDATA_PLAYER,execIsInDethrone)
	MAP_NATIVE(UUIDATA_PLAYER,execGetMeshType)
	MAP_NATIVE(UUIDATA_PLAYER,execGetInventoryCount)
	MAP_NATIVE(UUIDATA_PLAYER,execGetInventoryLimit)
	MAP_NATIVE(UUIDATA_PLAYER,execHasCrystallizeAbility)
	MAP_NATIVE(UUIDATA_PLAYER,execGetPlayerEnvironment)
	MAP_NATIVE(UUIDATA_PLAYER,execGetPlayerMoveType)
	MAP_NATIVE(UUIDATA_PLAYER,execGetPlayerEXPRate)
	MAP_NATIVE(UUIDATA_PLAYER,execGetRecipeShopMsg)
	MAP_NATIVE(UUIDATA_PLAYER,execGetPlayerID)
	MAP_NATIVE(UUIDATA_PLAYER,execIsLegend)
	MAP_NATIVE(UUIDATA_PLAYER,execIsHero)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_PLAYER);

NATIVE_INFO(UUIDATA_QUEST) GNWindowUUIDATA_QUESTNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_QUEST,execIsAcceptableQuest)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestStatus)
	MAP_NATIVE(UUIDATA_QUEST,execIsDoingQuest)
	MAP_NATIVE(UUIDATA_QUEST,execIsClearedQuest)
	MAP_NATIVE(UUIDATA_QUEST,execIsClassLimitContains)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestPriority)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestCategoryID)
	MAP_NATIVE(UUIDATA_QUEST,execGetMarkType)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestReward)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestIscategory)
	MAP_NATIVE(UUIDATA_QUEST,execIsShowableItemNumQuest)
	MAP_NATIVE(UUIDATA_QUEST,execIsShowableJournalQuest)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestZoneName)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestZone)
	MAP_NATIVE(UUIDATA_QUEST,execGetClearedQuest)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestType)
	MAP_NATIVE(UUIDATA_QUEST,execGetMaxLevel)
	MAP_NATIVE(UUIDATA_QUEST,execGetMinLevel)
	MAP_NATIVE(UUIDATA_QUEST,execGetIntro)
	MAP_NATIVE(UUIDATA_QUEST,execGetRequirement)
	MAP_NATIVE(UUIDATA_QUEST,execGetStartNPCID)
	MAP_NATIVE(UUIDATA_QUEST,execGetStartNPCLoc)
	MAP_NATIVE(UUIDATA_QUEST,execGetTargetName)
	MAP_NATIVE(UUIDATA_QUEST,execGetTargetLoc)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestItem)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestDescription)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestJournalNameSplit)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestJournalNameLine)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestJournalName)
	MAP_NATIVE(UUIDATA_QUEST,execGetQuestName)
	MAP_NATIVE(UUIDATA_QUEST,execIsMinimapOnly)
	MAP_NATIVE(UUIDATA_QUEST,execIsValidData)
	MAP_NATIVE(UUIDATA_QUEST,execGetNextID)
	MAP_NATIVE(UUIDATA_QUEST,execGetFirstID)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_QUEST);

NATIVE_INFO(UUIDATA_RAID) GNWindowUUIDATA_RAIDNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_RAID,execGetRaidDataKeyList)
	MAP_NATIVE(UUIDATA_RAID,execGetRaidRecommendLevel)
	MAP_NATIVE(UUIDATA_RAID,execGetRaidLoc)
	MAP_NATIVE(UUIDATA_RAID,execGetRaidDescription)
	MAP_NATIVE(UUIDATA_RAID,execGetRaidMonsterZone)
	MAP_NATIVE(UUIDATA_RAID,execGetRaidMonsterLevel)
	MAP_NATIVE(UUIDATA_RAID,execGetRaidMonsterID)
	MAP_NATIVE(UUIDATA_RAID,execIsValidData)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_RAID);

NATIVE_INFO(UUIDATA_RECIPE) GNWindowUUIDATA_RECIPENatives[] = 
{ 
	MAP_NATIVE(UUIDATA_RECIPE,execIsOfferingItem)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeMaterialItem)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeIsMultipleProduct)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeSuccessRate)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeDescription)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeLevel)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeMpConsume)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeCrystalType)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeProductNum)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeProductID)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeIconName)
	MAP_NATIVE(UUIDATA_RECIPE,execGetRecipeItemID)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_RECIPE);

NATIVE_INFO(UUIDATA_REFINERYOPTION) GNWindowUUIDATA_REFINERYOPTIONNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_REFINERYOPTION,execGetOptionDescription)
	MAP_NATIVE(UUIDATA_REFINERYOPTION,execGetQuality)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_REFINERYOPTION);

NATIVE_INFO(UUIDATA_SKILL) GNWindowUUIDATA_SKILLNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_SKILL,execGetMSCondWeapons)
	MAP_NATIVE(UUIDATA_SKILL,execGetMSCondEquipType)
	MAP_NATIVE(UUIDATA_SKILL,execGetMSCondItem)
	MAP_NATIVE(UUIDATA_SKILL,execGetAutomaticUseSkillType)
	MAP_NATIVE(UUIDATA_SKILL,execGetNextDefaultToppingSkillExtraInfo)
	MAP_NATIVE(UUIDATA_SKILL,execGetFirstDefaultToppingSkillExtraInfo)
	MAP_NATIVE(UUIDATA_SKILL,execGetToppingSkillExtraInfo)
	MAP_NATIVE(UUIDATA_SKILL,execIsToppingSkill)
	MAP_NATIVE(UUIDATA_SKILL,execGetCurrentSkillList)
	MAP_NATIVE(UUIDATA_SKILL,execIsAvailableClass)
	MAP_NATIVE(UUIDATA_SKILL,execSkillIsNewOrUp)
	MAP_NATIVE(UUIDATA_SKILL,execGetUltimateSkillLevel)
	MAP_NATIVE(UUIDATA_SKILL,execGetCastRange)
	MAP_NATIVE(UUIDATA_SKILL,execGetMpConsume)
	MAP_NATIVE(UUIDATA_SKILL,execGetHpConsume)
	MAP_NATIVE(UUIDATA_SKILL,execIsAlchemySkill)
	MAP_NATIVE(UUIDATA_SKILL,execGetOperateType)
	MAP_NATIVE(UUIDATA_SKILL,execGetEnchantIcon)
	MAP_NATIVE(UUIDATA_SKILL,execGetEnchantSkillLevel)
	MAP_NATIVE(UUIDATA_SKILL,execGetEnchantName)
	MAP_NATIVE(UUIDATA_SKILL,execGetDescription)
	MAP_NATIVE(UUIDATA_SKILL,execGetName)
	MAP_NATIVE(UUIDATA_SKILL,execGetIconPanel2)
	MAP_NATIVE(UUIDATA_SKILL,execGetIconPanel)
	MAP_NATIVE(UUIDATA_SKILL,execGetIconName)
	MAP_NATIVE(UUIDATA_SKILL,execGetDataCount)
	MAP_NATIVE(UUIDATA_SKILL,execGetNextID)
	MAP_NATIVE(UUIDATA_SKILL,execGetFirstID)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_SKILL);

NATIVE_INFO(UUIDATA_STATICOBJECT) GNWindowUUIDATA_STATICOBJECTNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_STATICOBJECT,execGetStaticObjectShowHP)
	MAP_NATIVE(UUIDATA_STATICOBJECT,execGetStaticObjectName)
	MAP_NATIVE(UUIDATA_STATICOBJECT,execGetServerObjectHP)
	MAP_NATIVE(UUIDATA_STATICOBJECT,execGetServerObjectMaxHP)
	MAP_NATIVE(UUIDATA_STATICOBJECT,execGetServerObjectType)
	MAP_NATIVE(UUIDATA_STATICOBJECT,execGetServerObjectName)
	MAP_NATIVE(UUIDATA_STATICOBJECT,execGetServerObjectNameID)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_STATICOBJECT);

NATIVE_INFO(UUIDATA_TARGET) GNWindowUUIDATA_TARGETNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetActor)
	MAP_NATIVE(UUIDATA_TARGET,execIsVehicle)
	MAP_NATIVE(UUIDATA_TARGET,execIsHPShowableNPC)
	MAP_NATIVE(UUIDATA_TARGET,execIsCanBeAttacked)
	MAP_NATIVE(UUIDATA_TARGET,execIsPet)
	MAP_NATIVE(UUIDATA_TARGET,execIsNpc)
	MAP_NATIVE(UUIDATA_TARGET,execIsServerObject)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetClassID)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetPledgeID)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetNameColor)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetName)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetMP)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetMaxMP)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetHP)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetMaxHP)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetUserRank)
	MAP_NATIVE(UUIDATA_TARGET,execGetTargetID)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_TARGET);

NATIVE_INFO(UUIDATA_TRANSFORM) GNWindowUUIDATA_TRANSFORMNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_TRANSFORM,execGetNpcID)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_TRANSFORM);

NATIVE_INFO(UUIDATA_TUTORIALLIST) GNWindowUUIDATA_TUTORIALLISTNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_TUTORIALLIST,execCheckTutorial)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_TUTORIALLIST);

NATIVE_INFO(UUIDATA_USER) GNWindowUUIDATA_USERNatives[] = 
{ 
	MAP_NATIVE(UUIDATA_USER,execIsDethroneComrade)
	MAP_NATIVE(UUIDATA_USER,execIsDethroneEnemy)
	MAP_NATIVE(UUIDATA_USER,execIsPrologueGrowType)
	MAP_NATIVE(UUIDATA_USER,execGetPrologueGrowType)
	MAP_NATIVE(UUIDATA_USER,execGetClanType)
	MAP_NATIVE(UUIDATA_USER,execGetUserName)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUIDATA_USER);

NATIVE_INFO(UUnionActionAPI) GNWindowUUnionActionAPINatives[] = 
{ 
	MAP_NATIVE(UUnionActionAPI,execRequestUnionStart)
	MAP_NATIVE(UUnionActionAPI,execRequestUnionSummon)
	MAP_NATIVE(UUnionActionAPI,execRequestUnionAdjust)
	MAP_NATIVE(UUnionActionAPI,execRequestUnionRequest)
	MAP_NATIVE(UUnionActionAPI,execRequestUnionWithdraw)
	MAP_NATIVE(UUnionActionAPI,execRequestUnionChange)
	MAP_NATIVE(UUnionActionAPI,execRequestUnionJoin)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UUnionActionAPI);

NATIVE_INFO(UVehicleAPI) GNWindowUVehicleAPINatives[] = 
{ 
	MAP_NATIVE(UVehicleAPI,execAirShipMoveDown)
	MAP_NATIVE(UVehicleAPI,execAirShipMoveUp)
	MAP_NATIVE(UVehicleAPI,execRequestExAirShipTeleport)
	MAP_NATIVE(UVehicleAPI,execGetVehicle)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UVehicleAPI);

NATIVE_INFO(UWebBrowserHandle) GNWindowUWebBrowserHandleNatives[] = 
{ 
	MAP_NATIVE(UWebBrowserHandle,execReloadCurPage)
	MAP_NATIVE(UWebBrowserHandle,execGoForwardPage)
	MAP_NATIVE(UWebBrowserHandle,execCanGoForwardPage)
	MAP_NATIVE(UWebBrowserHandle,execGoBackPage)
	MAP_NATIVE(UWebBrowserHandle,execCanGoBackPage)
	MAP_NATIVE(UWebBrowserHandle,execNavigate)
	MAP_NATIVE(UWebBrowserHandle,execSetCookie)
	MAP_NATIVE(UWebBrowserHandle,execGetCookie)
	MAP_NATIVE(UWebBrowserHandle,execExecuteJavaScript)
	MAP_NATIVE(UWebBrowserHandle,execGetUrl)
	MAP_NATIVE(UWebBrowserHandle,execGetURLEncodedAsUTF8)
	MAP_NATIVE(UWebBrowserHandle,execExecuteJavaScriptWithFloatResult)
	MAP_NATIVE(UWebBrowserHandle,execExecuteJavaScriptWithIntegerResult)
	MAP_NATIVE(UWebBrowserHandle,execExecuteJavaScriptWithStringResult)
	MAP_NATIVE(UWebBrowserHandle,execGoToHistoryOffset)
	MAP_NATIVE(UWebBrowserHandle,execNavigateAsGetJson)
	MAP_NATIVE(UWebBrowserHandle,execNavigateAsGet)
	MAP_NATIVE(UWebBrowserHandle,execNavigateAsPost)
	MAP_NATIVE(UWebBrowserHandle,execPushParam)
	MAP_NATIVE(UWebBrowserHandle,execBeginParam)
	MAP_NATIVE(UWebBrowserHandle,execWithoutWebSession)
	MAP_NATIVE(UWebBrowserHandle,execWithWebSession)
	{NULL,NULL}
};
IMPLEMENT_NATIVE_HANDLER(NWindow,UWebBrowserHandle);

#endif // NATIVES_ONLY
#endif // __STATIC_LINK
