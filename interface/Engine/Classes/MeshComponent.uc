//=============================================================
// MeshComponent
// flagoftiger 20070221
//=============================================================

class MeshComponent extends Object
	native;

enum EMeshComponentStatus
{
	MCS_None,
	MCS_FADEIN,			// ?????????? ?????? ?????? ????
	MCS_FADEOUT,		// ???????? ???? ?????? ???????? ????
	MCS_READYTOFADEOUT,	// ?????? ???? ???????? ????
	MCS_CREATED,		// ?? ???????? ???? (???? ???? ??)
	MCS_DELETEME		// ?????????? ???? ????
};

enum EMeshSimulationType
{
	EMST_None,
	EMST_HAIR,			// ?????? ??????????????
	EMST_CLOTH			// ?????? ???? ??????????
};

enum EMeshMirrorType
{
	EMMT_NONE,
	EMMT_YZ,	// FPlane(1, 0, 0, 0)
	EMMT_ZX,	// FPlane(0, 1, 0, 0)
	EMMT_XY,	// FPlane(0, 0, 1, 0)
};

struct native constructive MeshComponentData
{
	var Name			MeshName;
	var array<Name>		TexNames;
	var Name			TexChangableName;		// Texnames???? ?????? Name?? ?????? ?????? ?????? ?????????? ??????????.?????????? ???????? ???????? ???????? UserDefineMaterial?? ???????? ??????????.by elsacred
	var	int				BodyPart;				// ???? ?????? Slot?????? Mesh???? ????????
	var bool			bAnimOwner;				// ???????????? ???? ????????
	var int				SimulationType;				// ???? ???????????? ???? ????????
	var int				AttachType;				// Attach Type (????, ??????)
	var Name			AttachBoneName;			// Attach?? Bone Name
	var Vector			AttachOrigin;			// Mesh?? ???????? Origin (?????????????? ????)
	var Rotator			AttachRotOrigin;		// Mesh?? ???????? RotOrigin (?????????????? ????)
	var int				AttachMirrorType;		// ???????? ?????? ???? (e_hand)
	var Vector			RenderScale;			// ?????? ?????? (Pawn?????????? ???? ?????? ???? ???? ??????)
	var Color			ColorVariationColor;
	var bool			bRender;
};

var private Actor				Owner;
var	private Mesh				Mesh;	
var	private MeshInstance		MeshInstance;
var	private array<Material>		Materials;
var MeshComponent				LastMeshComponent;
var MeshComponent				NextMeshComponent;
var MeshComponent				AnimMeshComponent;		// Animation?? ???? MeshComponent?? ??????
var MeshComponentData			MeshData;

var private	float				fAlphaFactor;
var private bool				bLoaded;
var private bool				bByResourceManager;
var private EMeshComponentStatus MeshComponentStatus;
var int							SkinnedDataIndex;
var private bool				m_bRender;


// Decompiled with UE Explorer.
defaultproperties
{
    SkinnedDataIndex=-1
    m_bRender=true
}